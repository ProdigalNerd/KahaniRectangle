{"ast":null,"code":"import _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { glob } from './Global.js';\nimport { Util } from './Util.js';\nvar now = function () {\n  if (glob.performance && glob.performance.now) {\n    return function () {\n      return glob.performance.now();\n    };\n  }\n  return function () {\n    return new Date().getTime();\n  };\n}();\nexport var Animation = /*#__PURE__*/function () {\n  function Animation(func, layers) {\n    _classCallCheck(this, Animation);\n    this.id = Animation.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now(),\n      frameRate: 0\n    };\n    this.func = func;\n    this.setLayers(layers);\n  }\n  _createClass(Animation, [{\n    key: \"setLayers\",\n    value: function setLayers(layers) {\n      var lays = [];\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        lays = layers;\n      } else {\n        lays = [layers];\n      }\n      this.layers = lays;\n      return this;\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.layers;\n    }\n  }, {\n    key: \"addLayer\",\n    value: function addLayer(layer) {\n      var layers = this.layers,\n        len = layers.length,\n        n;\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n      this.layers.push(layer);\n      return true;\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var a = Animation,\n        animations = a.animations,\n        len = animations.length,\n        n;\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n      Animation._addAnimation(this);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      Animation._removeAnimation(this);\n      return this;\n    }\n  }, {\n    key: \"_updateFrameObject\",\n    value: function _updateFrameObject(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  }], [{\n    key: \"_addAnimation\",\n    value: function _addAnimation(anim) {\n      this.animations.push(anim);\n      this._handleAnimation();\n    }\n  }, {\n    key: \"_removeAnimation\",\n    value: function _removeAnimation(anim) {\n      var id = anim.id,\n        animations = this.animations,\n        len = animations.length,\n        n;\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === id) {\n          this.animations.splice(n, 1);\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"_runFrames\",\n    value: function _runFrames() {\n      var layerHash = {},\n        animations = this.animations,\n        anim,\n        layers,\n        func,\n        n,\n        i,\n        layersLen,\n        layer,\n        key,\n        needRedraw;\n      for (n = 0; n < animations.length; n++) {\n        anim = animations[n];\n        layers = anim.layers;\n        func = anim.func;\n        anim._updateFrameObject(now());\n        layersLen = layers.length;\n        if (func) {\n          needRedraw = func.call(anim, anim.frame) !== false;\n        } else {\n          needRedraw = true;\n        }\n        if (!needRedraw) {\n          continue;\n        }\n        for (i = 0; i < layersLen; i++) {\n          layer = layers[i];\n          if (layer._id !== undefined) {\n            layerHash[layer._id] = layer;\n          }\n        }\n      }\n      for (key in layerHash) {\n        if (!layerHash.hasOwnProperty(key)) {\n          continue;\n        }\n        layerHash[key].batchDraw();\n      }\n    }\n  }, {\n    key: \"_animationLoop\",\n    value: function _animationLoop() {\n      var Anim = Animation;\n      if (Anim.animations.length) {\n        Anim._runFrames();\n        Util.requestAnimFrame(Anim._animationLoop);\n      } else {\n        Anim.animRunning = false;\n      }\n    }\n  }, {\n    key: \"_handleAnimation\",\n    value: function _handleAnimation() {\n      if (!this.animRunning) {\n        this.animRunning = true;\n        Util.requestAnimFrame(this._animationLoop);\n      }\n    }\n  }]);\n  return Animation;\n}();\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;","map":{"version":3,"names":["glob","Util","now","performance","Date","getTime","Animation","func","layers","id","animIdCounter","frame","time","timeDiff","lastTime","frameRate","setLayers","lays","length","layer","len","n","_id","push","a","animations","stop","_addAnimation","_removeAnimation","anim","_handleAnimation","splice","layerHash","i","layersLen","key","needRedraw","_updateFrameObject","call","undefined","hasOwnProperty","batchDraw","Anim","_runFrames","requestAnimFrame","_animationLoop","animRunning"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/konva/lib/Animation.js"],"sourcesContent":["import { glob } from './Global.js';\nimport { Util } from './Util.js';\nvar now = (function () {\n    if (glob.performance && glob.performance.now) {\n        return function () {\n            return glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nexport class Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        var lays = [];\n        if (!layers) {\n            lays = [];\n        }\n        else if (layers.length > 0) {\n            lays = layers;\n        }\n        else {\n            lays = [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        var layers = this.layers, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        var a = Animation, animations = a.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        var id = anim.id, animations = this.animations, len = animations.length, n;\n        for (n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        var layerHash = {}, animations = this.animations, anim, layers, func, n, i, layersLen, layer, key, needRedraw;\n        for (n = 0; n < animations.length; n++) {\n            anim = animations[n];\n            layers = anim.layers;\n            func = anim.func;\n            anim._updateFrameObject(now());\n            layersLen = layers.length;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (i = 0; i < layersLen; i++) {\n                layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        var Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}