{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/src/components/Scene/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Stage, Layer } from 'react-konva';\nimport Rectangle from '../Rectangle';\nimport Button from '@mui/material/Button';\nimport './Scene.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst View = _ref => {\n  let {\n    shapes,\n    addRectangle\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addRectangle,\n        variant: \"contained\",\n        children: \"Add Rectangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Stage, {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: shapes.map(shape => /*#__PURE__*/_jsxDEV(Rectangle, {\n          shape: shape\n        }, shape.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = View;\nconst Scene = () => {\n  _s();\n  const [shapes, setShapes] = useState([]);\n  const colors = ['blue', 'black', 'red', 'green', 'yellow'];\n  console.log('hit');\n  useEffect(() => {\n    setShapes([{\n      key: 0,\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 100,\n      fill: colors[0],\n      draggable: true,\n      onDragend: () => {}\n    }]);\n    /* eslint-disable-next-line */\n  }, [setShapes]);\n  const hookProps = {\n    addRectangle: () => {\n      setShapes([...shapes, {\n        key: shapes.length,\n        x: 100,\n        y: 100,\n        width: 200,\n        height: 100,\n        fill: colors[parseInt(Math.random() * colors.length, 10)],\n        draggable: true\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    shapes: shapes,\n    ...hookProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"wtD9lBzMz6qqEJmV5/sfl1JQYww=\");\n_c2 = Scene;\nexport default Scene;\nvar _c, _c2;\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"Scene\");","map":{"version":3,"names":["React","useEffect","useState","Stage","Layer","Rectangle","Button","View","shapes","addRectangle","window","innerWidth","innerHeight","map","shape","key","Scene","setShapes","colors","console","log","x","y","width","height","fill","draggable","onDragend","hookProps","length","parseInt","Math","random"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/src/components/Scene/index.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react';\nimport { Stage, Layer } from 'react-konva';\nimport { RectDef } from '../../interfaces/RectDef';\nimport Rectangle from '../Rectangle';\nimport Button from '@mui/material/Button';\nimport './Scene.css';\n\ninterface SceneProps {\n  shapes: Array<RectDef>,\n  addRectangle(): void,\n}\n\nconst View: FC<SceneProps> = ({ shapes, addRectangle }) => (\n  <>\n    <div className=\"controls\">\n      <Button onClick={addRectangle} variant=\"contained\">Add Rectangle</Button>\n    </div>\n    <Stage width={window.innerWidth} height={window.innerHeight}>\n      <Layer>\n        {shapes.map((shape) => (\n          <Rectangle key={shape.key} shape={shape} />\n        ))}\n      </Layer>\n    </Stage>\n  </>\n);\n\nconst Scene: FC = () => {\n  const [shapes, setShapes] = useState<RectDef[]>([]);\n  const colors = ['blue', 'black', 'red', 'green', 'yellow'];\n  console.log('hit');\n\n  useEffect(() => {\n    setShapes([\n      {\n        key: 0,\n        x: 100,\n        y: 100,\n        width: 200,\n        height: 100,\n        fill: colors[0],\n        draggable: true,\n        onDragend: () => {}\n      } as RectDef\n    ]);\n    /* eslint-disable-next-line */\n  }, [setShapes]);\n\n  const hookProps = {\n    addRectangle: () => {\n      setShapes([\n        ...shapes,\n        {\n          key: shapes.length,\n          x: 100,\n          y: 100,\n          width: 200,\n          height: 100,\n          fill: colors[parseInt(Math.random() * colors.length, 10)],\n          draggable: true,\n        }\n      ])\n    },\n  };\n\n  return (\n    <View shapes={shapes} {...hookProps} />\n  );\n};\n\nexport default Scene;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,KAAK,EAAEC,KAAK,QAAQ,aAAa;AAE1C,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,aAAa;AAAC;AAAA;AAOrB,MAAMC,IAAoB,GAAG;EAAA,IAAC;IAAEC,MAAM;IAAEC;EAAa,CAAC;EAAA,oBACpD;IAAA,wBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,MAAM;QAAC,OAAO,EAAEA,YAAa;QAAC,OAAO,EAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAuB;MAAA;MAAA;MAAA;IAAA,QACrE,eACN,QAAC,KAAK;MAAC,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAC,MAAM,EAAED,MAAM,CAACE,WAAY;MAAA,uBAC1D,QAAC,KAAK;QAAA,UACHJ,MAAM,CAACK,GAAG,CAAEC,KAAK,iBAChB,QAAC,SAAS;UAAiB,KAAK,EAAEA;QAAM,GAAxBA,KAAK,CAACC,GAAG;UAAA;UAAA;UAAA;QAAA,QAC1B;MAAC;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACP;AAAA,CACJ;AAAC,KAbIR,IAAoB;AAe1B,MAAMS,KAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACR,MAAM,EAAES,SAAS,CAAC,GAAGf,QAAQ,CAAY,EAAE,CAAC;EACnD,MAAMgB,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAElBnB,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CACR;MACEF,GAAG,EAAE,CAAC;MACNM,CAAC,EAAE,GAAG;MACNC,CAAC,EAAE,GAAG;MACNC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAEP,MAAM,CAAC,CAAC,CAAC;MACfQ,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,MAAM,CAAC;IACpB,CAAC,CACF,CAAC;IACF;EACF,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMW,SAAS,GAAG;IAChBnB,YAAY,EAAE,MAAM;MAClBQ,SAAS,CAAC,CACR,GAAGT,MAAM,EACT;QACEO,GAAG,EAAEP,MAAM,CAACqB,MAAM;QAClBR,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE,GAAG;QACNC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,IAAI,EAAEP,MAAM,CAACY,QAAQ,CAACC,IAAI,CAACC,MAAM,EAAE,GAAGd,MAAM,CAACW,MAAM,EAAE,EAAE,CAAC,CAAC;QACzDH,SAAS,EAAE;MACb,CAAC,CACF,CAAC;IACJ;EACF,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,MAAM,EAAElB,MAAO;IAAA,GAAKoB;EAAS;IAAA;IAAA;IAAA;EAAA,QAAI;AAE3C,CAAC;AAAC,GAzCIZ,KAAS;AAAA,MAATA,KAAS;AA2Cf,eAAeA,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}