{"ast":null,"code":"import _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport var Path = /*#__PURE__*/function (_Shape) {\n  _inherits(Path, _Shape);\n  var _super = _createSuper(Path);\n  function Path(config) {\n    var _this;\n    _classCallCheck(this, Path);\n    _this = _super.call(this, config);\n    _this.dataArray = [];\n    _this.pathLength = 0;\n    _this.dataArray = Path.parsePathData(_this.data());\n    _this.pathLength = 0;\n    for (var i = 0; i < _this.dataArray.length; ++i) {\n      _this.pathLength += _this.dataArray[i].pathLength;\n    }\n    _this.on('dataChange.konva', function () {\n      this.dataArray = Path.parsePathData(this.data());\n      this.pathLength = 0;\n      for (var i = 0; i < this.dataArray.length; ++i) {\n        this.pathLength += this.dataArray[i].pathLength;\n      }\n    });\n    return _this;\n  }\n  _createClass(Path, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var ca = this.dataArray;\n      context.beginPath();\n      var isClosed = false;\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n          case 'A':\n            var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n            break;\n          case 'z':\n            isClosed = true;\n            context.closePath();\n            break;\n        }\n      }\n      if (!isClosed && !this.hasFill()) {\n        context.strokeShape(this);\n      } else {\n        context.fillStrokeShape(this);\n      }\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var points = [];\n      this.dataArray.forEach(function (data) {\n        if (data.command === 'A') {\n          var start = data.points[4];\n          var dTheta = data.points[5];\n          var end = data.points[4] + dTheta;\n          var inc = Math.PI / 180.0;\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          }\n          if (dTheta < 0) {\n            for (var t = start - inc; t > end; t -= inc) {\n              var point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n              points.push(point.x, point.y);\n            }\n          } else {\n            for (var _t = start + inc; _t < end; _t += inc) {\n              var _point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], _t, 0);\n              points.push(_point.x, _point.y);\n            }\n          }\n        } else if (data.command === 'C') {\n          for (var _t2 = 0.0; _t2 <= 1; _t2 += 0.01) {\n            var _point2 = Path.getPointOnCubicBezier(_t2, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n            points.push(_point2.x, _point2.y);\n          }\n        } else {\n          points = points.concat(data.points);\n        }\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        if (!isNaN(x)) {\n          minX = Math.min(minX, x);\n          maxX = Math.max(maxX, x);\n        }\n        if (!isNaN(y)) {\n          minY = Math.min(minY, y);\n          maxY = Math.max(maxY, y);\n        }\n      }\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }, {\n    key: \"getLength\",\n    value: function getLength() {\n      return this.pathLength;\n    }\n  }, {\n    key: \"getPointAtLength\",\n    value: function getPointAtLength(length) {\n      var point,\n        i = 0,\n        ii = this.dataArray.length;\n      if (!ii) {\n        return null;\n      }\n      while (i < ii && length > this.dataArray[i].pathLength) {\n        length -= this.dataArray[i].pathLength;\n        ++i;\n      }\n      if (i === ii) {\n        point = this.dataArray[i - 1].points.slice(-2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n      if (length < 0.01) {\n        point = this.dataArray[i].points.slice(0, 2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n      var cp = this.dataArray[i];\n      var p = cp.points;\n      switch (cp.command) {\n        case 'L':\n          return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n        case 'C':\n          return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n        case 'Q':\n          return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n        case 'A':\n          var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6];\n          theta += dTheta * length / cp.pathLength;\n          return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n      }\n      return null;\n    }\n  }], [{\n    key: \"getLineLength\",\n    value: function getLineLength(x1, y1, x2, y2) {\n      return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n  }, {\n    key: \"getPointOnLine\",\n    value: function getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n      if (fromX === undefined) {\n        fromX = P1x;\n      }\n      if (fromY === undefined) {\n        fromY = P1y;\n      }\n      var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n      var run = Math.sqrt(dist * dist / (1 + m * m));\n      if (P2x < P1x) {\n        run *= -1;\n      }\n      var rise = m * run;\n      var pt;\n      if (P2x === P1x) {\n        pt = {\n          x: fromX,\n          y: fromY + rise\n        };\n      } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n        pt = {\n          x: fromX + run,\n          y: fromY + rise\n        };\n      } else {\n        var ix, iy;\n        var len = this.getLineLength(P1x, P1y, P2x, P2y);\n        var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n        u = u / (len * len);\n        ix = P1x + u * (P2x - P1x);\n        iy = P1y + u * (P2y - P1y);\n        var pRise = this.getLineLength(fromX, fromY, ix, iy);\n        var pRun = Math.sqrt(dist * dist - pRise * pRise);\n        run = Math.sqrt(pRun * pRun / (1 + m * m));\n        if (P2x < P1x) {\n          run *= -1;\n        }\n        rise = m * run;\n        pt = {\n          x: ix + run,\n          y: iy + rise\n        };\n      }\n      return pt;\n    }\n  }, {\n    key: \"getPointOnCubicBezier\",\n    value: function getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n      function CB1(t) {\n        return t * t * t;\n      }\n      function CB2(t) {\n        return 3 * t * t * (1 - t);\n      }\n      function CB3(t) {\n        return 3 * t * (1 - t) * (1 - t);\n      }\n      function CB4(t) {\n        return (1 - t) * (1 - t) * (1 - t);\n      }\n      var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n      var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"getPointOnQuadraticBezier\",\n    value: function getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n      function QB1(t) {\n        return t * t;\n      }\n      function QB2(t) {\n        return 2 * t * (1 - t);\n      }\n      function QB3(t) {\n        return (1 - t) * (1 - t);\n      }\n      var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n      var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"getPointOnEllipticalArc\",\n    value: function getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n      var cosPsi = Math.cos(psi),\n        sinPsi = Math.sin(psi);\n      var pt = {\n        x: rx * Math.cos(theta),\n        y: ry * Math.sin(theta)\n      };\n      return {\n        x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n        y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n      };\n    }\n  }, {\n    key: \"parsePathData\",\n    value: function parsePathData(data) {\n      if (!data) {\n        return [];\n      }\n      var cs = data;\n      var cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\n      cs = cs.replace(new RegExp(' ', 'g'), ',');\n      for (var n = 0; n < cc.length; n++) {\n        cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n      }\n      var arr = cs.split('|');\n      var ca = [];\n      var coords = [];\n      var cpx = 0;\n      var cpy = 0;\n      var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n      var match;\n      for (n = 1; n < arr.length; n++) {\n        var str = arr[n];\n        var c = str.charAt(0);\n        str = str.slice(1);\n        coords.length = 0;\n        while (match = re.exec(str)) {\n          coords.push(match[0]);\n        }\n        var p = [];\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          if (coords[j] === '00') {\n            p.push(0, 0);\n            continue;\n          }\n          var parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            p.push(parsed);\n          } else {\n            p.push(0);\n          }\n        }\n        while (p.length > 0) {\n          if (isNaN(p[0])) {\n            break;\n          }\n          var cmd = null;\n          var points = [];\n          var startX = cpx,\n            startY = cpy;\n          var prevCmd, ctlPtx, ctlPty;\n          var rx, ry, psi, fa, fs, x1, y1;\n          switch (c) {\n            case 'l':\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n            case 'L':\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n            case 'm':\n              var dx = p.shift();\n              var dy = p.shift();\n              cpx += dx;\n              cpy += dy;\n              cmd = 'M';\n              if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                for (var idx = ca.length - 2; idx >= 0; idx--) {\n                  if (ca[idx].command === 'M') {\n                    cpx = ca[idx].points[0] + dx;\n                    cpy = ca[idx].points[1] + dy;\n                    break;\n                  }\n                }\n              }\n              points.push(cpx, cpy);\n              c = 'l';\n              break;\n            case 'M':\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'M';\n              points.push(cpx, cpy);\n              c = 'L';\n              break;\n            case 'h':\n              cpx += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n            case 'H':\n              cpx = p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n            case 'v':\n              cpy += p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n            case 'V':\n              cpy = p.shift();\n              cmd = 'L';\n              points.push(cpx, cpy);\n              break;\n            case 'C':\n              points.push(p.shift(), p.shift(), p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n            case 'c':\n              points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n            case 'S':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n              if (prevCmd.command === 'C') {\n                ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                ctlPty = cpy + (cpy - prevCmd.points[3]);\n              }\n              points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n            case 's':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n              if (prevCmd.command === 'C') {\n                ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                ctlPty = cpy + (cpy - prevCmd.points[3]);\n              }\n              points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'C';\n              points.push(cpx, cpy);\n              break;\n            case 'Q':\n              points.push(p.shift(), p.shift());\n              cpx = p.shift();\n              cpy = p.shift();\n              points.push(cpx, cpy);\n              break;\n            case 'q':\n              points.push(cpx + p.shift(), cpy + p.shift());\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'Q';\n              points.push(cpx, cpy);\n              break;\n            case 'T':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n              if (prevCmd.command === 'Q') {\n                ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                ctlPty = cpy + (cpy - prevCmd.points[1]);\n              }\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'Q';\n              points.push(ctlPtx, ctlPty, cpx, cpy);\n              break;\n            case 't':\n              ctlPtx = cpx;\n              ctlPty = cpy;\n              prevCmd = ca[ca.length - 1];\n              if (prevCmd.command === 'Q') {\n                ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                ctlPty = cpy + (cpy - prevCmd.points[1]);\n              }\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'Q';\n              points.push(ctlPtx, ctlPty, cpx, cpy);\n              break;\n            case 'A':\n              rx = p.shift();\n              ry = p.shift();\n              psi = p.shift();\n              fa = p.shift();\n              fs = p.shift();\n              x1 = cpx;\n              y1 = cpy;\n              cpx = p.shift();\n              cpy = p.shift();\n              cmd = 'A';\n              points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n              break;\n            case 'a':\n              rx = p.shift();\n              ry = p.shift();\n              psi = p.shift();\n              fa = p.shift();\n              fs = p.shift();\n              x1 = cpx;\n              y1 = cpy;\n              cpx += p.shift();\n              cpy += p.shift();\n              cmd = 'A';\n              points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n              break;\n          }\n          ca.push({\n            command: cmd || c,\n            points: points,\n            start: {\n              x: startX,\n              y: startY\n            },\n            pathLength: this.calcLength(startX, startY, cmd || c, points)\n          });\n        }\n        if (c === 'z' || c === 'Z') {\n          ca.push({\n            command: 'z',\n            points: [],\n            start: undefined,\n            pathLength: 0\n          });\n        }\n      }\n      return ca;\n    }\n  }, {\n    key: \"calcLength\",\n    value: function calcLength(x, y, cmd, points) {\n      var len, p1, p2, t;\n      var path = Path;\n      switch (cmd) {\n        case 'L':\n          return path.getLineLength(x, y, points[0], points[1]);\n        case 'C':\n          len = 0.0;\n          p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n          for (t = 0.01; t <= 1; t += 0.01) {\n            p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n          return len;\n        case 'Q':\n          len = 0.0;\n          p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n          for (t = 0.01; t <= 1; t += 0.01) {\n            p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n          return len;\n        case 'A':\n          len = 0.0;\n          var start = points[4];\n          var dTheta = points[5];\n          var end = points[4] + dTheta;\n          var inc = Math.PI / 180.0;\n          if (Math.abs(start - end) < inc) {\n            inc = Math.abs(start - end);\n          }\n          p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n          if (dTheta < 0) {\n            for (t = start - inc; t > end; t -= inc) {\n              p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          } else {\n            for (t = start + inc; t < end; t += inc) {\n              p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n              len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n              p1 = p2;\n            }\n          }\n          p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          return len;\n      }\n      return 0;\n    }\n  }, {\n    key: \"convertEndpointToCenterParameterization\",\n    value: function convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n      var psi = psiDeg * (Math.PI / 180.0);\n      var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n      var yp = -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n      var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n      if (lambda > 1) {\n        rx *= Math.sqrt(lambda);\n        ry *= Math.sqrt(lambda);\n      }\n      var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n      if (fa === fs) {\n        f *= -1;\n      }\n      if (isNaN(f)) {\n        f = 0;\n      }\n      var cxp = f * rx * yp / ry;\n      var cyp = f * -ry * xp / rx;\n      var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n      var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n      var vMag = function vMag(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n      };\n      var vRatio = function vRatio(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n      };\n      var vAngle = function vAngle(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n      };\n      var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n      var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n      var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n      var dTheta = vAngle(u, v);\n      if (vRatio(u, v) <= -1) {\n        dTheta = Math.PI;\n      }\n      if (vRatio(u, v) >= 1) {\n        dTheta = 0;\n      }\n      if (fs === 0 && dTheta > 0) {\n        dTheta = dTheta - 2 * Math.PI;\n      }\n      if (fs === 1 && dTheta < 0) {\n        dTheta = dTheta + 2 * Math.PI;\n      }\n      return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n  }]);\n  return Path;\n}(Shape);\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');","map":{"version":3,"names":["Factory","Shape","_registerNode","Path","config","dataArray","pathLength","parsePathData","data","i","length","on","context","ca","beginPath","isClosed","n","c","command","p","points","lineTo","moveTo","bezierCurveTo","quadraticCurveTo","cx","cy","rx","ry","theta","dTheta","psi","fs","r","scaleX","scaleY","translate","rotate","scale","arc","closePath","hasFill","strokeShape","fillStrokeShape","forEach","start","end","inc","Math","PI","abs","t","point","getPointOnEllipticalArc","push","x","y","getPointOnCubicBezier","concat","minX","maxX","minY","maxY","isNaN","min","max","width","height","ii","slice","cp","getPointOnLine","getPointOnQuadraticBezier","x1","y1","x2","y2","sqrt","dist","P1x","P1y","P2x","P2y","fromX","fromY","undefined","m","run","rise","pt","ix","iy","len","getLineLength","u","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","cos","sinPsi","sin","cs","cc","replace","RegExp","arr","split","coords","cpx","cpy","re","match","str","charAt","exec","j","jlen","parsed","parseFloat","cmd","startX","startY","prevCmd","ctlPtx","ctlPty","fa","shift","dx","dy","idx","convertEndpointToCenterParameterization","calcLength","p1","p2","path","psiDeg","xp","yp","lambda","f","cxp","cyp","vMag","v","vRatio","vAngle","acos","prototype","className","_attrsAffectingSize","addGetterSetter"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/konva/lib/shapes/Path.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { _registerNode } from '../Global.js';\nexport class Path extends Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n            this.pathLength += this.dataArray[i].pathLength;\n        }\n        this.on('dataChange.konva', function () {\n            this.dataArray = Path.parsePathData(this.data());\n            this.pathLength = 0;\n            for (var i = 0; i < this.dataArray.length; ++i) {\n                this.pathLength += this.dataArray[i].pathLength;\n            }\n        });\n    }\n    _sceneFunc(context) {\n        var ca = this.dataArray;\n        context.beginPath();\n        var isClosed = false;\n        for (var n = 0; n < ca.length; n++) {\n            var c = ca[n].command;\n            var p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        var points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                var start = data.points[4];\n                var dTheta = data.points[5];\n                var end = data.points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        var minX = points[0];\n        var maxX = points[0];\n        var minY = points[1];\n        var maxY = points[1];\n        var x, y;\n        for (var i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        var point, i = 0, ii = this.dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > this.dataArray[i].pathLength) {\n            length -= this.dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            point = this.dataArray[i - 1].points.slice(-2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        if (length < 0.01) {\n            point = this.dataArray[i].points.slice(0, 2);\n            return {\n                x: point[0],\n                y: point[1],\n            };\n        }\n        var cp = this.dataArray[i];\n        var p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier(length / cp.pathLength, cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        if (fromX === undefined) {\n            fromX = P1x;\n        }\n        if (fromY === undefined) {\n            fromY = P1y;\n        }\n        var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n        var run = Math.sqrt((dist * dist) / (1 + m * m));\n        if (P2x < P1x) {\n            run *= -1;\n        }\n        var rise = m * run;\n        var pt;\n        if (P2x === P1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise,\n            };\n        }\n        else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise,\n            };\n        }\n        else {\n            var ix, iy;\n            var len = this.getLineLength(P1x, P1y, P2x, P2y);\n            var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n            u = u / (len * len);\n            ix = P1x + u * (P2x - P1x);\n            iy = P1y + u * (P2y - P1y);\n            var pRise = this.getLineLength(fromX, fromY, ix, iy);\n            var pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt((pRun * pRun) / (1 + m * m));\n            if (P2x < P1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise,\n            };\n        }\n        return pt;\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        var cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        var pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        var cs = data;\n        var cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        var arr = cs.split('|');\n        var ca = [];\n        var coords = [];\n        var cpx = 0;\n        var cpy = 0;\n        var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        var match;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            var p = [];\n            for (var j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                var parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var cmd = null;\n                var points = [];\n                var startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (var idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        var len, p1, p2, t;\n        var path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                len = 0.0;\n                p1 = path.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'Q':\n                len = 0.0;\n                p1 = path.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for (t = 0.01; t <= 1; t += 0.01) {\n                    p2 = path.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        var psi = psiDeg * (Math.PI / 180.0);\n        var xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        var yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        var f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        var cxp = (f * rx * yp) / ry;\n        var cyp = (f * -ry * xp) / rx;\n        var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        var vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        var vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        var vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        var dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n_registerNode(Path);\nFactory.addGetterSetter(Path, 'data');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}