{"ast":null,"code":"import _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n  var retArr = [],\n    len = arr.length,\n    util = Util,\n    n,\n    val;\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nvar COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nvar traceArrMax = 100;\nexport var Context = /*#__PURE__*/function () {\n  function Context(canvas) {\n    _classCallCheck(this, Context);\n    this.canvas = canvas;\n    if (Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  _createClass(Context, [{\n    key: \"fillShape\",\n    value: function fillShape(shape) {\n      if (shape.fillEnabled()) {\n        this._fill(shape);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {}\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {}\n  }, {\n    key: \"fillStrokeShape\",\n    value: function fillStrokeShape(shape) {\n      if (shape.attrs.fillAfterStrokeEnabled) {\n        this.strokeShape(shape);\n        this.fillShape(shape);\n      } else {\n        this.fillShape(shape);\n        this.strokeShape(shape);\n      }\n    }\n  }, {\n    key: \"getTrace\",\n    value: function getTrace(relaxed, rounded) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Util._isArray(args[0])) {\n              str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              if (rounded) {\n                args = args.map(function (a) {\n                  return typeof a === 'number' ? Math.floor(a) : a;\n                });\n              }\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n        str += SEMICOLON;\n      }\n      return str;\n    }\n  }, {\n    key: \"clearTrace\",\n    value: function clearTrace() {\n      this.traceArr = [];\n    }\n  }, {\n    key: \"_trace\",\n    value: function _trace(str) {\n      var traceArr = this.traceArr,\n        len;\n      traceArr.push(str);\n      len = traceArr.length;\n      if (len >= traceArrMax) {\n        traceArr.shift();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      var canvas = this.getCanvas();\n      if (bounds) {\n        this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n      } else {\n        this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n      }\n    }\n  }, {\n    key: \"_applyLineCap\",\n    value: function _applyLineCap(shape) {\n      var lineCap = shape.getLineCap();\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    }\n  }, {\n    key: \"_applyOpacity\",\n    value: function _applyOpacity(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    }\n  }, {\n    key: \"_applyLineJoin\",\n    value: function _applyLineJoin(shape) {\n      var lineJoin = shape.attrs.lineJoin;\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    }\n  }, {\n    key: \"setAttr\",\n    value: function setAttr(attr, val) {\n      this._context[attr] = val;\n    }\n  }, {\n    key: \"arc\",\n    value: function arc(a0, a1, a2, a3, a4, a5) {\n      this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"arcTo\",\n    value: function arcTo(a0, a1, a2, a3, a4) {\n      this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n  }, {\n    key: \"beginPath\",\n    value: function beginPath() {\n      this._context.beginPath();\n    }\n  }, {\n    key: \"bezierCurveTo\",\n    value: function bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n      this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"clearRect\",\n    value: function clearRect(a0, a1, a2, a3) {\n      this._context.clearRect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"clip\",\n    value: function clip() {\n      this._context.clip();\n    }\n  }, {\n    key: \"closePath\",\n    value: function closePath() {\n      this._context.closePath();\n    }\n  }, {\n    key: \"createImageData\",\n    value: function createImageData(a0, a1) {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a0, a1);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a0);\n      }\n    }\n  }, {\n    key: \"createLinearGradient\",\n    value: function createLinearGradient(a0, a1, a2, a3) {\n      return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"createPattern\",\n    value: function createPattern(a0, a1) {\n      return this._context.createPattern(a0, a1);\n    }\n  }, {\n    key: \"createRadialGradient\",\n    value: function createRadialGradient(a0, a1, a2, a3, a4, a5) {\n      return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"drawImage\",\n    value: function drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n      var a = arguments,\n        _context = this._context;\n      if (a.length === 3) {\n        _context.drawImage(a0, a1, a2);\n      } else if (a.length === 5) {\n        _context.drawImage(a0, a1, a2, a3, a4);\n      } else if (a.length === 9) {\n        _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      }\n    }\n  }, {\n    key: \"ellipse\",\n    value: function ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n      this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n  }, {\n    key: \"isPointInPath\",\n    value: function isPointInPath(x, y) {\n      return this._context.isPointInPath(x, y);\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(path2d) {\n      if (path2d) {\n        this._context.fill(path2d);\n      } else {\n        this._context.fill();\n      }\n    }\n  }, {\n    key: \"fillRect\",\n    value: function fillRect(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    }\n  }, {\n    key: \"strokeRect\",\n    value: function strokeRect(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    }\n  }, {\n    key: \"fillText\",\n    value: function fillText(text, x, y, maxWidth) {\n      if (maxWidth) {\n        this._context.fillText(text, x, y, maxWidth);\n      } else {\n        this._context.fillText(text, x, y);\n      }\n    }\n  }, {\n    key: \"measureText\",\n    value: function measureText(text) {\n      return this._context.measureText(text);\n    }\n  }, {\n    key: \"getImageData\",\n    value: function getImageData(a0, a1, a2, a3) {\n      return this._context.getImageData(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"lineTo\",\n    value: function lineTo(a0, a1) {\n      this._context.lineTo(a0, a1);\n    }\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(a0, a1) {\n      this._context.moveTo(a0, a1);\n    }\n  }, {\n    key: \"rect\",\n    value: function rect(a0, a1, a2, a3) {\n      this._context.rect(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"putImageData\",\n    value: function putImageData(a0, a1, a2) {\n      this._context.putImageData(a0, a1, a2);\n    }\n  }, {\n    key: \"quadraticCurveTo\",\n    value: function quadraticCurveTo(a0, a1, a2, a3) {\n      this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._context.restore();\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(a0) {\n      this._context.rotate(a0);\n    }\n  }, {\n    key: \"save\",\n    value: function save() {\n      this._context.save();\n    }\n  }, {\n    key: \"scale\",\n    value: function scale(a0, a1) {\n      this._context.scale(a0, a1);\n    }\n  }, {\n    key: \"setLineDash\",\n    value: function setLineDash(a0) {\n      if (this._context.setLineDash) {\n        this._context.setLineDash(a0);\n      } else if ('mozDash' in this._context) {\n        this._context['mozDash'] = a0;\n      } else if ('webkitLineDash' in this._context) {\n        this._context['webkitLineDash'] = a0;\n      }\n    }\n  }, {\n    key: \"getLineDash\",\n    value: function getLineDash() {\n      return this._context.getLineDash();\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(a0, a1, a2, a3, a4, a5) {\n      this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"stroke\",\n    value: function stroke(path2d) {\n      if (path2d) {\n        this._context.stroke(path2d);\n      } else {\n        this._context.stroke();\n      }\n    }\n  }, {\n    key: \"strokeText\",\n    value: function strokeText(a0, a1, a2, a3) {\n      this._context.strokeText(a0, a1, a2, a3);\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(a0, a1, a2, a3, a4, a5) {\n      this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(a0, a1) {\n      this._context.translate(a0, a1);\n    }\n  }, {\n    key: \"_enableTrace\",\n    value: function _enableTrace() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        origSetter = this.setAttr,\n        n,\n        args;\n      var func = function func(methodName) {\n        var origMethod = that[methodName],\n          ret;\n        that[methodName] = function () {\n          args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n          that._trace({\n            method: methodName,\n            args: args\n          });\n          return ret;\n        };\n      };\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n      that.setAttr = function () {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  }, {\n    key: \"_applyGlobalCompositeOperation\",\n    value: function _applyGlobalCompositeOperation(node) {\n      var op = node.attrs.globalCompositeOperation;\n      var def = !op || op === 'source-over';\n      if (!def) {\n        this.setAttr('globalCompositeOperation', op);\n      }\n    }\n  }]);\n  return Context;\n}();\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get: function get() {\n      return this._context[prop];\n    },\n    set: function set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nexport var SceneContext = /*#__PURE__*/function (_Context) {\n  _inherits(SceneContext, _Context);\n  var _super = _createSuper(SceneContext);\n  function SceneContext(canvas) {\n    var _this;\n    _classCallCheck(this, SceneContext);\n    _this = _super.call(this, canvas);\n    _this._context = canvas._canvas.getContext('2d');\n    return _this;\n  }\n  _createClass(SceneContext, [{\n    key: \"_fillColor\",\n    value: function _fillColor(shape) {\n      var fill = shape.fill();\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillPattern\",\n    value: function _fillPattern(shape) {\n      this.setAttr('fillStyle', shape._getFillPattern());\n      shape._fillFunc(this);\n    }\n  }, {\n    key: \"_fillLinearGradient\",\n    value: function _fillLinearGradient(shape) {\n      var grd = shape._getLinearGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fillRadialGradient\",\n    value: function _fillRadialGradient(shape) {\n      var grd = shape._getRadialGradient();\n      if (grd) {\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    }\n  }, {\n    key: \"_fill\",\n    value: function _fill(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    }\n  }, {\n    key: \"_strokeLinearGradient\",\n    value: function _strokeLinearGradient(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n      if (colorStops) {\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      var dash = shape.dash(),\n        strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n        this.setAttr('lineWidth', shape.strokeWidth());\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n        shape._strokeFunc(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }, {\n    key: \"_applyShadow\",\n    value: function _applyShadow(shape) {\n      var _a, _b, _c;\n      var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n        blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n        offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n          x: 0,\n          y: 0\n        },\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n      this.setAttr('shadowColor', color);\n      this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n  }]);\n  return SceneContext;\n}(Context);\nexport var HitContext = /*#__PURE__*/function (_Context2) {\n  _inherits(HitContext, _Context2);\n  var _super2 = _createSuper(HitContext);\n  function HitContext(canvas) {\n    var _this2;\n    _classCallCheck(this, HitContext);\n    _this2 = _super2.call(this, canvas);\n    _this2._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    return _this2;\n  }\n  _createClass(HitContext, [{\n    key: \"_fill\",\n    value: function _fill(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    }\n  }, {\n    key: \"strokeShape\",\n    value: function strokeShape(shape) {\n      if (shape.hasHitStroke()) {\n        this._stroke(shape);\n      }\n    }\n  }, {\n    key: \"_stroke\",\n    value: function _stroke(shape) {\n      if (shape.hasHitStroke()) {\n        var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n        this._applyLineCap(shape);\n        var hitStrokeWidth = shape.hitStrokeWidth();\n        var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n        this.setAttr('lineWidth', strokeWidth);\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  }]);\n  return HitContext;\n}(Context);","map":{"version":3,"names":["Util","Konva","simplifyArray","arr","retArr","len","length","util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","Context","canvas","enableTrace","traceArr","_enableTrace","shape","fillEnabled","_fill","hasStroke","_stroke","attrs","fillAfterStrokeEnabled","strokeShape","fillShape","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","shift","pixelRatio","getCanvas","getPixelRatio","setTransform","bounds","clearRect","x","y","width","height","getWidth","getHeight","lineCap","getLineCap","setAttr","absOpacity","getAbsoluteOpacity","lineJoin","attr","_context","a0","a1","a2","a3","a4","a5","arc","arcTo","beginPath","bezierCurveTo","clip","closePath","arguments","createImageData","createLinearGradient","createPattern","createRadialGradient","a6","a7","a8","drawImage","ellipse","isPointInPath","path2d","fill","fillRect","strokeRect","text","maxWidth","fillText","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","Array","prototype","slice","call","apply","_trace","prop","node","op","globalCompositeOperation","def","forEach","Object","defineProperty","get","set","SceneContext","_canvas","getContext","_fillFunc","_getFillPattern","grd","_getLinearGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","_fillColor","hasPattern","getFillPatternImage","_fillPattern","hasLinearGradient","getFillLinearGradientColorStops","_fillLinearGradient","hasRadialGradient","getFillRadialGradientColorStops","_fillRadialGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","_applyLineCap","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeLinearGradient","_strokeFunc","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","HitContext","willReadFrequently","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/konva/lib/Context.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y) {\n        return this._context.isPointInPath(x, y);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d');\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}