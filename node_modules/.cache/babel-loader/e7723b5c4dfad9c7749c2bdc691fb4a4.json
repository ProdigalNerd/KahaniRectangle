{"ast":null,"code":"import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n  var retArr = [],\n    len = arr.length,\n    util = Util,\n    n,\n    val;\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n    retArr.push(val);\n  }\n  return retArr;\n}\nvar COMMA = ',',\n  OPEN_PAREN = '(',\n  CLOSE_PAREN = ')',\n  OPEN_PAREN_BRACKET = '([',\n  CLOSE_BRACKET_PAREN = '])',\n  SEMICOLON = ';',\n  DOUBLE_PAREN = '()',\n  EQUALS = '=',\n  CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nconst traceArrMax = 100;\nexport class Context {\n  constructor(canvas) {\n    this.canvas = canvas;\n    if (Konva.enableTrace) {\n      this.traceArr = [];\n      this._enableTrace();\n    }\n  }\n  fillShape(shape) {\n    if (shape.fillEnabled()) {\n      this._fill(shape);\n    }\n  }\n  _fill(shape) {}\n  strokeShape(shape) {\n    if (shape.hasStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {}\n  fillStrokeShape(shape) {\n    if (shape.attrs.fillAfterStrokeEnabled) {\n      this.strokeShape(shape);\n      this.fillShape(shape);\n    } else {\n      this.fillShape(shape);\n      this.strokeShape(shape);\n    }\n  }\n  getTrace(relaxed, rounded) {\n    var traceArr = this.traceArr,\n      len = traceArr.length,\n      str = '',\n      n,\n      trace,\n      method,\n      args;\n    for (n = 0; n < len; n++) {\n      trace = traceArr[n];\n      method = trace.method;\n      if (method) {\n        args = trace.args;\n        str += method;\n        if (relaxed) {\n          str += DOUBLE_PAREN;\n        } else {\n          if (Util._isArray(args[0])) {\n            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n          } else {\n            if (rounded) {\n              args = args.map(a => typeof a === 'number' ? Math.floor(a) : a);\n            }\n            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n          }\n        }\n      } else {\n        str += trace.property;\n        if (!relaxed) {\n          str += EQUALS + trace.val;\n        }\n      }\n      str += SEMICOLON;\n    }\n    return str;\n  }\n  clearTrace() {\n    this.traceArr = [];\n  }\n  _trace(str) {\n    var traceArr = this.traceArr,\n      len;\n    traceArr.push(str);\n    len = traceArr.length;\n    if (len >= traceArrMax) {\n      traceArr.shift();\n    }\n  }\n  reset() {\n    var pixelRatio = this.getCanvas().getPixelRatio();\n    this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  clear(bounds) {\n    var canvas = this.getCanvas();\n    if (bounds) {\n      this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n    } else {\n      this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n    }\n  }\n  _applyLineCap(shape) {\n    var lineCap = shape.getLineCap();\n    if (lineCap) {\n      this.setAttr('lineCap', lineCap);\n    }\n  }\n  _applyOpacity(shape) {\n    var absOpacity = shape.getAbsoluteOpacity();\n    if (absOpacity !== 1) {\n      this.setAttr('globalAlpha', absOpacity);\n    }\n  }\n  _applyLineJoin(shape) {\n    var lineJoin = shape.attrs.lineJoin;\n    if (lineJoin) {\n      this.setAttr('lineJoin', lineJoin);\n    }\n  }\n  setAttr(attr, val) {\n    this._context[attr] = val;\n  }\n  arc(a0, a1, a2, a3, a4, a5) {\n    this._context.arc(a0, a1, a2, a3, a4, a5);\n  }\n  arcTo(a0, a1, a2, a3, a4) {\n    this._context.arcTo(a0, a1, a2, a3, a4);\n  }\n  beginPath() {\n    this._context.beginPath();\n  }\n  bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n    this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n  }\n  clearRect(a0, a1, a2, a3) {\n    this._context.clearRect(a0, a1, a2, a3);\n  }\n  clip() {\n    this._context.clip();\n  }\n  closePath() {\n    this._context.closePath();\n  }\n  createImageData(a0, a1) {\n    var a = arguments;\n    if (a.length === 2) {\n      return this._context.createImageData(a0, a1);\n    } else if (a.length === 1) {\n      return this._context.createImageData(a0);\n    }\n  }\n  createLinearGradient(a0, a1, a2, a3) {\n    return this._context.createLinearGradient(a0, a1, a2, a3);\n  }\n  createPattern(a0, a1) {\n    return this._context.createPattern(a0, a1);\n  }\n  createRadialGradient(a0, a1, a2, a3, a4, a5) {\n    return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n  }\n  drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n    var a = arguments,\n      _context = this._context;\n    if (a.length === 3) {\n      _context.drawImage(a0, a1, a2);\n    } else if (a.length === 5) {\n      _context.drawImage(a0, a1, a2, a3, a4);\n    } else if (a.length === 9) {\n      _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n    }\n  }\n  ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n    this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n  }\n  isPointInPath(x, y) {\n    return this._context.isPointInPath(x, y);\n  }\n  fill(path2d) {\n    if (path2d) {\n      this._context.fill(path2d);\n    } else {\n      this._context.fill();\n    }\n  }\n  fillRect(x, y, width, height) {\n    this._context.fillRect(x, y, width, height);\n  }\n  strokeRect(x, y, width, height) {\n    this._context.strokeRect(x, y, width, height);\n  }\n  fillText(text, x, y, maxWidth) {\n    if (maxWidth) {\n      this._context.fillText(text, x, y, maxWidth);\n    } else {\n      this._context.fillText(text, x, y);\n    }\n  }\n  measureText(text) {\n    return this._context.measureText(text);\n  }\n  getImageData(a0, a1, a2, a3) {\n    return this._context.getImageData(a0, a1, a2, a3);\n  }\n  lineTo(a0, a1) {\n    this._context.lineTo(a0, a1);\n  }\n  moveTo(a0, a1) {\n    this._context.moveTo(a0, a1);\n  }\n  rect(a0, a1, a2, a3) {\n    this._context.rect(a0, a1, a2, a3);\n  }\n  putImageData(a0, a1, a2) {\n    this._context.putImageData(a0, a1, a2);\n  }\n  quadraticCurveTo(a0, a1, a2, a3) {\n    this._context.quadraticCurveTo(a0, a1, a2, a3);\n  }\n  restore() {\n    this._context.restore();\n  }\n  rotate(a0) {\n    this._context.rotate(a0);\n  }\n  save() {\n    this._context.save();\n  }\n  scale(a0, a1) {\n    this._context.scale(a0, a1);\n  }\n  setLineDash(a0) {\n    if (this._context.setLineDash) {\n      this._context.setLineDash(a0);\n    } else if ('mozDash' in this._context) {\n      this._context['mozDash'] = a0;\n    } else if ('webkitLineDash' in this._context) {\n      this._context['webkitLineDash'] = a0;\n    }\n  }\n  getLineDash() {\n    return this._context.getLineDash();\n  }\n  setTransform(a0, a1, a2, a3, a4, a5) {\n    this._context.setTransform(a0, a1, a2, a3, a4, a5);\n  }\n  stroke(path2d) {\n    if (path2d) {\n      this._context.stroke(path2d);\n    } else {\n      this._context.stroke();\n    }\n  }\n  strokeText(a0, a1, a2, a3) {\n    this._context.strokeText(a0, a1, a2, a3);\n  }\n  transform(a0, a1, a2, a3, a4, a5) {\n    this._context.transform(a0, a1, a2, a3, a4, a5);\n  }\n  translate(a0, a1) {\n    this._context.translate(a0, a1);\n  }\n  _enableTrace() {\n    var that = this,\n      len = CONTEXT_METHODS.length,\n      origSetter = this.setAttr,\n      n,\n      args;\n    var func = function (methodName) {\n      var origMethod = that[methodName],\n        ret;\n      that[methodName] = function () {\n        args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n        ret = origMethod.apply(that, arguments);\n        that._trace({\n          method: methodName,\n          args: args\n        });\n        return ret;\n      };\n    };\n    for (n = 0; n < len; n++) {\n      func(CONTEXT_METHODS[n]);\n    }\n    that.setAttr = function () {\n      origSetter.apply(that, arguments);\n      var prop = arguments[0];\n      var val = arguments[1];\n      if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n        val = val / this.canvas.getPixelRatio();\n      }\n      that._trace({\n        property: prop,\n        val: val\n      });\n    };\n  }\n  _applyGlobalCompositeOperation(node) {\n    const op = node.attrs.globalCompositeOperation;\n    var def = !op || op === 'source-over';\n    if (!def) {\n      this.setAttr('globalCompositeOperation', op);\n    }\n  }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get() {\n      return this._context[prop];\n    },\n    set(val) {\n      this._context[prop] = val;\n    }\n  });\n});\nexport class SceneContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d');\n  }\n  _fillColor(shape) {\n    var fill = shape.fill();\n    this.setAttr('fillStyle', fill);\n    shape._fillFunc(this);\n  }\n  _fillPattern(shape) {\n    this.setAttr('fillStyle', shape._getFillPattern());\n    shape._fillFunc(this);\n  }\n  _fillLinearGradient(shape) {\n    var grd = shape._getLinearGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fillRadialGradient(shape) {\n    var grd = shape._getRadialGradient();\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n      shape._fillFunc(this);\n    }\n  }\n  _fill(shape) {\n    var hasColor = shape.fill(),\n      fillPriority = shape.getFillPriority();\n    if (hasColor && fillPriority === 'color') {\n      this._fillColor(shape);\n      return;\n    }\n    var hasPattern = shape.getFillPatternImage();\n    if (hasPattern && fillPriority === 'pattern') {\n      this._fillPattern(shape);\n      return;\n    }\n    var hasLinearGradient = shape.getFillLinearGradientColorStops();\n    if (hasLinearGradient && fillPriority === 'linear-gradient') {\n      this._fillLinearGradient(shape);\n      return;\n    }\n    var hasRadialGradient = shape.getFillRadialGradientColorStops();\n    if (hasRadialGradient && fillPriority === 'radial-gradient') {\n      this._fillRadialGradient(shape);\n      return;\n    }\n    if (hasColor) {\n      this._fillColor(shape);\n    } else if (hasPattern) {\n      this._fillPattern(shape);\n    } else if (hasLinearGradient) {\n      this._fillLinearGradient(shape);\n    } else if (hasRadialGradient) {\n      this._fillRadialGradient(shape);\n    }\n  }\n  _strokeLinearGradient(shape) {\n    var start = shape.getStrokeLinearGradientStartPoint(),\n      end = shape.getStrokeLinearGradientEndPoint(),\n      colorStops = shape.getStrokeLinearGradientColorStops(),\n      grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n    if (colorStops) {\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('strokeStyle', grd);\n    }\n  }\n  _stroke(shape) {\n    var dash = shape.dash(),\n      strokeScaleEnabled = shape.getStrokeScaleEnabled();\n    if (shape.hasStroke()) {\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      if (dash && shape.dashEnabled()) {\n        this.setLineDash(dash);\n        this.setAttr('lineDashOffset', shape.dashOffset());\n      }\n      this.setAttr('lineWidth', shape.strokeWidth());\n      if (!shape.getShadowForStrokeEnabled()) {\n        this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n      }\n      var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n      if (hasLinearGradient) {\n        this._strokeLinearGradient(shape);\n      } else {\n        this.setAttr('strokeStyle', shape.stroke());\n      }\n      shape._strokeFunc(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n  _applyShadow(shape) {\n    var _a, _b, _c;\n    var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n      blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n      offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n        x: 0,\n        y: 0\n      },\n      scale = shape.getAbsoluteScale(),\n      ratio = this.canvas.getPixelRatio(),\n      scaleX = scale.x * ratio,\n      scaleY = scale.y * ratio;\n    this.setAttr('shadowColor', color);\n    this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n    this.setAttr('shadowOffsetX', offset.x * scaleX);\n    this.setAttr('shadowOffsetY', offset.y * scaleY);\n  }\n}\nexport class HitContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n  }\n  _fill(shape) {\n    this.save();\n    this.setAttr('fillStyle', shape.colorKey);\n    shape._fillFuncHit(this);\n    this.restore();\n  }\n  strokeShape(shape) {\n    if (shape.hasHitStroke()) {\n      this._stroke(shape);\n    }\n  }\n  _stroke(shape) {\n    if (shape.hasHitStroke()) {\n      var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n      this._applyLineCap(shape);\n      var hitStrokeWidth = shape.hitStrokeWidth();\n      var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n      this.setAttr('lineWidth', strokeWidth);\n      this.setAttr('strokeStyle', shape.colorKey);\n      shape._strokeFuncHit(this);\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n}","map":{"version":3,"names":["Util","Konva","simplifyArray","arr","retArr","len","length","util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","Context","constructor","canvas","enableTrace","traceArr","_enableTrace","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","attrs","fillAfterStrokeEnabled","getTrace","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","clearTrace","_trace","shift","reset","pixelRatio","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","x","y","width","height","getWidth","getHeight","_applyLineCap","lineCap","getLineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","attr","_context","arc","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","closePath","createImageData","arguments","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","fill","path2d","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","Array","prototype","slice","call","apply","prop","_applyGlobalCompositeOperation","node","op","globalCompositeOperation","def","forEach","Object","defineProperty","get","set","SceneContext","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","HitContext","willReadFrequently","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/konva/lib/Context.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y) {\n        return this._context.isPointInPath(x, y);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d');\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,aAAa,CAACC,GAAG,EAAE;EACxB,IAAIC,MAAM,GAAG,EAAE;IAAEC,GAAG,GAAGF,GAAG,CAACG,MAAM;IAAEC,IAAI,GAAGP,IAAI;IAAEQ,CAAC;IAAEC,GAAG;EACtD,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;IACtBC,GAAG,GAAGN,GAAG,CAACK,CAAC,CAAC;IACZ,IAAID,IAAI,CAACG,SAAS,CAACD,GAAG,CAAC,EAAE;MACrBA,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACH,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI;IACvC,CAAC,MACI,IAAI,CAACF,IAAI,CAACM,SAAS,CAACJ,GAAG,CAAC,EAAE;MAC3BA,GAAG,GAAGA,GAAG,GAAG,EAAE;IAClB;IACAL,MAAM,CAACU,IAAI,CAACL,GAAG,CAAC;EACpB;EACA,OAAOL,MAAM;AACjB;AACA,IAAIW,KAAK,GAAG,GAAG;EAAEC,UAAU,GAAG,GAAG;EAAEC,WAAW,GAAG,GAAG;EAAEC,kBAAkB,GAAG,IAAI;EAAEC,mBAAmB,GAAG,IAAI;EAAEC,SAAS,GAAG,GAAG;EAAEC,YAAY,GAAG,IAAI;EAAEC,MAAM,GAAG,GAAG;EAAEC,eAAe,GAAG,CAC/K,KAAK,EACL,OAAO,EACP,WAAW,EACX,eAAe,EACf,WAAW,EACX,MAAM,EACN,WAAW,EACX,sBAAsB,EACtB,eAAe,EACf,sBAAsB,EACtB,WAAW,EACX,SAAS,EACT,MAAM,EACN,UAAU,EACV,cAAc,EACd,iBAAiB,EACjB,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,kBAAkB,EAClB,MAAM,EACN,SAAS,EACT,QAAQ,EACR,MAAM,EACN,OAAO,EACP,aAAa,EACb,cAAc,EACd,QAAQ,EACR,YAAY,EACZ,WAAW,EACX,WAAW,CACd;AACD,IAAIC,kBAAkB,GAAG,CACrB,WAAW,EACX,aAAa,EACb,aAAa,EACb,YAAY,EACZ,eAAe,EACf,eAAe,EACf,SAAS,EACT,gBAAgB,EAChB,UAAU,EACV,WAAW,EACX,YAAY,EACZ,MAAM,EACN,WAAW,EACX,cAAc,EACd,aAAa,EACb,0BAA0B,EAC1B,uBAAuB,CAC1B;AACD,MAAMC,WAAW,GAAG,GAAG;AACvB,OAAO,MAAMC,OAAO,CAAC;EACjBC,WAAW,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI3B,KAAK,CAAC4B,WAAW,EAAE;MACnB,IAAI,CAACC,QAAQ,GAAG,EAAE;MAClB,IAAI,CAACC,YAAY,EAAE;IACvB;EACJ;EACAC,SAAS,CAACC,KAAK,EAAE;IACb,IAAIA,KAAK,CAACC,WAAW,EAAE,EAAE;MACrB,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;IACrB;EACJ;EACAE,KAAK,CAACF,KAAK,EAAE,CACb;EACAG,WAAW,CAACH,KAAK,EAAE;IACf,IAAIA,KAAK,CAACI,SAAS,EAAE,EAAE;MACnB,IAAI,CAACC,OAAO,CAACL,KAAK,CAAC;IACvB;EACJ;EACAK,OAAO,CAACL,KAAK,EAAE,CACf;EACAM,eAAe,CAACN,KAAK,EAAE;IACnB,IAAIA,KAAK,CAACO,KAAK,CAACC,sBAAsB,EAAE;MACpC,IAAI,CAACL,WAAW,CAACH,KAAK,CAAC;MACvB,IAAI,CAACD,SAAS,CAACC,KAAK,CAAC;IACzB,CAAC,MACI;MACD,IAAI,CAACD,SAAS,CAACC,KAAK,CAAC;MACrB,IAAI,CAACG,WAAW,CAACH,KAAK,CAAC;IAC3B;EACJ;EACAS,QAAQ,CAACC,OAAO,EAAEC,OAAO,EAAE;IACvB,IAAId,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAAEzB,GAAG,GAAGyB,QAAQ,CAACxB,MAAM;MAAEuC,GAAG,GAAG,EAAE;MAAErC,CAAC;MAAEsC,KAAK;MAAEC,MAAM;MAAEC,IAAI;IACrF,KAAKxC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;MACtBsC,KAAK,GAAGhB,QAAQ,CAACtB,CAAC,CAAC;MACnBuC,MAAM,GAAGD,KAAK,CAACC,MAAM;MACrB,IAAIA,MAAM,EAAE;QACRC,IAAI,GAAGF,KAAK,CAACE,IAAI;QACjBH,GAAG,IAAIE,MAAM;QACb,IAAIJ,OAAO,EAAE;UACTE,GAAG,IAAIxB,YAAY;QACvB,CAAC,MACI;UACD,IAAIrB,IAAI,CAACiD,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YACxBH,GAAG,IAAI3B,kBAAkB,GAAG8B,IAAI,CAACE,IAAI,CAACnC,KAAK,CAAC,GAAGI,mBAAmB;UACtE,CAAC,MACI;YACD,IAAIyB,OAAO,EAAE;cACTI,IAAI,GAAGA,IAAI,CAACG,GAAG,CAAEC,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,GAAGzC,IAAI,CAAC0C,KAAK,CAACD,CAAC,CAAC,GAAGA,CAAC,CAAC;YACrE;YACAP,GAAG,IAAI7B,UAAU,GAAGgC,IAAI,CAACE,IAAI,CAACnC,KAAK,CAAC,GAAGE,WAAW;UACtD;QACJ;MACJ,CAAC,MACI;QACD4B,GAAG,IAAIC,KAAK,CAACQ,QAAQ;QACrB,IAAI,CAACX,OAAO,EAAE;UACVE,GAAG,IAAIvB,MAAM,GAAGwB,KAAK,CAACrC,GAAG;QAC7B;MACJ;MACAoC,GAAG,IAAIzB,SAAS;IACpB;IACA,OAAOyB,GAAG;EACd;EACAU,UAAU,GAAG;IACT,IAAI,CAACzB,QAAQ,GAAG,EAAE;EACtB;EACA0B,MAAM,CAACX,GAAG,EAAE;IACR,IAAIf,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAAEzB,GAAG;IACjCyB,QAAQ,CAAChB,IAAI,CAAC+B,GAAG,CAAC;IAClBxC,GAAG,GAAGyB,QAAQ,CAACxB,MAAM;IACrB,IAAID,GAAG,IAAIoB,WAAW,EAAE;MACpBK,QAAQ,CAAC2B,KAAK,EAAE;IACpB;EACJ;EACAC,KAAK,GAAG;IACJ,IAAIC,UAAU,GAAG,IAAI,CAACC,SAAS,EAAE,CAACC,aAAa,EAAE;IACjD,IAAI,CAACC,YAAY,CAAC,CAAC,GAAGH,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGA,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;EACjE;EACAC,SAAS,GAAG;IACR,OAAO,IAAI,CAAChC,MAAM;EACtB;EACAmC,KAAK,CAACC,MAAM,EAAE;IACV,IAAIpC,MAAM,GAAG,IAAI,CAACgC,SAAS,EAAE;IAC7B,IAAII,MAAM,EAAE;MACR,IAAI,CAACC,SAAS,CAACD,MAAM,CAACE,CAAC,IAAI,CAAC,EAAEF,MAAM,CAACG,CAAC,IAAI,CAAC,EAAEH,MAAM,CAACI,KAAK,IAAI,CAAC,EAAEJ,MAAM,CAACK,MAAM,IAAI,CAAC,CAAC;IACvF,CAAC,MACI;MACD,IAAI,CAACJ,SAAS,CAAC,CAAC,EAAE,CAAC,EAAErC,MAAM,CAAC0C,QAAQ,EAAE,GAAG1C,MAAM,CAAC+B,UAAU,EAAE/B,MAAM,CAAC2C,SAAS,EAAE,GAAG3C,MAAM,CAAC+B,UAAU,CAAC;IACvG;EACJ;EACAa,aAAa,CAACvC,KAAK,EAAE;IACjB,IAAIwC,OAAO,GAAGxC,KAAK,CAACyC,UAAU,EAAE;IAChC,IAAID,OAAO,EAAE;MACT,IAAI,CAACE,OAAO,CAAC,SAAS,EAAEF,OAAO,CAAC;IACpC;EACJ;EACAG,aAAa,CAAC3C,KAAK,EAAE;IACjB,IAAI4C,UAAU,GAAG5C,KAAK,CAAC6C,kBAAkB,EAAE;IAC3C,IAAID,UAAU,KAAK,CAAC,EAAE;MAClB,IAAI,CAACF,OAAO,CAAC,aAAa,EAAEE,UAAU,CAAC;IAC3C;EACJ;EACAE,cAAc,CAAC9C,KAAK,EAAE;IAClB,IAAI+C,QAAQ,GAAG/C,KAAK,CAACO,KAAK,CAACwC,QAAQ;IACnC,IAAIA,QAAQ,EAAE;MACV,IAAI,CAACL,OAAO,CAAC,UAAU,EAAEK,QAAQ,CAAC;IACtC;EACJ;EACAL,OAAO,CAACM,IAAI,EAAExE,GAAG,EAAE;IACf,IAAI,CAACyE,QAAQ,CAACD,IAAI,CAAC,GAAGxE,GAAG;EAC7B;EACA0E,GAAG,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACxB,IAAI,CAACP,QAAQ,CAACC,GAAG,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC7C;EACAC,KAAK,CAACN,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACtB,IAAI,CAACN,QAAQ,CAACQ,KAAK,CAACN,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC3C;EACAG,SAAS,GAAG;IACR,IAAI,CAACT,QAAQ,CAACS,SAAS,EAAE;EAC7B;EACAC,aAAa,CAACR,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAClC,IAAI,CAACP,QAAQ,CAACU,aAAa,CAACR,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACvD;EACAxB,SAAS,CAACmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACtB,IAAI,CAACL,QAAQ,CAACjB,SAAS,CAACmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC3C;EACAM,IAAI,GAAG;IACH,IAAI,CAACX,QAAQ,CAACW,IAAI,EAAE;EACxB;EACAC,SAAS,GAAG;IACR,IAAI,CAACZ,QAAQ,CAACY,SAAS,EAAE;EAC7B;EACAC,eAAe,CAACX,EAAE,EAAEC,EAAE,EAAE;IACpB,IAAIjC,CAAC,GAAG4C,SAAS;IACjB,IAAI5C,CAAC,CAAC9C,MAAM,KAAK,CAAC,EAAE;MAChB,OAAO,IAAI,CAAC4E,QAAQ,CAACa,eAAe,CAACX,EAAE,EAAEC,EAAE,CAAC;IAChD,CAAC,MACI,IAAIjC,CAAC,CAAC9C,MAAM,KAAK,CAAC,EAAE;MACrB,OAAO,IAAI,CAAC4E,QAAQ,CAACa,eAAe,CAACX,EAAE,CAAC;IAC5C;EACJ;EACAa,oBAAoB,CAACb,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjC,OAAO,IAAI,CAACL,QAAQ,CAACe,oBAAoB,CAACb,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC7D;EACAW,aAAa,CAACd,EAAE,EAAEC,EAAE,EAAE;IAClB,OAAO,IAAI,CAACH,QAAQ,CAACgB,aAAa,CAACd,EAAE,EAAEC,EAAE,CAAC;EAC9C;EACAc,oBAAoB,CAACf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACzC,OAAO,IAAI,CAACP,QAAQ,CAACiB,oBAAoB,CAACf,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACrE;EACAW,SAAS,CAAChB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEY,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC1C,IAAInD,CAAC,GAAG4C,SAAS;MAAEd,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC3C,IAAI9B,CAAC,CAAC9C,MAAM,KAAK,CAAC,EAAE;MAChB4E,QAAQ,CAACkB,SAAS,CAAChB,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAClC,CAAC,MACI,IAAIlC,CAAC,CAAC9C,MAAM,KAAK,CAAC,EAAE;MACrB4E,QAAQ,CAACkB,SAAS,CAAChB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC1C,CAAC,MACI,IAAIpC,CAAC,CAAC9C,MAAM,KAAK,CAAC,EAAE;MACrB4E,QAAQ,CAACkB,SAAS,CAAChB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEY,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAC1D;EACJ;EACAC,OAAO,CAACpB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEY,EAAE,EAAEC,EAAE,EAAE;IACpC,IAAI,CAACpB,QAAQ,CAACsB,OAAO,CAACpB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEY,EAAE,EAAEC,EAAE,CAAC;EACzD;EACAG,aAAa,CAACvC,CAAC,EAAEC,CAAC,EAAE;IAChB,OAAO,IAAI,CAACe,QAAQ,CAACuB,aAAa,CAACvC,CAAC,EAAEC,CAAC,CAAC;EAC5C;EACAuC,IAAI,CAACC,MAAM,EAAE;IACT,IAAIA,MAAM,EAAE;MACR,IAAI,CAACzB,QAAQ,CAACwB,IAAI,CAACC,MAAM,CAAC;IAC9B,CAAC,MACI;MACD,IAAI,CAACzB,QAAQ,CAACwB,IAAI,EAAE;IACxB;EACJ;EACAE,QAAQ,CAAC1C,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAC1B,IAAI,CAACa,QAAQ,CAAC0B,QAAQ,CAAC1C,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAC;EAC/C;EACAwC,UAAU,CAAC3C,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAE;IAC5B,IAAI,CAACa,QAAQ,CAAC2B,UAAU,CAAC3C,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAC;EACjD;EACAyC,QAAQ,CAACC,IAAI,EAAE7C,CAAC,EAAEC,CAAC,EAAE6C,QAAQ,EAAE;IAC3B,IAAIA,QAAQ,EAAE;MACV,IAAI,CAAC9B,QAAQ,CAAC4B,QAAQ,CAACC,IAAI,EAAE7C,CAAC,EAAEC,CAAC,EAAE6C,QAAQ,CAAC;IAChD,CAAC,MACI;MACD,IAAI,CAAC9B,QAAQ,CAAC4B,QAAQ,CAACC,IAAI,EAAE7C,CAAC,EAAEC,CAAC,CAAC;IACtC;EACJ;EACA8C,WAAW,CAACF,IAAI,EAAE;IACd,OAAO,IAAI,CAAC7B,QAAQ,CAAC+B,WAAW,CAACF,IAAI,CAAC;EAC1C;EACAG,YAAY,CAAC9B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACzB,OAAO,IAAI,CAACL,QAAQ,CAACgC,YAAY,CAAC9B,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACrD;EACA4B,MAAM,CAAC/B,EAAE,EAAEC,EAAE,EAAE;IACX,IAAI,CAACH,QAAQ,CAACiC,MAAM,CAAC/B,EAAE,EAAEC,EAAE,CAAC;EAChC;EACA+B,MAAM,CAAChC,EAAE,EAAEC,EAAE,EAAE;IACX,IAAI,CAACH,QAAQ,CAACkC,MAAM,CAAChC,EAAE,EAAEC,EAAE,CAAC;EAChC;EACAgC,IAAI,CAACjC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjB,IAAI,CAACL,QAAQ,CAACmC,IAAI,CAACjC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACtC;EACA+B,YAAY,CAAClC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACrB,IAAI,CAACJ,QAAQ,CAACoC,YAAY,CAAClC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC1C;EACAiC,gBAAgB,CAACnC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC7B,IAAI,CAACL,QAAQ,CAACqC,gBAAgB,CAACnC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAClD;EACAiC,OAAO,GAAG;IACN,IAAI,CAACtC,QAAQ,CAACsC,OAAO,EAAE;EAC3B;EACAC,MAAM,CAACrC,EAAE,EAAE;IACP,IAAI,CAACF,QAAQ,CAACuC,MAAM,CAACrC,EAAE,CAAC;EAC5B;EACAsC,IAAI,GAAG;IACH,IAAI,CAACxC,QAAQ,CAACwC,IAAI,EAAE;EACxB;EACAC,KAAK,CAACvC,EAAE,EAAEC,EAAE,EAAE;IACV,IAAI,CAACH,QAAQ,CAACyC,KAAK,CAACvC,EAAE,EAAEC,EAAE,CAAC;EAC/B;EACAuC,WAAW,CAACxC,EAAE,EAAE;IACZ,IAAI,IAAI,CAACF,QAAQ,CAAC0C,WAAW,EAAE;MAC3B,IAAI,CAAC1C,QAAQ,CAAC0C,WAAW,CAACxC,EAAE,CAAC;IACjC,CAAC,MACI,IAAI,SAAS,IAAI,IAAI,CAACF,QAAQ,EAAE;MACjC,IAAI,CAACA,QAAQ,CAAC,SAAS,CAAC,GAAGE,EAAE;IACjC,CAAC,MACI,IAAI,gBAAgB,IAAI,IAAI,CAACF,QAAQ,EAAE;MACxC,IAAI,CAACA,QAAQ,CAAC,gBAAgB,CAAC,GAAGE,EAAE;IACxC;EACJ;EACAyC,WAAW,GAAG;IACV,OAAO,IAAI,CAAC3C,QAAQ,CAAC2C,WAAW,EAAE;EACtC;EACA/D,YAAY,CAACsB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACjC,IAAI,CAACP,QAAQ,CAACpB,YAAY,CAACsB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACtD;EACAqC,MAAM,CAACnB,MAAM,EAAE;IACX,IAAIA,MAAM,EAAE;MACR,IAAI,CAACzB,QAAQ,CAAC4C,MAAM,CAACnB,MAAM,CAAC;IAChC,CAAC,MACI;MACD,IAAI,CAACzB,QAAQ,CAAC4C,MAAM,EAAE;IAC1B;EACJ;EACAC,UAAU,CAAC3C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IACvB,IAAI,CAACL,QAAQ,CAAC6C,UAAU,CAAC3C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EAC5C;EACAyC,SAAS,CAAC5C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;IAC9B,IAAI,CAACP,QAAQ,CAAC8C,SAAS,CAAC5C,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACnD;EACAwC,SAAS,CAAC7C,EAAE,EAAEC,EAAE,EAAE;IACd,IAAI,CAACH,QAAQ,CAAC+C,SAAS,CAAC7C,EAAE,EAAEC,EAAE,CAAC;EACnC;EACAtD,YAAY,GAAG;IACX,IAAImG,IAAI,GAAG,IAAI;MAAE7H,GAAG,GAAGkB,eAAe,CAACjB,MAAM;MAAE6H,UAAU,GAAG,IAAI,CAACxD,OAAO;MAAEnE,CAAC;MAAEwC,IAAI;IACjF,IAAIoF,IAAI,GAAG,UAAUC,UAAU,EAAE;MAC7B,IAAIC,UAAU,GAAGJ,IAAI,CAACG,UAAU,CAAC;QAAEE,GAAG;MACtCL,IAAI,CAACG,UAAU,CAAC,GAAG,YAAY;QAC3BrF,IAAI,GAAG9C,aAAa,CAACsI,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC3C,SAAS,EAAE,CAAC,CAAC,CAAC;QAC9DuC,GAAG,GAAGD,UAAU,CAACM,KAAK,CAACV,IAAI,EAAElC,SAAS,CAAC;QACvCkC,IAAI,CAAC1E,MAAM,CAAC;UACRT,MAAM,EAAEsF,UAAU;UAClBrF,IAAI,EAAEA;QACV,CAAC,CAAC;QACF,OAAOuF,GAAG;MACd,CAAC;IACL,CAAC;IACD,KAAK/H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;MACtB4H,IAAI,CAAC7G,eAAe,CAACf,CAAC,CAAC,CAAC;IAC5B;IACA0H,IAAI,CAACvD,OAAO,GAAG,YAAY;MACvBwD,UAAU,CAACS,KAAK,CAACV,IAAI,EAAElC,SAAS,CAAC;MACjC,IAAI6C,IAAI,GAAG7C,SAAS,CAAC,CAAC,CAAC;MACvB,IAAIvF,GAAG,GAAGuF,SAAS,CAAC,CAAC,CAAC;MACtB,IAAI6C,IAAI,KAAK,eAAe,IACxBA,IAAI,KAAK,eAAe,IACxBA,IAAI,KAAK,YAAY,EAAE;QACvBpI,GAAG,GAAGA,GAAG,GAAG,IAAI,CAACmB,MAAM,CAACiC,aAAa,EAAE;MAC3C;MACAqE,IAAI,CAAC1E,MAAM,CAAC;QACRF,QAAQ,EAAEuF,IAAI;QACdpI,GAAG,EAAEA;MACT,CAAC,CAAC;IACN,CAAC;EACL;EACAqI,8BAA8B,CAACC,IAAI,EAAE;IACjC,MAAMC,EAAE,GAAGD,IAAI,CAACvG,KAAK,CAACyG,wBAAwB;IAC9C,IAAIC,GAAG,GAAG,CAACF,EAAE,IAAIA,EAAE,KAAK,aAAa;IACrC,IAAI,CAACE,GAAG,EAAE;MACN,IAAI,CAACvE,OAAO,CAAC,0BAA0B,EAAEqE,EAAE,CAAC;IAChD;EACJ;AACJ;AACAxH,kBAAkB,CAAC2H,OAAO,CAAC,UAAUN,IAAI,EAAE;EACvCO,MAAM,CAACC,cAAc,CAAC3H,OAAO,CAAC+G,SAAS,EAAEI,IAAI,EAAE;IAC3CS,GAAG,GAAG;MACF,OAAO,IAAI,CAACpE,QAAQ,CAAC2D,IAAI,CAAC;IAC9B,CAAC;IACDU,GAAG,CAAC9I,GAAG,EAAE;MACL,IAAI,CAACyE,QAAQ,CAAC2D,IAAI,CAAC,GAAGpI,GAAG;IAC7B;EACJ,CAAC,CAAC;AACN,CAAC,CAAC;AACF,OAAO,MAAM+I,YAAY,SAAS9H,OAAO,CAAC;EACtCC,WAAW,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACsD,QAAQ,GAAGtD,MAAM,CAAC6H,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;EACnD;EACAC,UAAU,CAAC1H,KAAK,EAAE;IACd,IAAIyE,IAAI,GAAGzE,KAAK,CAACyE,IAAI,EAAE;IACvB,IAAI,CAAC/B,OAAO,CAAC,WAAW,EAAE+B,IAAI,CAAC;IAC/BzE,KAAK,CAAC2H,SAAS,CAAC,IAAI,CAAC;EACzB;EACAC,YAAY,CAAC5H,KAAK,EAAE;IAChB,IAAI,CAAC0C,OAAO,CAAC,WAAW,EAAE1C,KAAK,CAAC6H,eAAe,EAAE,CAAC;IAClD7H,KAAK,CAAC2H,SAAS,CAAC,IAAI,CAAC;EACzB;EACAG,mBAAmB,CAAC9H,KAAK,EAAE;IACvB,IAAI+H,GAAG,GAAG/H,KAAK,CAACgI,kBAAkB,EAAE;IACpC,IAAID,GAAG,EAAE;MACL,IAAI,CAACrF,OAAO,CAAC,WAAW,EAAEqF,GAAG,CAAC;MAC9B/H,KAAK,CAAC2H,SAAS,CAAC,IAAI,CAAC;IACzB;EACJ;EACAM,mBAAmB,CAACjI,KAAK,EAAE;IACvB,IAAI+H,GAAG,GAAG/H,KAAK,CAACkI,kBAAkB,EAAE;IACpC,IAAIH,GAAG,EAAE;MACL,IAAI,CAACrF,OAAO,CAAC,WAAW,EAAEqF,GAAG,CAAC;MAC9B/H,KAAK,CAAC2H,SAAS,CAAC,IAAI,CAAC;IACzB;EACJ;EACAzH,KAAK,CAACF,KAAK,EAAE;IACT,IAAImI,QAAQ,GAAGnI,KAAK,CAACyE,IAAI,EAAE;MAAE2D,YAAY,GAAGpI,KAAK,CAACqI,eAAe,EAAE;IACnE,IAAIF,QAAQ,IAAIC,YAAY,KAAK,OAAO,EAAE;MACtC,IAAI,CAACV,UAAU,CAAC1H,KAAK,CAAC;MACtB;IACJ;IACA,IAAIsI,UAAU,GAAGtI,KAAK,CAACuI,mBAAmB,EAAE;IAC5C,IAAID,UAAU,IAAIF,YAAY,KAAK,SAAS,EAAE;MAC1C,IAAI,CAACR,YAAY,CAAC5H,KAAK,CAAC;MACxB;IACJ;IACA,IAAIwI,iBAAiB,GAAGxI,KAAK,CAACyI,+BAA+B,EAAE;IAC/D,IAAID,iBAAiB,IAAIJ,YAAY,KAAK,iBAAiB,EAAE;MACzD,IAAI,CAACN,mBAAmB,CAAC9H,KAAK,CAAC;MAC/B;IACJ;IACA,IAAI0I,iBAAiB,GAAG1I,KAAK,CAAC2I,+BAA+B,EAAE;IAC/D,IAAID,iBAAiB,IAAIN,YAAY,KAAK,iBAAiB,EAAE;MACzD,IAAI,CAACH,mBAAmB,CAACjI,KAAK,CAAC;MAC/B;IACJ;IACA,IAAImI,QAAQ,EAAE;MACV,IAAI,CAACT,UAAU,CAAC1H,KAAK,CAAC;IAC1B,CAAC,MACI,IAAIsI,UAAU,EAAE;MACjB,IAAI,CAACV,YAAY,CAAC5H,KAAK,CAAC;IAC5B,CAAC,MACI,IAAIwI,iBAAiB,EAAE;MACxB,IAAI,CAACV,mBAAmB,CAAC9H,KAAK,CAAC;IACnC,CAAC,MACI,IAAI0I,iBAAiB,EAAE;MACxB,IAAI,CAACT,mBAAmB,CAACjI,KAAK,CAAC;IACnC;EACJ;EACA4I,qBAAqB,CAAC5I,KAAK,EAAE;IACzB,IAAI6I,KAAK,GAAG7I,KAAK,CAAC8I,iCAAiC,EAAE;MAAEC,GAAG,GAAG/I,KAAK,CAACgJ,+BAA+B,EAAE;MAAEC,UAAU,GAAGjJ,KAAK,CAACkJ,iCAAiC,EAAE;MAAEnB,GAAG,GAAG,IAAI,CAAC/D,oBAAoB,CAAC6E,KAAK,CAAC5G,CAAC,EAAE4G,KAAK,CAAC3G,CAAC,EAAE6G,GAAG,CAAC9G,CAAC,EAAE8G,GAAG,CAAC7G,CAAC,CAAC;IAC7N,IAAI+G,UAAU,EAAE;MACZ,KAAK,IAAI1K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0K,UAAU,CAAC5K,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;QAC3CwJ,GAAG,CAACoB,YAAY,CAACF,UAAU,CAAC1K,CAAC,CAAC,EAAE0K,UAAU,CAAC1K,CAAC,GAAG,CAAC,CAAC,CAAC;MACtD;MACA,IAAI,CAACmE,OAAO,CAAC,aAAa,EAAEqF,GAAG,CAAC;IACpC;EACJ;EACA1H,OAAO,CAACL,KAAK,EAAE;IACX,IAAIoJ,IAAI,GAAGpJ,KAAK,CAACoJ,IAAI,EAAE;MAAEC,kBAAkB,GAAGrJ,KAAK,CAACsJ,qBAAqB,EAAE;IAC3E,IAAItJ,KAAK,CAACI,SAAS,EAAE,EAAE;MACnB,IAAI,CAACiJ,kBAAkB,EAAE;QACrB,IAAI,CAAC5D,IAAI,EAAE;QACX,IAAI/D,UAAU,GAAG,IAAI,CAACC,SAAS,EAAE,CAACC,aAAa,EAAE;QACjD,IAAI,CAACC,YAAY,CAACH,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEA,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;MACzD;MACA,IAAI,CAACa,aAAa,CAACvC,KAAK,CAAC;MACzB,IAAIoJ,IAAI,IAAIpJ,KAAK,CAACuJ,WAAW,EAAE,EAAE;QAC7B,IAAI,CAAC5D,WAAW,CAACyD,IAAI,CAAC;QACtB,IAAI,CAAC1G,OAAO,CAAC,gBAAgB,EAAE1C,KAAK,CAACwJ,UAAU,EAAE,CAAC;MACtD;MACA,IAAI,CAAC9G,OAAO,CAAC,WAAW,EAAE1C,KAAK,CAACyJ,WAAW,EAAE,CAAC;MAC9C,IAAI,CAACzJ,KAAK,CAAC0J,yBAAyB,EAAE,EAAE;QACpC,IAAI,CAAChH,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC;MAChD;MACA,IAAI8F,iBAAiB,GAAGxI,KAAK,CAACkJ,iCAAiC,EAAE;MACjE,IAAIV,iBAAiB,EAAE;QACnB,IAAI,CAACI,qBAAqB,CAAC5I,KAAK,CAAC;MACrC,CAAC,MACI;QACD,IAAI,CAAC0C,OAAO,CAAC,aAAa,EAAE1C,KAAK,CAAC6F,MAAM,EAAE,CAAC;MAC/C;MACA7F,KAAK,CAAC2J,WAAW,CAAC,IAAI,CAAC;MACvB,IAAI,CAACN,kBAAkB,EAAE;QACrB,IAAI,CAAC9D,OAAO,EAAE;MAClB;IACJ;EACJ;EACAqE,YAAY,CAAC5J,KAAK,EAAE;IAChB,IAAI6J,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,IAAIC,KAAK,GAAG,CAACH,EAAE,GAAG7J,KAAK,CAACiK,aAAa,EAAE,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,OAAO;MAAEK,IAAI,GAAG,CAACJ,EAAE,GAAG9J,KAAK,CAACmK,aAAa,EAAE,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC;MAAEM,MAAM,GAAG,CAACL,EAAE,GAAG/J,KAAK,CAACqK,eAAe,EAAE,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;QAChO9H,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;MACP,CAAC;MAAEwD,KAAK,GAAG1F,KAAK,CAACsK,gBAAgB,EAAE;MAAEC,KAAK,GAAG,IAAI,CAAC5K,MAAM,CAACiC,aAAa,EAAE;MAAE4I,MAAM,GAAG9E,KAAK,CAACzD,CAAC,GAAGsI,KAAK;MAAEE,MAAM,GAAG/E,KAAK,CAACxD,CAAC,GAAGqI,KAAK;IAC5H,IAAI,CAAC7H,OAAO,CAAC,aAAa,EAAEsH,KAAK,CAAC;IAClC,IAAI,CAACtH,OAAO,CAAC,YAAY,EAAEwH,IAAI,GAAGxL,IAAI,CAACgM,GAAG,CAAChM,IAAI,CAACiM,GAAG,CAACH,MAAM,CAAC,EAAE9L,IAAI,CAACiM,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC;IAC/E,IAAI,CAAC/H,OAAO,CAAC,eAAe,EAAE0H,MAAM,CAACnI,CAAC,GAAGuI,MAAM,CAAC;IAChD,IAAI,CAAC9H,OAAO,CAAC,eAAe,EAAE0H,MAAM,CAAClI,CAAC,GAAGuI,MAAM,CAAC;EACpD;AACJ;AACA,OAAO,MAAMG,UAAU,SAASnL,OAAO,CAAC;EACpCC,WAAW,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACb,IAAI,CAACsD,QAAQ,GAAGtD,MAAM,CAAC6H,OAAO,CAACC,UAAU,CAAC,IAAI,EAAE;MAC5CoD,kBAAkB,EAAE;IACxB,CAAC,CAAC;EACN;EACA3K,KAAK,CAACF,KAAK,EAAE;IACT,IAAI,CAACyF,IAAI,EAAE;IACX,IAAI,CAAC/C,OAAO,CAAC,WAAW,EAAE1C,KAAK,CAAC8K,QAAQ,CAAC;IACzC9K,KAAK,CAAC+K,YAAY,CAAC,IAAI,CAAC;IACxB,IAAI,CAACxF,OAAO,EAAE;EAClB;EACApF,WAAW,CAACH,KAAK,EAAE;IACf,IAAIA,KAAK,CAACgL,YAAY,EAAE,EAAE;MACtB,IAAI,CAAC3K,OAAO,CAACL,KAAK,CAAC;IACvB;EACJ;EACAK,OAAO,CAACL,KAAK,EAAE;IACX,IAAIA,KAAK,CAACgL,YAAY,EAAE,EAAE;MACtB,IAAI3B,kBAAkB,GAAGrJ,KAAK,CAACsJ,qBAAqB,EAAE;MACtD,IAAI,CAACD,kBAAkB,EAAE;QACrB,IAAI,CAAC5D,IAAI,EAAE;QACX,IAAI/D,UAAU,GAAG,IAAI,CAACC,SAAS,EAAE,CAACC,aAAa,EAAE;QACjD,IAAI,CAACC,YAAY,CAACH,UAAU,EAAE,CAAC,EAAE,CAAC,EAAEA,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC;MACzD;MACA,IAAI,CAACa,aAAa,CAACvC,KAAK,CAAC;MACzB,IAAIiL,cAAc,GAAGjL,KAAK,CAACiL,cAAc,EAAE;MAC3C,IAAIxB,WAAW,GAAGwB,cAAc,KAAK,MAAM,GAAGjL,KAAK,CAACyJ,WAAW,EAAE,GAAGwB,cAAc;MAClF,IAAI,CAACvI,OAAO,CAAC,WAAW,EAAE+G,WAAW,CAAC;MACtC,IAAI,CAAC/G,OAAO,CAAC,aAAa,EAAE1C,KAAK,CAAC8K,QAAQ,CAAC;MAC3C9K,KAAK,CAACkL,cAAc,CAAC,IAAI,CAAC;MAC1B,IAAI,CAAC7B,kBAAkB,EAAE;QACrB,IAAI,CAAC9D,OAAO,EAAE;MAClB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module"}