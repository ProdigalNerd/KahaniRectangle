{"ast":null,"code":"var _jsxFileName = \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/src/components/Scene/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst View = _ref => {\n  let {\n    shapes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: shapes.map(shape => /*#__PURE__*/_jsxDEV(Rect, {\n        ...shape\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_c = View;\nconst Scene = () => {\n  _s();\n  const [shapes, setShapes] = useState([]);\n  const colors = ['blue', 'black', 'red', 'green', 'yellow'];\n  console.log('hit');\n  setShapes([{\n    x: 100,\n    y: 100,\n    width: 200,\n    height: 100,\n    fill: colors[0]\n  }]);\n  return /*#__PURE__*/_jsxDEV(View, {\n    shapes: shapes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"Et3hhzhECd9/+GfRBOV3CaO0Wzs=\");\n_c2 = Scene;\nexport default Scene;\nvar _c, _c2;\n$RefreshReg$(_c, \"View\");\n$RefreshReg$(_c2, \"Scene\");","map":{"version":3,"names":["React","useState","Stage","Layer","Rect","View","shapes","window","innerWidth","innerHeight","map","shape","Scene","setShapes","colors","console","log","x","y","width","height","fill"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/src/components/Scene/index.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport { Stage, Layer, Rect } from 'react-konva';\n\ntype RectDef = {\n  x: number,\n  y: number,\n  fill: string,\n  width: number,\n  height: number,\n}\n\ninterface SceneProps {\n  shapes: Array<RectDef>\n}\n\nconst View: FC<SceneProps> = ({ shapes }) => (\n  <Stage width={window.innerWidth} height={window.innerHeight}>\n    <Layer>\n      {shapes.map((shape) => (\n        <Rect {...shape} />\n      ))}\n    </Layer>\n  </Stage>\n);\n\nconst Scene: FC = () => {\n  const [shapes, setShapes] = useState<RectDef[]>([]);\n  const colors = ['blue', 'black', 'red', 'green', 'yellow'];\n  console.log('hit');\n  setShapes([\n    {\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 100,\n      fill: colors[0],\n    } as RectDef\n  ])\n\n  return (\n    <View shapes={shapes} />\n  );\n};\n\nexport default Scene;"],"mappings":";;AAAA,OAAOA,KAAK,IAAQC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;AAAC;AAcjD,MAAMC,IAAoB,GAAG;EAAA,IAAC;IAAEC;EAAO,CAAC;EAAA,oBACtC,QAAC,KAAK;IAAC,KAAK,EAAEC,MAAM,CAACC,UAAW;IAAC,MAAM,EAAED,MAAM,CAACE,WAAY;IAAA,uBAC1D,QAAC,KAAK;MAAA,UACHH,MAAM,CAACI,GAAG,CAAEC,KAAK,iBAChB,QAAC,IAAI;QAAA,GAAKA;MAAK;QAAA;QAAA;QAAA;MAAA,QAChB;IAAC;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACF;AAAA,CACT;AAAC,KARIN,IAAoB;AAU1B,MAAMO,KAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACN,MAAM,EAAEO,SAAS,CAAC,GAAGZ,QAAQ,CAAY,EAAE,CAAC;EACnD,MAAMa,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClBH,SAAS,CAAC,CACR;IACEI,CAAC,EAAE,GAAG;IACNC,CAAC,EAAE,GAAG;IACNC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAEP,MAAM,CAAC,CAAC;EAChB,CAAC,CACF,CAAC;EAEF,oBACE,QAAC,IAAI;IAAC,MAAM,EAAER;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;AAE5B,CAAC;AAAC,GAjBIM,KAAS;AAAA,MAATA,KAAS;AAmBf,eAAeA,KAAK;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}