{"ast":null,"code":"import _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Util, Transform } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Shape } from '../Shape.js';\nimport { Rect } from './Rect.js';\nimport { Group } from '../Group.js';\nimport { Konva } from '../Global.js';\nimport { getBooleanValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = ['resizeEnabledChange', 'rotateAnchorOffsetChange', 'rotateEnabledChange', 'enabledAnchorsChange', 'anchorSizeChange', 'borderEnabledChange', 'borderStrokeChange', 'borderStrokeWidthChange', 'borderDashChange', 'anchorStrokeChange', 'anchorStrokeWidthChange', 'anchorFillChange', 'anchorCornerRadiusChange', 'ignoreStrokeChange'].map(function (e) {\n  return e + \".\".concat(EVENTS_NAME);\n}).join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = ['widthChange', 'heightChange', 'scaleXChange', 'scaleYChange', 'skewXChange', 'skewYChange', 'rotationChange', 'offsetXChange', 'offsetYChange', 'transformsEnabledChange', 'strokeWidthChange'];\nvar ANGLES = {\n  'top-left': -45,\n  'top-center': 0,\n  'top-right': 45,\n  'middle-right': -90,\n  'middle-left': 90,\n  'bottom-left': -135,\n  'bottom-center': 180,\n  'bottom-right': 135\n};\nvar TOUCH_DEVICE = ('ontouchstart' in Konva._global);\nfunction getCursor(anchorName, rad) {\n  if (anchorName === 'rotater') {\n    return 'crosshair';\n  }\n  rad += Util.degToRad(ANGLES[anchorName] || 0);\n  var angle = (Util.radToDeg(rad) % 360 + 360) % 360;\n  if (Util._inRange(angle, 315 + 22.5, 360) || Util._inRange(angle, 0, 22.5)) {\n    return 'ns-resize';\n  } else if (Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n    return 'nwse-resize';\n  } else if (Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n    return 'ns-resize';\n  } else if (Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n    return 'nesw-resize';\n  } else if (Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n    return 'ew-resize';\n  } else if (Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n    return 'nwse-resize';\n  } else {\n    Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n    return 'pointer';\n  }\n}\nvar ANCHORS_NAMES = ['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right'];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n  return {\n    x: shape.x + shape.width / 2 * Math.cos(shape.rotation) + shape.height / 2 * Math.sin(-shape.rotation),\n    y: shape.y + shape.height / 2 * Math.cos(shape.rotation) + shape.width / 2 * Math.sin(shape.rotation)\n  };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n  var x = point.x + (shape.x - point.x) * Math.cos(angleRad) - (shape.y - point.y) * Math.sin(angleRad);\n  var y = point.y + (shape.x - point.x) * Math.sin(angleRad) + (shape.y - point.y) * Math.cos(angleRad);\n  return Object.assign(Object.assign({}, shape), {\n    rotation: shape.rotation + angleRad,\n    x: x,\n    y: y\n  });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n  var center = getCenter(shape);\n  return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n  var snapped = newRotationRad;\n  for (var i = 0; i < snaps.length; i++) {\n    var angle = Konva.getAngle(snaps[i]);\n    var absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n    var dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n    if (dif < tol) {\n      snapped = angle;\n    }\n  }\n  return snapped;\n}\nexport var Transformer = /*#__PURE__*/function (_Group) {\n  _inherits(Transformer, _Group);\n  var _super = _createSuper(Transformer);\n  function Transformer(config) {\n    var _this;\n    _classCallCheck(this, Transformer);\n    _this = _super.call(this, config);\n    _this._transforming = false;\n    _this._createElements();\n    _this._handleMouseMove = _this._handleMouseMove.bind(_assertThisInitialized(_this));\n    _this._handleMouseUp = _this._handleMouseUp.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.on(ATTR_CHANGE_LIST, _this.update);\n    if (_this.getNode()) {\n      _this.update();\n    }\n    return _this;\n  }\n  _createClass(Transformer, [{\n    key: \"attachTo\",\n    value: function attachTo(node) {\n      this.setNode(node);\n      return this;\n    }\n  }, {\n    key: \"setNode\",\n    value: function setNode(node) {\n      Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n      return this.setNodes([node]);\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode() {\n      return this._nodes && this._nodes[0];\n    }\n  }, {\n    key: \"_getEventNamespace\",\n    value: function _getEventNamespace() {\n      return EVENTS_NAME + this._id;\n    }\n  }, {\n    key: \"setNodes\",\n    value: function setNodes() {\n      var _this2 = this;\n      var nodes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      if (this._nodes && this._nodes.length) {\n        this.detach();\n      }\n      this._nodes = nodes;\n      if (nodes.length === 1 && this.useSingleNodeRotation()) {\n        this.rotation(nodes[0].getAbsoluteRotation());\n      } else {\n        this.rotation(0);\n      }\n      this._nodes.forEach(function (node) {\n        var onChange = function onChange() {\n          if (_this2.nodes().length === 1 && _this2.useSingleNodeRotation()) {\n            _this2.rotation(_this2.nodes()[0].getAbsoluteRotation());\n          }\n          _this2._resetTransformCache();\n          if (!_this2._transforming && !_this2.isDragging()) {\n            _this2.update();\n          }\n        };\n        var additionalEvents = node._attrsAffectingSize.map(function (prop) {\n          return prop + 'Change.' + _this2._getEventNamespace();\n        }).join(' ');\n        node.on(additionalEvents, onChange);\n        node.on(TRANSFORM_CHANGE_STR.map(function (e) {\n          return e + \".\".concat(_this2._getEventNamespace());\n        }).join(' '), onChange);\n        node.on(\"absoluteTransformChange.\".concat(_this2._getEventNamespace()), onChange);\n        _this2._proxyDrag(node);\n      });\n      this._resetTransformCache();\n      var elementsCreated = !!this.findOne('.top-left');\n      if (elementsCreated) {\n        this.update();\n      }\n      return this;\n    }\n  }, {\n    key: \"_proxyDrag\",\n    value: function _proxyDrag(node) {\n      var _this3 = this;\n      var lastPos;\n      node.on(\"dragstart.\".concat(this._getEventNamespace()), function (e) {\n        lastPos = node.getAbsolutePosition();\n        if (!_this3.isDragging() && node !== _this3.findOne('.back')) {\n          _this3.startDrag(e, false);\n        }\n      });\n      node.on(\"dragmove.\".concat(this._getEventNamespace()), function (e) {\n        if (!lastPos) {\n          return;\n        }\n        var abs = node.getAbsolutePosition();\n        var dx = abs.x - lastPos.x;\n        var dy = abs.y - lastPos.y;\n        _this3.nodes().forEach(function (otherNode) {\n          if (otherNode === node) {\n            return;\n          }\n          if (otherNode.isDragging()) {\n            return;\n          }\n          var otherAbs = otherNode.getAbsolutePosition();\n          otherNode.setAbsolutePosition({\n            x: otherAbs.x + dx,\n            y: otherAbs.y + dy\n          });\n          otherNode.startDrag(e);\n        });\n        lastPos = null;\n      });\n    }\n  }, {\n    key: \"getNodes\",\n    value: function getNodes() {\n      return this._nodes || [];\n    }\n  }, {\n    key: \"getActiveAnchor\",\n    value: function getActiveAnchor() {\n      return this._movingAnchorName;\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var _this4 = this;\n      if (this._nodes) {\n        this._nodes.forEach(function (node) {\n          node.off('.' + _this4._getEventNamespace());\n        });\n      }\n      this._nodes = [];\n      this._resetTransformCache();\n    }\n  }, {\n    key: \"_resetTransformCache\",\n    value: function _resetTransformCache() {\n      this._clearCache(NODES_RECT);\n      this._clearCache('transform');\n      this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n  }, {\n    key: \"_getNodeRect\",\n    value: function _getNodeRect() {\n      return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n  }, {\n    key: \"__getNodeShape\",\n    value: function __getNodeShape(node) {\n      var rot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.rotation();\n      var relative = arguments.length > 2 ? arguments[2] : undefined;\n      var rect = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      var absScale = node.getAbsoluteScale(relative);\n      var absPos = node.getAbsolutePosition(relative);\n      var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n      var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n      var rotation = (Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) % (Math.PI * 2);\n      var box = {\n        x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n        y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n        width: rect.width * absScale.x,\n        height: rect.height * absScale.y,\n        rotation: rotation\n      };\n      return rotateAroundPoint(box, -Konva.getAngle(rot), {\n        x: 0,\n        y: 0\n      });\n    }\n  }, {\n    key: \"__getNodeRect\",\n    value: function __getNodeRect() {\n      var _this5 = this;\n      var node = this.getNode();\n      if (!node) {\n        return {\n          x: -MAX_SAFE_INTEGER,\n          y: -MAX_SAFE_INTEGER,\n          width: 0,\n          height: 0,\n          rotation: 0\n        };\n      }\n      var totalPoints = [];\n      this.nodes().map(function (node) {\n        var box = node.getClientRect({\n          skipTransform: true,\n          skipShadow: true,\n          skipStroke: _this5.ignoreStroke()\n        });\n        var points = [{\n          x: box.x,\n          y: box.y\n        }, {\n          x: box.x + box.width,\n          y: box.y\n        }, {\n          x: box.x + box.width,\n          y: box.y + box.height\n        }, {\n          x: box.x,\n          y: box.y + box.height\n        }];\n        var trans = node.getAbsoluteTransform();\n        points.forEach(function (point) {\n          var transformed = trans.point(point);\n          totalPoints.push(transformed);\n        });\n      });\n      var tr = new Transform();\n      tr.rotate(-Konva.getAngle(this.rotation()));\n      var minX, minY, maxX, maxY;\n      totalPoints.forEach(function (point) {\n        var transformed = tr.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      tr.invert();\n      var p = tr.point({\n        x: minX,\n        y: minY\n      });\n      return {\n        x: p.x,\n        y: p.y,\n        width: maxX - minX,\n        height: maxY - minY,\n        rotation: Konva.getAngle(this.rotation())\n      };\n    }\n  }, {\n    key: \"getX\",\n    value: function getX() {\n      return this._getNodeRect().x;\n    }\n  }, {\n    key: \"getY\",\n    value: function getY() {\n      return this._getNodeRect().y;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this._getNodeRect().width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this._getNodeRect().height;\n    }\n  }, {\n    key: \"_createElements\",\n    value: function _createElements() {\n      this._createBack();\n      ANCHORS_NAMES.forEach(function (name) {\n        this._createAnchor(name);\n      }.bind(this));\n      this._createAnchor('rotater');\n    }\n  }, {\n    key: \"_createAnchor\",\n    value: function _createAnchor(name) {\n      var _this6 = this;\n      var anchor = new Rect({\n        stroke: 'rgb(0, 161, 255)',\n        fill: 'white',\n        strokeWidth: 1,\n        name: name + ' _anchor',\n        dragDistance: 0,\n        draggable: true,\n        hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto'\n      });\n      var self = this;\n      anchor.on('mousedown touchstart', function (e) {\n        self._handleMouseDown(e);\n      });\n      anchor.on('dragstart', function (e) {\n        anchor.stopDrag();\n        e.cancelBubble = true;\n      });\n      anchor.on('dragend', function (e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('mouseenter', function () {\n        var rad = Konva.getAngle(_this6.rotation());\n        var cursor = getCursor(name, rad);\n        anchor.getStage().content && (anchor.getStage().content.style.cursor = cursor);\n        _this6._cursorChange = true;\n      });\n      anchor.on('mouseout', function () {\n        anchor.getStage().content && (anchor.getStage().content.style.cursor = '');\n        _this6._cursorChange = false;\n      });\n      this.add(anchor);\n    }\n  }, {\n    key: \"_createBack\",\n    value: function _createBack() {\n      var _this7 = this;\n      var back = new Shape({\n        name: 'back',\n        width: 0,\n        height: 0,\n        draggable: true,\n        sceneFunc: function sceneFunc(ctx) {\n          var tr = this.getParent();\n          var padding = tr.padding();\n          ctx.beginPath();\n          ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n          ctx.moveTo(this.width() / 2, -padding);\n          if (tr.rotateEnabled()) {\n            ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util._sign(this.height()) - padding);\n          }\n          ctx.fillStrokeShape(this);\n        },\n        hitFunc: function hitFunc(ctx, shape) {\n          if (!_this7.shouldOverdrawWholeArea()) {\n            return;\n          }\n          var padding = _this7.padding();\n          ctx.beginPath();\n          ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n          ctx.fillStrokeShape(shape);\n        }\n      });\n      this.add(back);\n      this._proxyDrag(back);\n      back.on('dragstart', function (e) {\n        e.cancelBubble = true;\n      });\n      back.on('dragmove', function (e) {\n        e.cancelBubble = true;\n      });\n      back.on('dragend', function (e) {\n        e.cancelBubble = true;\n      });\n      this.on('dragmove', function (e) {\n        _this7.update();\n      });\n    }\n  }, {\n    key: \"_handleMouseDown\",\n    value: function _handleMouseDown(e) {\n      this._movingAnchorName = e.target.name().split(' ')[0];\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n      var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n      this.sin = Math.abs(height / hypotenuse);\n      this.cos = Math.abs(width / hypotenuse);\n      if (typeof window !== 'undefined') {\n        window.addEventListener('mousemove', this._handleMouseMove);\n        window.addEventListener('touchmove', this._handleMouseMove);\n        window.addEventListener('mouseup', this._handleMouseUp, true);\n        window.addEventListener('touchend', this._handleMouseUp, true);\n      }\n      this._transforming = true;\n      var ap = e.target.getAbsolutePosition();\n      var pos = e.target.getStage().getPointerPosition();\n      this._anchorDragOffset = {\n        x: pos.x - ap.x,\n        y: pos.y - ap.y\n      };\n      this._fire('transformstart', {\n        evt: e.evt,\n        target: this.getNode()\n      });\n      this._nodes.forEach(function (target) {\n        target._fire('transformstart', {\n          evt: e.evt,\n          target: target\n        });\n      });\n    }\n  }, {\n    key: \"_handleMouseMove\",\n    value: function _handleMouseMove(e) {\n      var x, y, newHypotenuse;\n      var anchorNode = this.findOne('.' + this._movingAnchorName);\n      var stage = anchorNode.getStage();\n      stage.setPointersPositions(e);\n      var pp = stage.getPointerPosition();\n      var newNodePos = {\n        x: pp.x - this._anchorDragOffset.x,\n        y: pp.y - this._anchorDragOffset.y\n      };\n      var oldAbs = anchorNode.getAbsolutePosition();\n      if (this.anchorDragBoundFunc()) {\n        newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n      }\n      anchorNode.setAbsolutePosition(newNodePos);\n      var newAbs = anchorNode.getAbsolutePosition();\n      if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n        return;\n      }\n      if (this._movingAnchorName === 'rotater') {\n        var attrs = this._getNodeRect();\n        x = anchorNode.x() - attrs.width / 2;\n        y = -anchorNode.y() + attrs.height / 2;\n        var delta = Math.atan2(-y, x) + Math.PI / 2;\n        if (attrs.height < 0) {\n          delta -= Math.PI;\n        }\n        var oldRotation = Konva.getAngle(this.rotation());\n        var newRotation = oldRotation + delta;\n        var tol = Konva.getAngle(this.rotationSnapTolerance());\n        var snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n        var diff = snappedRot - attrs.rotation;\n        var shape = rotateAroundCenter(attrs, diff);\n        this._fitNodesInto(shape, e);\n        return;\n      }\n      var keepProportion = this.keepRatio() || e.shiftKey;\n      var centeredScaling = this.centeredScaling() || e.altKey;\n      if (this._movingAnchorName === 'top-left') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.bottom-right').x(),\n            y: this.findOne('.bottom-right').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n          var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.top-left').x(comparePoint.x - x);\n          this.findOne('.top-left').y(comparePoint.y - y);\n        }\n      } else if (this._movingAnchorName === 'top-center') {\n        this.findOne('.top-left').y(anchorNode.y());\n      } else if (this._movingAnchorName === 'top-right') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.bottom-left').x(),\n            y: this.findOne('.bottom-left').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(comparePoint.y - anchorNode.y(), 2));\n          var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.top-right').x(comparePoint.x + x);\n          this.findOne('.top-right').y(comparePoint.y - y);\n        }\n        var pos = anchorNode.position();\n        this.findOne('.top-left').y(pos.y);\n        this.findOne('.bottom-right').x(pos.x);\n      } else if (this._movingAnchorName === 'middle-left') {\n        this.findOne('.top-left').x(anchorNode.x());\n      } else if (this._movingAnchorName === 'middle-right') {\n        this.findOne('.bottom-right').x(anchorNode.x());\n      } else if (this._movingAnchorName === 'bottom-left') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.top-right').x(),\n            y: this.findOne('.top-right').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n          var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n          var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          anchorNode.x(comparePoint.x - x);\n          anchorNode.y(comparePoint.y + y);\n        }\n        pos = anchorNode.position();\n        this.findOne('.top-left').x(pos.x);\n        this.findOne('.bottom-right').y(pos.y);\n      } else if (this._movingAnchorName === 'bottom-center') {\n        this.findOne('.bottom-right').y(anchorNode.y());\n      } else if (this._movingAnchorName === 'bottom-right') {\n        if (keepProportion) {\n          var comparePoint = centeredScaling ? {\n            x: this.width() / 2,\n            y: this.height() / 2\n          } : {\n            x: this.findOne('.top-left').x(),\n            y: this.findOne('.top-left').y()\n          };\n          newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) + Math.pow(anchorNode.y() - comparePoint.y, 2));\n          var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n          var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n          x = newHypotenuse * this.cos * reverseX;\n          y = newHypotenuse * this.sin * reverseY;\n          this.findOne('.bottom-right').x(comparePoint.x + x);\n          this.findOne('.bottom-right').y(comparePoint.y + y);\n        }\n      } else {\n        console.error(new Error('Wrong position argument of selection resizer: ' + this._movingAnchorName));\n      }\n      var centeredScaling = this.centeredScaling() || e.altKey;\n      if (centeredScaling) {\n        var topLeft = this.findOne('.top-left');\n        var bottomRight = this.findOne('.bottom-right');\n        var topOffsetX = topLeft.x();\n        var topOffsetY = topLeft.y();\n        var bottomOffsetX = this.getWidth() - bottomRight.x();\n        var bottomOffsetY = this.getHeight() - bottomRight.y();\n        bottomRight.move({\n          x: -topOffsetX,\n          y: -topOffsetY\n        });\n        topLeft.move({\n          x: bottomOffsetX,\n          y: bottomOffsetY\n        });\n      }\n      var absPos = this.findOne('.top-left').getAbsolutePosition();\n      x = absPos.x;\n      y = absPos.y;\n      var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n      var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n      this._fitNodesInto({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        rotation: Konva.getAngle(this.rotation())\n      }, e);\n    }\n  }, {\n    key: \"_handleMouseUp\",\n    value: function _handleMouseUp(e) {\n      this._removeEvents(e);\n    }\n  }, {\n    key: \"getAbsoluteTransform\",\n    value: function getAbsoluteTransform() {\n      return this.getTransform();\n    }\n  }, {\n    key: \"_removeEvents\",\n    value: function _removeEvents(e) {\n      if (this._transforming) {\n        this._transforming = false;\n        if (typeof window !== 'undefined') {\n          window.removeEventListener('mousemove', this._handleMouseMove);\n          window.removeEventListener('touchmove', this._handleMouseMove);\n          window.removeEventListener('mouseup', this._handleMouseUp, true);\n          window.removeEventListener('touchend', this._handleMouseUp, true);\n        }\n        var node = this.getNode();\n        this._fire('transformend', {\n          evt: e,\n          target: node\n        });\n        if (node) {\n          this._nodes.forEach(function (target) {\n            target._fire('transformend', {\n              evt: e,\n              target: target\n            });\n          });\n        }\n        this._movingAnchorName = null;\n      }\n    }\n  }, {\n    key: \"_fitNodesInto\",\n    value: function _fitNodesInto(newAttrs, evt) {\n      var _this8 = this;\n      var oldAttrs = this._getNodeRect();\n      var minSize = 1;\n      if (Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n        this.update();\n        return;\n      }\n      if (Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n        this.update();\n        return;\n      }\n      var allowNegativeScale = this.flipEnabled();\n      var t = new Transform();\n      t.rotate(Konva.getAngle(this.rotation()));\n      if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('left') >= 0) {\n        var offset = t.point({\n          x: -this.padding() * 2,\n          y: 0\n        });\n        newAttrs.x += offset.x;\n        newAttrs.y += offset.y;\n        newAttrs.width += this.padding() * 2;\n        this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n        this._anchorDragOffset.x -= offset.x;\n        this._anchorDragOffset.y -= offset.y;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      } else if (this._movingAnchorName && newAttrs.width < 0 && this._movingAnchorName.indexOf('right') >= 0) {\n        var _offset = t.point({\n          x: this.padding() * 2,\n          y: 0\n        });\n        this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n        this._anchorDragOffset.x -= _offset.x;\n        this._anchorDragOffset.y -= _offset.y;\n        newAttrs.width += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      }\n      if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('top') >= 0) {\n        var _offset2 = t.point({\n          x: 0,\n          y: -this.padding() * 2\n        });\n        newAttrs.x += _offset2.x;\n        newAttrs.y += _offset2.y;\n        this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n        this._anchorDragOffset.x -= _offset2.x;\n        this._anchorDragOffset.y -= _offset2.y;\n        newAttrs.height += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      } else if (this._movingAnchorName && newAttrs.height < 0 && this._movingAnchorName.indexOf('bottom') >= 0) {\n        var _offset3 = t.point({\n          x: 0,\n          y: this.padding() * 2\n        });\n        this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n        this._anchorDragOffset.x -= _offset3.x;\n        this._anchorDragOffset.y -= _offset3.y;\n        newAttrs.height += this.padding() * 2;\n        if (!allowNegativeScale) {\n          this.update();\n          return;\n        }\n      }\n      if (this.boundBoxFunc()) {\n        var bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n        if (bounded) {\n          newAttrs = bounded;\n        } else {\n          Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n        }\n      }\n      var baseSize = 10000000;\n      var oldTr = new Transform();\n      oldTr.translate(oldAttrs.x, oldAttrs.y);\n      oldTr.rotate(oldAttrs.rotation);\n      oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n      var newTr = new Transform();\n      newTr.translate(newAttrs.x, newAttrs.y);\n      newTr.rotate(newAttrs.rotation);\n      newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n      var delta = newTr.multiply(oldTr.invert());\n      this._nodes.forEach(function (node) {\n        var _a;\n        var parentTransform = node.getParent().getAbsoluteTransform();\n        var localTransform = node.getTransform().copy();\n        localTransform.translate(node.offsetX(), node.offsetY());\n        var newLocalTransform = new Transform();\n        newLocalTransform.multiply(parentTransform.copy().invert()).multiply(delta).multiply(parentTransform).multiply(localTransform);\n        var attrs = newLocalTransform.decompose();\n        node.setAttrs(attrs);\n        _this8._fire('transform', {\n          evt: evt,\n          target: node\n        });\n        node._fire('transform', {\n          evt: evt,\n          target: node\n        });\n        (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n      });\n      this.rotation(Util._getRotation(newAttrs.rotation));\n      this._resetTransformCache();\n      this.update();\n      this.getLayer().batchDraw();\n    }\n  }, {\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      this._resetTransformCache();\n      this.update();\n    }\n  }, {\n    key: \"_batchChangeChild\",\n    value: function _batchChangeChild(selector, attrs) {\n      var anchor = this.findOne(selector);\n      anchor.setAttrs(attrs);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this9 = this;\n      var _a;\n      var attrs = this._getNodeRect();\n      this.rotation(Util._getRotation(attrs.rotation));\n      var width = attrs.width;\n      var height = attrs.height;\n      var enabledAnchors = this.enabledAnchors();\n      var resizeEnabled = this.resizeEnabled();\n      var padding = this.padding();\n      var anchorSize = this.anchorSize();\n      this.find('._anchor').forEach(function (node) {\n        node.setAttrs({\n          width: anchorSize,\n          height: anchorSize,\n          offsetX: anchorSize / 2,\n          offsetY: anchorSize / 2,\n          stroke: _this9.anchorStroke(),\n          strokeWidth: _this9.anchorStrokeWidth(),\n          fill: _this9.anchorFill(),\n          cornerRadius: _this9.anchorCornerRadius()\n        });\n      });\n      this._batchChangeChild('.top-left', {\n        x: 0,\n        y: 0,\n        offsetX: anchorSize / 2 + padding,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n      });\n      this._batchChangeChild('.top-center', {\n        x: width / 2,\n        y: 0,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n      });\n      this._batchChangeChild('.top-right', {\n        x: width,\n        y: 0,\n        offsetX: anchorSize / 2 - padding,\n        offsetY: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n      });\n      this._batchChangeChild('.middle-left', {\n        x: 0,\n        y: height / 2,\n        offsetX: anchorSize / 2 + padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n      });\n      this._batchChangeChild('.middle-right', {\n        x: width,\n        y: height / 2,\n        offsetX: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n      });\n      this._batchChangeChild('.bottom-left', {\n        x: 0,\n        y: height,\n        offsetX: anchorSize / 2 + padding,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n      });\n      this._batchChangeChild('.bottom-center', {\n        x: width / 2,\n        y: height,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n      });\n      this._batchChangeChild('.bottom-right', {\n        x: width,\n        y: height,\n        offsetX: anchorSize / 2 - padding,\n        offsetY: anchorSize / 2 - padding,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n      });\n      this._batchChangeChild('.rotater', {\n        x: width / 2,\n        y: -this.rotateAnchorOffset() * Util._sign(height) - padding,\n        visible: this.rotateEnabled()\n      });\n      this._batchChangeChild('.back', {\n        width: width,\n        height: height,\n        visible: this.borderEnabled(),\n        stroke: this.borderStroke(),\n        strokeWidth: this.borderStrokeWidth(),\n        dash: this.borderDash(),\n        x: 0,\n        y: 0\n      });\n      (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n  }, {\n    key: \"isTransforming\",\n    value: function isTransforming() {\n      return this._transforming;\n    }\n  }, {\n    key: \"stopTransform\",\n    value: function stopTransform() {\n      if (this._transforming) {\n        this._removeEvents();\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        if (anchorNode) {\n          anchorNode.stopDrag();\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.getStage() && this._cursorChange) {\n        this.getStage().content && (this.getStage().content.style.cursor = '');\n      }\n      Group.prototype.destroy.call(this);\n      this.detach();\n      this._removeEvents();\n      return this;\n    }\n  }, {\n    key: \"toObject\",\n    value: function toObject() {\n      return Node.prototype.toObject.call(this);\n    }\n  }, {\n    key: \"getClientRect\",\n    value: function getClientRect() {\n      if (this.nodes().length > 0) {\n        return _get(_getPrototypeOf(Transformer.prototype), \"getClientRect\", this).call(this);\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    }\n  }]);\n  return Transformer;\n}(Group);\nfunction validateAnchors(val) {\n  if (!(val instanceof Array)) {\n    Util.warn('enabledAnchors value should be an array');\n  }\n  if (val instanceof Array) {\n    val.forEach(function (name) {\n      if (ANCHORS_NAMES.indexOf(name) === -1) {\n        Util.warn('Unknown anchor name: ' + name + '. Available names are: ' + ANCHORS_NAMES.join(', '));\n      }\n    });\n  }\n  return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n_registerNode(Transformer);\nFactory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory.addGetterSetter(Transformer, 'flipEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorSize', 10, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderDash');\nFactory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory.addGetterSetter(Transformer, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'node');\nFactory.addGetterSetter(Transformer, 'nodes');\nFactory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory.backCompat(Transformer, {\n  lineEnabled: 'borderEnabled',\n  rotateHandlerOffset: 'rotateAnchorOffset',\n  enabledHandlers: 'enabledAnchors'\n});","map":{"version":3,"names":["Util","Transform","Factory","Node","Shape","Rect","Group","Konva","getBooleanValidator","getNumberValidator","_registerNode","EVENTS_NAME","ATTR_CHANGE_LIST","map","e","join","NODES_RECT","TRANSFORM_CHANGE_STR","ANGLES","TOUCH_DEVICE","_global","getCursor","anchorName","rad","degToRad","angle","radToDeg","_inRange","error","ANCHORS_NAMES","MAX_SAFE_INTEGER","getCenter","shape","x","width","Math","cos","rotation","height","sin","y","rotateAroundPoint","angleRad","point","Object","assign","rotateAroundCenter","deltaRad","center","getSnap","snaps","newRotationRad","tol","snapped","i","length","getAngle","absDiff","abs","PI","dif","min","Transformer","config","_transforming","_createElements","_handleMouseMove","bind","_handleMouseUp","update","on","getNode","node","setNode","warn","setNodes","_nodes","_id","nodes","detach","useSingleNodeRotation","getAbsoluteRotation","forEach","onChange","_resetTransformCache","isDragging","additionalEvents","_attrsAffectingSize","prop","_getEventNamespace","_proxyDrag","elementsCreated","findOne","lastPos","getAbsolutePosition","startDrag","dx","dy","otherNode","otherAbs","setAbsolutePosition","_movingAnchorName","off","_clearCache","_clearSelfAndDescendantCache","_getCache","__getNodeRect","rot","relative","rect","getClientRect","skipTransform","skipShadow","skipStroke","ignoreStroke","absScale","getAbsoluteScale","absPos","offsetX","offsetY","box","totalPoints","points","trans","getAbsoluteTransform","transformed","push","tr","rotate","minX","minY","maxX","maxY","undefined","max","invert","p","_getNodeRect","_createBack","name","_createAnchor","anchor","stroke","fill","strokeWidth","dragDistance","draggable","hitStrokeWidth","self","_handleMouseDown","stopDrag","cancelBubble","cursor","getStage","content","style","_cursorChange","add","back","sceneFunc","ctx","getParent","padding","beginPath","moveTo","rotateEnabled","lineTo","rotateAnchorOffset","_sign","fillStrokeShape","hitFunc","shouldOverdrawWholeArea","target","split","attrs","hypotenuse","sqrt","pow","window","addEventListener","ap","pos","getPointerPosition","_anchorDragOffset","_fire","evt","newHypotenuse","anchorNode","stage","setPointersPositions","pp","newNodePos","oldAbs","anchorDragBoundFunc","newAbs","delta","atan2","oldRotation","newRotation","rotationSnapTolerance","snappedRot","rotationSnaps","diff","_fitNodesInto","keepProportion","keepRatio","shiftKey","centeredScaling","altKey","comparePoint","reverseX","reverseY","position","console","Error","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","getWidth","bottomOffsetY","getHeight","move","_removeEvents","getTransform","removeEventListener","newAttrs","oldAttrs","minSize","allowNegativeScale","flipEnabled","t","indexOf","offset","replace","boundBoxFunc","bounded","baseSize","oldTr","translate","scale","newTr","multiply","_a","parentTransform","localTransform","copy","newLocalTransform","decompose","setAttrs","getLayer","batchDraw","_getRotation","selector","enabledAnchors","resizeEnabled","anchorSize","find","anchorStroke","anchorStrokeWidth","anchorFill","cornerRadius","anchorCornerRadius","_batchChangeChild","visible","borderEnabled","borderStroke","borderStrokeWidth","dash","borderDash","prototype","destroy","call","toObject","validateAnchors","val","Array","className","addGetterSetter","backCompat","lineEnabled","rotateHandlerOffset","enabledHandlers"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/konva/lib/shapes/Transformer.js"],"sourcesContent":["import { Util, Transform } from '../Util.js';\nimport { Factory } from '../Factory.js';\nimport { Node } from '../Node.js';\nimport { Shape } from '../Shape.js';\nimport { Rect } from './Rect.js';\nimport { Group } from '../Group.js';\nimport { Konva } from '../Global.js';\nimport { getBooleanValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar EVENTS_NAME = 'tr-konva';\nvar ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nvar NODES_RECT = 'nodesRect';\nvar TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nvar ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Konva._global;\nfunction getCursor(anchorName, rad) {\n    if (anchorName === 'rotater') {\n        return 'crosshair';\n    }\n    rad += Util.degToRad(ANGLES[anchorName] || 0);\n    var angle = ((Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util._inRange(angle, 315 + 22.5, 360) || Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nvar ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nvar MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return Object.assign(Object.assign({}, shape), { rotation: shape.rotation + angleRad, x,\n        y });\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nexport class Transformer extends Group {\n    constructor(config) {\n        super(config);\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        this._nodes = nodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        var elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        var rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        var absScale = node.getAbsoluteScale(relative);\n        var absPos = node.getAbsolutePosition(relative);\n        var dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        var dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        var node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            var points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            var trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                var transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Transform();\n        tr.rotate(-Konva.getAngle(this.rotation()));\n        var minX, minY, maxX, maxY;\n        totalPoints.forEach(function (point) {\n            var transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach(function (name) {\n            this._createAnchor(name);\n        }.bind(this));\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        var anchor = new Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        var self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            var rad = Konva.getAngle(this.rotation());\n            var cursor = getCursor(name, rad);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        var back = new Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx) {\n                var tr = this.getParent();\n                var padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, this.width() + padding * 2, this.height() + padding * 2);\n                ctx.moveTo(this.width() / 2, -padding);\n                if (tr.rotateEnabled()) {\n                    ctx.lineTo(this.width() / 2, -tr.rotateAnchorOffset() * Util._sign(this.height()) - padding);\n                }\n                ctx.fillStrokeShape(this);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                var padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        var attrs = this._getNodeRect();\n        var width = attrs.width;\n        var height = attrs.height;\n        var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        var ap = e.target.getAbsolutePosition();\n        var pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        var x, y, newHypotenuse;\n        var anchorNode = this.findOne('.' + this._movingAnchorName);\n        var stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            var attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            var oldRotation = Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        var keepProportion = this.keepRatio() || e.shiftKey;\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            var topLeft = this.findOne('.top-left');\n            var bottomRight = this.findOne('.bottom-right');\n            var topOffsetX = topLeft.x();\n            var topOffsetY = topLeft.y();\n            var bottomOffsetX = this.getWidth() - bottomRight.x();\n            var bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        var absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        var width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        var height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            var node = this.getNode();\n            this._fire('transformend', { evt: e, target: node });\n            if (node) {\n                this._nodes.forEach((target) => {\n                    target._fire('transformend', { evt: e, target });\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        var oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const allowNegativeScale = this.flipEnabled();\n        var t = new Transform();\n        t.rotate(Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n            if (!allowNegativeScale) {\n                this.update();\n                return;\n            }\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Transform();\n        newTr.translate(newAttrs.x, newAttrs.y);\n        newTr.rotate(newAttrs.rotation);\n        newTr.scale(newAttrs.width / baseSize, newAttrs.height / baseSize);\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util._getRotation(newAttrs.rotation));\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        var attrs = this._getNodeRect();\n        this.rotation(Util._getRotation(attrs.rotation));\n        var width = attrs.width;\n        var height = attrs.height;\n        var enabledAnchors = this.enabledAnchors();\n        var resizeEnabled = this.resizeEnabled();\n        var padding = this.padding();\n        var anchorSize = this.anchorSize();\n        this.find('._anchor').forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            var anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node.prototype.toObject.call(this);\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n_registerNode(Transformer);\nFactory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory.addGetterSetter(Transformer, 'flipEnabled', true, getBooleanValidator());\nFactory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorSize', 10, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'borderDash');\nFactory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory.addGetterSetter(Transformer, 'padding', 0, getNumberValidator());\nFactory.addGetterSetter(Transformer, 'node');\nFactory.addGetterSetter(Transformer, 'nodes');\nFactory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n"],"mappings":";;;;;;;AAAA,SAASA,IAAI,EAAEC,SAAS,QAAQ,YAAY;AAC5C,SAASC,OAAO,QAAQ,eAAe;AACvC,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,IAAI,QAAQ,WAAW;AAChC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,KAAK,QAAQ,cAAc;AACpC,SAASC,mBAAmB,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC1E,SAASC,aAAa,QAAQ,cAAc;AAC5C,IAAIC,WAAW,GAAG,UAAU;AAC5B,IAAIC,gBAAgB,GAAG,CACnB,qBAAqB,EACrB,0BAA0B,EAC1B,qBAAqB,EACrB,sBAAsB,EACtB,kBAAkB,EAClB,qBAAqB,EACrB,oBAAoB,EACpB,yBAAyB,EACzB,kBAAkB,EAClB,oBAAoB,EACpB,yBAAyB,EACzB,kBAAkB,EAClB,0BAA0B,EAC1B,oBAAoB,CACvB,CACIC,GAAG,CAAC,UAACC,CAAC;EAAA,OAAKA,CAAC,cAAOH,WAAW,CAAE;AAAA,EAAC,CACjCI,IAAI,CAAC,GAAG,CAAC;AACd,IAAIC,UAAU,GAAG,WAAW;AAC5B,IAAIC,oBAAoB,GAAG,CACvB,aAAa,EACb,cAAc,EACd,cAAc,EACd,cAAc,EACd,aAAa,EACb,aAAa,EACb,gBAAgB,EAChB,eAAe,EACf,eAAe,EACf,yBAAyB,EACzB,mBAAmB,CACtB;AACD,IAAIC,MAAM,GAAG;EACT,UAAU,EAAE,CAAC,EAAE;EACf,YAAY,EAAE,CAAC;EACf,WAAW,EAAE,EAAE;EACf,cAAc,EAAE,CAAC,EAAE;EACnB,aAAa,EAAE,EAAE;EACjB,aAAa,EAAE,CAAC,GAAG;EACnB,eAAe,EAAE,GAAG;EACpB,cAAc,EAAE;AACpB,CAAC;AACD,IAAMC,YAAY,IAAG,cAAc,IAAIZ,KAAK,CAACa,OAAO;AACpD,SAASC,SAAS,CAACC,UAAU,EAAEC,GAAG,EAAE;EAChC,IAAID,UAAU,KAAK,SAAS,EAAE;IAC1B,OAAO,WAAW;EACtB;EACAC,GAAG,IAAIvB,IAAI,CAACwB,QAAQ,CAACN,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC,CAAC;EAC7C,IAAIG,KAAK,GAAG,CAAEzB,IAAI,CAAC0B,QAAQ,CAACH,GAAG,CAAC,GAAG,GAAG,GAAI,GAAG,IAAI,GAAG;EACpD,IAAIvB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,CAAC,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE;IACxE,OAAO,WAAW;EACtB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE;IACjD,OAAO,aAAa;EACxB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE;IACjD,OAAO,WAAW;EACtB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IACnD,OAAO,aAAa;EACxB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IACnD,OAAO,WAAW;EACtB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IACnD,OAAO,aAAa;EACxB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IACnD,OAAO,WAAW;EACtB,CAAC,MACI,IAAIzB,IAAI,CAAC2B,QAAQ,CAACF,KAAK,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;IACnD,OAAO,aAAa;EACxB,CAAC,MACI;IACDzB,IAAI,CAAC4B,KAAK,CAAC,sDAAsD,GAAGH,KAAK,CAAC;IAC1E,OAAO,SAAS;EACpB;AACJ;AACA,IAAII,aAAa,GAAG,CAChB,UAAU,EACV,YAAY,EACZ,WAAW,EACX,cAAc,EACd,aAAa,EACb,aAAa,EACb,eAAe,EACf,cAAc,CACjB;AACD,IAAIC,gBAAgB,GAAG,SAAS;AAChC,SAASC,SAAS,CAACC,KAAK,EAAE;EACtB,OAAO;IACHC,CAAC,EAAED,KAAK,CAACC,CAAC,GACLD,KAAK,CAACE,KAAK,GAAG,CAAC,GAAIC,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACK,QAAQ,CAAC,GAC3CL,KAAK,CAACM,MAAM,GAAG,CAAC,GAAIH,IAAI,CAACI,GAAG,CAAC,CAACP,KAAK,CAACK,QAAQ,CAAC;IAClDG,CAAC,EAAER,KAAK,CAACQ,CAAC,GACLR,KAAK,CAACM,MAAM,GAAG,CAAC,GAAIH,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACK,QAAQ,CAAC,GAC5CL,KAAK,CAACE,KAAK,GAAG,CAAC,GAAIC,IAAI,CAACI,GAAG,CAACP,KAAK,CAACK,QAAQ;EACnD,CAAC;AACL;AACA,SAASI,iBAAiB,CAACT,KAAK,EAAEU,QAAQ,EAAEC,KAAK,EAAE;EAC/C,IAAMV,CAAC,GAAGU,KAAK,CAACV,CAAC,GACb,CAACD,KAAK,CAACC,CAAC,GAAGU,KAAK,CAACV,CAAC,IAAIE,IAAI,CAACC,GAAG,CAACM,QAAQ,CAAC,GACxC,CAACV,KAAK,CAACQ,CAAC,GAAGG,KAAK,CAACH,CAAC,IAAIL,IAAI,CAACI,GAAG,CAACG,QAAQ,CAAC;EAC5C,IAAMF,CAAC,GAAGG,KAAK,CAACH,CAAC,GACb,CAACR,KAAK,CAACC,CAAC,GAAGU,KAAK,CAACV,CAAC,IAAIE,IAAI,CAACI,GAAG,CAACG,QAAQ,CAAC,GACxC,CAACV,KAAK,CAACQ,CAAC,GAAGG,KAAK,CAACH,CAAC,IAAIL,IAAI,CAACC,GAAG,CAACM,QAAQ,CAAC;EAC5C,OAAOE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEb,KAAK,CAAC,EAAE;IAAEK,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAGK,QAAQ;IAAET,CAAC,EAADA,CAAC;IACnFO,CAAC,EAADA;EAAE,CAAC,CAAC;AACZ;AACA,SAASM,kBAAkB,CAACd,KAAK,EAAEe,QAAQ,EAAE;EACzC,IAAMC,MAAM,GAAGjB,SAAS,CAACC,KAAK,CAAC;EAC/B,OAAOS,iBAAiB,CAACT,KAAK,EAAEe,QAAQ,EAAEC,MAAM,CAAC;AACrD;AACA,SAASC,OAAO,CAACC,KAAK,EAAEC,cAAc,EAAEC,GAAG,EAAE;EACzC,IAAIC,OAAO,GAAGF,cAAc;EAC5B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAM7B,KAAK,GAAGlB,KAAK,CAACiD,QAAQ,CAACN,KAAK,CAACI,CAAC,CAAC,CAAC;IACtC,IAAMG,OAAO,GAAGtB,IAAI,CAACuB,GAAG,CAACjC,KAAK,GAAG0B,cAAc,CAAC,IAAIhB,IAAI,CAACwB,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,GAAG,GAAGzB,IAAI,CAAC0B,GAAG,CAACJ,OAAO,EAAEtB,IAAI,CAACwB,EAAE,GAAG,CAAC,GAAGF,OAAO,CAAC;IACpD,IAAIG,GAAG,GAAGR,GAAG,EAAE;MACXC,OAAO,GAAG5B,KAAK;IACnB;EACJ;EACA,OAAO4B,OAAO;AAClB;AACA,WAAaS,WAAW;EAAA;EAAA;EACpB,qBAAYC,MAAM,EAAE;IAAA;IAAA;IAChB,0BAAMA,MAAM;IACZ,MAAKC,aAAa,GAAG,KAAK;IAC1B,MAAKC,eAAe,EAAE;IACtB,MAAKC,gBAAgB,GAAG,MAAKA,gBAAgB,CAACC,IAAI,+BAAM;IACxD,MAAKC,cAAc,GAAG,MAAKA,cAAc,CAACD,IAAI,+BAAM;IACpD,MAAKE,MAAM,GAAG,MAAKA,MAAM,CAACF,IAAI,+BAAM;IACpC,MAAKG,EAAE,CAAC1D,gBAAgB,EAAE,MAAKyD,MAAM,CAAC;IACtC,IAAI,MAAKE,OAAO,EAAE,EAAE;MAChB,MAAKF,MAAM,EAAE;IACjB;IAAC;EACL;EAAC;IAAA;IAAA,OACD,kBAASG,IAAI,EAAE;MACX,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC;MAClB,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,iBAAQA,IAAI,EAAE;MACVxE,IAAI,CAAC0E,IAAI,CAAC,2HAA2H,CAAC;MACtI,OAAO,IAAI,CAACC,QAAQ,CAAC,CAACH,IAAI,CAAC,CAAC;IAChC;EAAC;IAAA;IAAA,OACD,mBAAU;MACN,OAAO,IAAI,CAACI,MAAM,IAAI,IAAI,CAACA,MAAM,CAAC,CAAC,CAAC;IACxC;EAAC;IAAA;IAAA,OACD,8BAAqB;MACjB,OAAOjE,WAAW,GAAG,IAAI,CAACkE,GAAG;IACjC;EAAC;IAAA;IAAA,OACD,oBAAqB;MAAA;MAAA,IAAZC,KAAK,uEAAG,EAAE;MACf,IAAI,IAAI,CAACF,MAAM,IAAI,IAAI,CAACA,MAAM,CAACrB,MAAM,EAAE;QACnC,IAAI,CAACwB,MAAM,EAAE;MACjB;MACA,IAAI,CAACH,MAAM,GAAGE,KAAK;MACnB,IAAIA,KAAK,CAACvB,MAAM,KAAK,CAAC,IAAI,IAAI,CAACyB,qBAAqB,EAAE,EAAE;QACpD,IAAI,CAAC3C,QAAQ,CAACyC,KAAK,CAAC,CAAC,CAAC,CAACG,mBAAmB,EAAE,CAAC;MACjD,CAAC,MACI;QACD,IAAI,CAAC5C,QAAQ,CAAC,CAAC,CAAC;MACpB;MACA,IAAI,CAACuC,MAAM,CAACM,OAAO,CAAC,UAACV,IAAI,EAAK;QAC1B,IAAMW,QAAQ,GAAG,SAAXA,QAAQ,GAAS;UACnB,IAAI,MAAI,CAACL,KAAK,EAAE,CAACvB,MAAM,KAAK,CAAC,IAAI,MAAI,CAACyB,qBAAqB,EAAE,EAAE;YAC3D,MAAI,CAAC3C,QAAQ,CAAC,MAAI,CAACyC,KAAK,EAAE,CAAC,CAAC,CAAC,CAACG,mBAAmB,EAAE,CAAC;UACxD;UACA,MAAI,CAACG,oBAAoB,EAAE;UAC3B,IAAI,CAAC,MAAI,CAACpB,aAAa,IAAI,CAAC,MAAI,CAACqB,UAAU,EAAE,EAAE;YAC3C,MAAI,CAAChB,MAAM,EAAE;UACjB;QACJ,CAAC;QACD,IAAMiB,gBAAgB,GAAGd,IAAI,CAACe,mBAAmB,CAC5C1E,GAAG,CAAC,UAAC2E,IAAI;UAAA,OAAKA,IAAI,GAAG,SAAS,GAAG,MAAI,CAACC,kBAAkB,EAAE;QAAA,EAAC,CAC3D1E,IAAI,CAAC,GAAG,CAAC;QACdyD,IAAI,CAACF,EAAE,CAACgB,gBAAgB,EAAEH,QAAQ,CAAC;QACnCX,IAAI,CAACF,EAAE,CAACrD,oBAAoB,CAACJ,GAAG,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAC,cAAO,MAAI,CAAC2E,kBAAkB,EAAE,CAAE;QAAA,EAAC,CAAC1E,IAAI,CAAC,GAAG,CAAC,EAAEoE,QAAQ,CAAC;QACjGX,IAAI,CAACF,EAAE,mCAA4B,MAAI,CAACmB,kBAAkB,EAAE,GAAIN,QAAQ,CAAC;QACzE,MAAI,CAACO,UAAU,CAAClB,IAAI,CAAC;MACzB,CAAC,CAAC;MACF,IAAI,CAACY,oBAAoB,EAAE;MAC3B,IAAIO,eAAe,GAAG,CAAC,CAAC,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC;MACjD,IAAID,eAAe,EAAE;QACjB,IAAI,CAACtB,MAAM,EAAE;MACjB;MACA,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,oBAAWG,IAAI,EAAE;MAAA;MACb,IAAIqB,OAAO;MACXrB,IAAI,CAACF,EAAE,qBAAc,IAAI,CAACmB,kBAAkB,EAAE,GAAI,UAAC3E,CAAC,EAAK;QACrD+E,OAAO,GAAGrB,IAAI,CAACsB,mBAAmB,EAAE;QACpC,IAAI,CAAC,MAAI,CAACT,UAAU,EAAE,IAAIb,IAAI,KAAK,MAAI,CAACoB,OAAO,CAAC,OAAO,CAAC,EAAE;UACtD,MAAI,CAACG,SAAS,CAACjF,CAAC,EAAE,KAAK,CAAC;QAC5B;MACJ,CAAC,CAAC;MACF0D,IAAI,CAACF,EAAE,oBAAa,IAAI,CAACmB,kBAAkB,EAAE,GAAI,UAAC3E,CAAC,EAAK;QACpD,IAAI,CAAC+E,OAAO,EAAE;UACV;QACJ;QACA,IAAMnC,GAAG,GAAGc,IAAI,CAACsB,mBAAmB,EAAE;QACtC,IAAME,EAAE,GAAGtC,GAAG,CAACzB,CAAC,GAAG4D,OAAO,CAAC5D,CAAC;QAC5B,IAAMgE,EAAE,GAAGvC,GAAG,CAAClB,CAAC,GAAGqD,OAAO,CAACrD,CAAC;QAC5B,MAAI,CAACsC,KAAK,EAAE,CAACI,OAAO,CAAC,UAACgB,SAAS,EAAK;UAChC,IAAIA,SAAS,KAAK1B,IAAI,EAAE;YACpB;UACJ;UACA,IAAI0B,SAAS,CAACb,UAAU,EAAE,EAAE;YACxB;UACJ;UACA,IAAMc,QAAQ,GAAGD,SAAS,CAACJ,mBAAmB,EAAE;UAChDI,SAAS,CAACE,mBAAmB,CAAC;YAC1BnE,CAAC,EAAEkE,QAAQ,CAAClE,CAAC,GAAG+D,EAAE;YAClBxD,CAAC,EAAE2D,QAAQ,CAAC3D,CAAC,GAAGyD;UACpB,CAAC,CAAC;UACFC,SAAS,CAACH,SAAS,CAACjF,CAAC,CAAC;QAC1B,CAAC,CAAC;QACF+E,OAAO,GAAG,IAAI;MAClB,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,OAAO,IAAI,CAACjB,MAAM,IAAI,EAAE;IAC5B;EAAC;IAAA;IAAA,OACD,2BAAkB;MACd,OAAO,IAAI,CAACyB,iBAAiB;IACjC;EAAC;IAAA;IAAA,OACD,kBAAS;MAAA;MACL,IAAI,IAAI,CAACzB,MAAM,EAAE;QACb,IAAI,CAACA,MAAM,CAACM,OAAO,CAAC,UAACV,IAAI,EAAK;UAC1BA,IAAI,CAAC8B,GAAG,CAAC,GAAG,GAAG,MAAI,CAACb,kBAAkB,EAAE,CAAC;QAC7C,CAAC,CAAC;MACN;MACA,IAAI,CAACb,MAAM,GAAG,EAAE;MAChB,IAAI,CAACQ,oBAAoB,EAAE;IAC/B;EAAC;IAAA;IAAA,OACD,gCAAuB;MACnB,IAAI,CAACmB,WAAW,CAACvF,UAAU,CAAC;MAC5B,IAAI,CAACuF,WAAW,CAAC,WAAW,CAAC;MAC7B,IAAI,CAACC,4BAA4B,CAAC,mBAAmB,CAAC;IAC1D;EAAC;IAAA;IAAA,OACD,wBAAe;MACX,OAAO,IAAI,CAACC,SAAS,CAACzF,UAAU,EAAE,IAAI,CAAC0F,aAAa,CAAC;IACzD;EAAC;IAAA;IAAA,OACD,wBAAelC,IAAI,EAAmC;MAAA,IAAjCmC,GAAG,uEAAG,IAAI,CAACtE,QAAQ,EAAE;MAAA,IAAEuE,QAAQ;MAChD,IAAIC,IAAI,GAAGrC,IAAI,CAACsC,aAAa,CAAC;QAC1BC,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE,IAAI;QAChBC,UAAU,EAAE,IAAI,CAACC,YAAY;MACjC,CAAC,CAAC;MACF,IAAIC,QAAQ,GAAG3C,IAAI,CAAC4C,gBAAgB,CAACR,QAAQ,CAAC;MAC9C,IAAIS,MAAM,GAAG7C,IAAI,CAACsB,mBAAmB,CAACc,QAAQ,CAAC;MAC/C,IAAIZ,EAAE,GAAGa,IAAI,CAAC5E,CAAC,GAAGkF,QAAQ,CAAClF,CAAC,GAAGuC,IAAI,CAAC8C,OAAO,EAAE,GAAGH,QAAQ,CAAClF,CAAC;MAC1D,IAAIgE,EAAE,GAAGY,IAAI,CAACrE,CAAC,GAAG2E,QAAQ,CAAC3E,CAAC,GAAGgC,IAAI,CAAC+C,OAAO,EAAE,GAAGJ,QAAQ,CAAC3E,CAAC;MAC1D,IAAMH,QAAQ,GAAG,CAAC9B,KAAK,CAACiD,QAAQ,CAACgB,IAAI,CAACS,mBAAmB,EAAE,CAAC,GAAG9C,IAAI,CAACwB,EAAE,GAAG,CAAC,KACrExB,IAAI,CAACwB,EAAE,GAAG,CAAC,CAAC;MACjB,IAAM6D,GAAG,GAAG;QACRvF,CAAC,EAAEoF,MAAM,CAACpF,CAAC,GAAG+D,EAAE,GAAG7D,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,GAAG4D,EAAE,GAAG9D,IAAI,CAACI,GAAG,CAAC,CAACF,QAAQ,CAAC;QAChEG,CAAC,EAAE6E,MAAM,CAAC7E,CAAC,GAAGyD,EAAE,GAAG9D,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,GAAG2D,EAAE,GAAG7D,IAAI,CAACI,GAAG,CAACF,QAAQ,CAAC;QAC/DH,KAAK,EAAE2E,IAAI,CAAC3E,KAAK,GAAGiF,QAAQ,CAAClF,CAAC;QAC9BK,MAAM,EAAEuE,IAAI,CAACvE,MAAM,GAAG6E,QAAQ,CAAC3E,CAAC;QAChCH,QAAQ,EAAEA;MACd,CAAC;MACD,OAAOI,iBAAiB,CAAC+E,GAAG,EAAE,CAACjH,KAAK,CAACiD,QAAQ,CAACmD,GAAG,CAAC,EAAE;QAChD1E,CAAC,EAAE,CAAC;QACJO,CAAC,EAAE;MACP,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,yBAAgB;MAAA;MACZ,IAAIgC,IAAI,GAAG,IAAI,CAACD,OAAO,EAAE;MACzB,IAAI,CAACC,IAAI,EAAE;QACP,OAAO;UACHvC,CAAC,EAAE,CAACH,gBAAgB;UACpBU,CAAC,EAAE,CAACV,gBAAgB;UACpBI,KAAK,EAAE,CAAC;UACRI,MAAM,EAAE,CAAC;UACTD,QAAQ,EAAE;QACd,CAAC;MACL;MACA,IAAMoF,WAAW,GAAG,EAAE;MACtB,IAAI,CAAC3C,KAAK,EAAE,CAACjE,GAAG,CAAC,UAAC2D,IAAI,EAAK;QACvB,IAAMgD,GAAG,GAAGhD,IAAI,CAACsC,aAAa,CAAC;UAC3BC,aAAa,EAAE,IAAI;UACnBC,UAAU,EAAE,IAAI;UAChBC,UAAU,EAAE,MAAI,CAACC,YAAY;QACjC,CAAC,CAAC;QACF,IAAIQ,MAAM,GAAG,CACT;UAAEzF,CAAC,EAAEuF,GAAG,CAACvF,CAAC;UAAEO,CAAC,EAAEgF,GAAG,CAAChF;QAAE,CAAC,EACtB;UAAEP,CAAC,EAAEuF,GAAG,CAACvF,CAAC,GAAGuF,GAAG,CAACtF,KAAK;UAAEM,CAAC,EAAEgF,GAAG,CAAChF;QAAE,CAAC,EAClC;UAAEP,CAAC,EAAEuF,GAAG,CAACvF,CAAC,GAAGuF,GAAG,CAACtF,KAAK;UAAEM,CAAC,EAAEgF,GAAG,CAAChF,CAAC,GAAGgF,GAAG,CAAClF;QAAO,CAAC,EAC/C;UAAEL,CAAC,EAAEuF,GAAG,CAACvF,CAAC;UAAEO,CAAC,EAAEgF,GAAG,CAAChF,CAAC,GAAGgF,GAAG,CAAClF;QAAO,CAAC,CACtC;QACD,IAAIqF,KAAK,GAAGnD,IAAI,CAACoD,oBAAoB,EAAE;QACvCF,MAAM,CAACxC,OAAO,CAAC,UAAUvC,KAAK,EAAE;UAC5B,IAAIkF,WAAW,GAAGF,KAAK,CAAChF,KAAK,CAACA,KAAK,CAAC;UACpC8E,WAAW,CAACK,IAAI,CAACD,WAAW,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CAAC;MACF,IAAME,EAAE,GAAG,IAAI9H,SAAS,EAAE;MAC1B8H,EAAE,CAACC,MAAM,CAAC,CAACzH,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAACnB,QAAQ,EAAE,CAAC,CAAC;MAC3C,IAAI4F,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI;MAC1BX,WAAW,CAACvC,OAAO,CAAC,UAAUvC,KAAK,EAAE;QACjC,IAAIkF,WAAW,GAAGE,EAAE,CAACpF,KAAK,CAACA,KAAK,CAAC;QACjC,IAAIsF,IAAI,KAAKI,SAAS,EAAE;UACpBJ,IAAI,GAAGE,IAAI,GAAGN,WAAW,CAAC5F,CAAC;UAC3BiG,IAAI,GAAGE,IAAI,GAAGP,WAAW,CAACrF,CAAC;QAC/B;QACAyF,IAAI,GAAG9F,IAAI,CAAC0B,GAAG,CAACoE,IAAI,EAAEJ,WAAW,CAAC5F,CAAC,CAAC;QACpCiG,IAAI,GAAG/F,IAAI,CAAC0B,GAAG,CAACqE,IAAI,EAAEL,WAAW,CAACrF,CAAC,CAAC;QACpC2F,IAAI,GAAGhG,IAAI,CAACmG,GAAG,CAACH,IAAI,EAAEN,WAAW,CAAC5F,CAAC,CAAC;QACpCmG,IAAI,GAAGjG,IAAI,CAACmG,GAAG,CAACF,IAAI,EAAEP,WAAW,CAACrF,CAAC,CAAC;MACxC,CAAC,CAAC;MACFuF,EAAE,CAACQ,MAAM,EAAE;MACX,IAAMC,CAAC,GAAGT,EAAE,CAACpF,KAAK,CAAC;QAAEV,CAAC,EAAEgG,IAAI;QAAEzF,CAAC,EAAE0F;MAAK,CAAC,CAAC;MACxC,OAAO;QACHjG,CAAC,EAAEuG,CAAC,CAACvG,CAAC;QACNO,CAAC,EAAEgG,CAAC,CAAChG,CAAC;QACNN,KAAK,EAAEiG,IAAI,GAAGF,IAAI;QAClB3F,MAAM,EAAE8F,IAAI,GAAGF,IAAI;QACnB7F,QAAQ,EAAE9B,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAACnB,QAAQ,EAAE;MAC5C,CAAC;IACL;EAAC;IAAA;IAAA,OACD,gBAAO;MACH,OAAO,IAAI,CAACoG,YAAY,EAAE,CAACxG,CAAC;IAChC;EAAC;IAAA;IAAA,OACD,gBAAO;MACH,OAAO,IAAI,CAACwG,YAAY,EAAE,CAACjG,CAAC;IAChC;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,OAAO,IAAI,CAACiG,YAAY,EAAE,CAACvG,KAAK;IACpC;EAAC;IAAA;IAAA,OACD,qBAAY;MACR,OAAO,IAAI,CAACuG,YAAY,EAAE,CAACnG,MAAM;IACrC;EAAC;IAAA;IAAA,OACD,2BAAkB;MACd,IAAI,CAACoG,WAAW,EAAE;MAClB7G,aAAa,CAACqD,OAAO,CAAC,UAAUyD,IAAI,EAAE;QAClC,IAAI,CAACC,aAAa,CAACD,IAAI,CAAC;MAC5B,CAAC,CAACxE,IAAI,CAAC,IAAI,CAAC,CAAC;MACb,IAAI,CAACyE,aAAa,CAAC,SAAS,CAAC;IACjC;EAAC;IAAA;IAAA,OACD,uBAAcD,IAAI,EAAE;MAAA;MAChB,IAAIE,MAAM,GAAG,IAAIxI,IAAI,CAAC;QAClByI,MAAM,EAAE,kBAAkB;QAC1BC,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE,CAAC;QACdL,IAAI,EAAEA,IAAI,GAAG,UAAU;QACvBM,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,IAAI;QACfC,cAAc,EAAEhI,YAAY,GAAG,EAAE,GAAG;MACxC,CAAC,CAAC;MACF,IAAIiI,IAAI,GAAG,IAAI;MACfP,MAAM,CAACvE,EAAE,CAAC,sBAAsB,EAAE,UAAUxD,CAAC,EAAE;QAC3CsI,IAAI,CAACC,gBAAgB,CAACvI,CAAC,CAAC;MAC5B,CAAC,CAAC;MACF+H,MAAM,CAACvE,EAAE,CAAC,WAAW,EAAE,UAACxD,CAAC,EAAK;QAC1B+H,MAAM,CAACS,QAAQ,EAAE;QACjBxI,CAAC,CAACyI,YAAY,GAAG,IAAI;MACzB,CAAC,CAAC;MACFV,MAAM,CAACvE,EAAE,CAAC,SAAS,EAAE,UAACxD,CAAC,EAAK;QACxBA,CAAC,CAACyI,YAAY,GAAG,IAAI;MACzB,CAAC,CAAC;MACFV,MAAM,CAACvE,EAAE,CAAC,YAAY,EAAE,YAAM;QAC1B,IAAI/C,GAAG,GAAGhB,KAAK,CAACiD,QAAQ,CAAC,MAAI,CAACnB,QAAQ,EAAE,CAAC;QACzC,IAAImH,MAAM,GAAGnI,SAAS,CAACsH,IAAI,EAAEpH,GAAG,CAAC;QACjCsH,MAAM,CAACY,QAAQ,EAAE,CAACC,OAAO,KACpBb,MAAM,CAACY,QAAQ,EAAE,CAACC,OAAO,CAACC,KAAK,CAACH,MAAM,GAAGA,MAAM,CAAC;QACrD,MAAI,CAACI,aAAa,GAAG,IAAI;MAC7B,CAAC,CAAC;MACFf,MAAM,CAACvE,EAAE,CAAC,UAAU,EAAE,YAAM;QACxBuE,MAAM,CAACY,QAAQ,EAAE,CAACC,OAAO,KACpBb,MAAM,CAACY,QAAQ,EAAE,CAACC,OAAO,CAACC,KAAK,CAACH,MAAM,GAAG,EAAE,CAAC;QACjD,MAAI,CAACI,aAAa,GAAG,KAAK;MAC9B,CAAC,CAAC;MACF,IAAI,CAACC,GAAG,CAAChB,MAAM,CAAC;IACpB;EAAC;IAAA;IAAA,OACD,uBAAc;MAAA;MACV,IAAIiB,IAAI,GAAG,IAAI1J,KAAK,CAAC;QACjBuI,IAAI,EAAE,MAAM;QACZzG,KAAK,EAAE,CAAC;QACRI,MAAM,EAAE,CAAC;QACT4G,SAAS,EAAE,IAAI;QACfa,SAAS,qBAACC,GAAG,EAAE;UACX,IAAIjC,EAAE,GAAG,IAAI,CAACkC,SAAS,EAAE;UACzB,IAAIC,OAAO,GAAGnC,EAAE,CAACmC,OAAO,EAAE;UAC1BF,GAAG,CAACG,SAAS,EAAE;UACfH,GAAG,CAACnD,IAAI,CAAC,CAACqD,OAAO,EAAE,CAACA,OAAO,EAAE,IAAI,CAAChI,KAAK,EAAE,GAAGgI,OAAO,GAAG,CAAC,EAAE,IAAI,CAAC5H,MAAM,EAAE,GAAG4H,OAAO,GAAG,CAAC,CAAC;UACrFF,GAAG,CAACI,MAAM,CAAC,IAAI,CAAClI,KAAK,EAAE,GAAG,CAAC,EAAE,CAACgI,OAAO,CAAC;UACtC,IAAInC,EAAE,CAACsC,aAAa,EAAE,EAAE;YACpBL,GAAG,CAACM,MAAM,CAAC,IAAI,CAACpI,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC6F,EAAE,CAACwC,kBAAkB,EAAE,GAAGvK,IAAI,CAACwK,KAAK,CAAC,IAAI,CAAClI,MAAM,EAAE,CAAC,GAAG4H,OAAO,CAAC;UAChG;UACAF,GAAG,CAACS,eAAe,CAAC,IAAI,CAAC;QAC7B,CAAC;QACDC,OAAO,EAAE,iBAACV,GAAG,EAAEhI,KAAK,EAAK;UACrB,IAAI,CAAC,MAAI,CAAC2I,uBAAuB,EAAE,EAAE;YACjC;UACJ;UACA,IAAIT,OAAO,GAAG,MAAI,CAACA,OAAO,EAAE;UAC5BF,GAAG,CAACG,SAAS,EAAE;UACfH,GAAG,CAACnD,IAAI,CAAC,CAACqD,OAAO,EAAE,CAACA,OAAO,EAAElI,KAAK,CAACE,KAAK,EAAE,GAAGgI,OAAO,GAAG,CAAC,EAAElI,KAAK,CAACM,MAAM,EAAE,GAAG4H,OAAO,GAAG,CAAC,CAAC;UACvFF,GAAG,CAACS,eAAe,CAACzI,KAAK,CAAC;QAC9B;MACJ,CAAC,CAAC;MACF,IAAI,CAAC6H,GAAG,CAACC,IAAI,CAAC;MACd,IAAI,CAACpE,UAAU,CAACoE,IAAI,CAAC;MACrBA,IAAI,CAACxF,EAAE,CAAC,WAAW,EAAE,UAACxD,CAAC,EAAK;QACxBA,CAAC,CAACyI,YAAY,GAAG,IAAI;MACzB,CAAC,CAAC;MACFO,IAAI,CAACxF,EAAE,CAAC,UAAU,EAAE,UAACxD,CAAC,EAAK;QACvBA,CAAC,CAACyI,YAAY,GAAG,IAAI;MACzB,CAAC,CAAC;MACFO,IAAI,CAACxF,EAAE,CAAC,SAAS,EAAE,UAACxD,CAAC,EAAK;QACtBA,CAAC,CAACyI,YAAY,GAAG,IAAI;MACzB,CAAC,CAAC;MACF,IAAI,CAACjF,EAAE,CAAC,UAAU,EAAE,UAACxD,CAAC,EAAK;QACvB,MAAI,CAACuD,MAAM,EAAE;MACjB,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,0BAAiBvD,CAAC,EAAE;MAChB,IAAI,CAACuF,iBAAiB,GAAGvF,CAAC,CAAC8J,MAAM,CAACjC,IAAI,EAAE,CAACkC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,IAAIC,KAAK,GAAG,IAAI,CAACrC,YAAY,EAAE;MAC/B,IAAIvG,KAAK,GAAG4I,KAAK,CAAC5I,KAAK;MACvB,IAAII,MAAM,GAAGwI,KAAK,CAACxI,MAAM;MACzB,IAAIyI,UAAU,GAAG5I,IAAI,CAAC6I,IAAI,CAAC7I,IAAI,CAAC8I,GAAG,CAAC/I,KAAK,EAAE,CAAC,CAAC,GAAGC,IAAI,CAAC8I,GAAG,CAAC3I,MAAM,EAAE,CAAC,CAAC,CAAC;MACpE,IAAI,CAACC,GAAG,GAAGJ,IAAI,CAACuB,GAAG,CAACpB,MAAM,GAAGyI,UAAU,CAAC;MACxC,IAAI,CAAC3I,GAAG,GAAGD,IAAI,CAACuB,GAAG,CAACxB,KAAK,GAAG6I,UAAU,CAAC;MACvC,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE;QAC/BA,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACjH,gBAAgB,CAAC;QAC3DgH,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACjH,gBAAgB,CAAC;QAC3DgH,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC/G,cAAc,EAAE,IAAI,CAAC;QAC7D8G,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC/G,cAAc,EAAE,IAAI,CAAC;MAClE;MACA,IAAI,CAACJ,aAAa,GAAG,IAAI;MACzB,IAAIoH,EAAE,GAAGtK,CAAC,CAAC8J,MAAM,CAAC9E,mBAAmB,EAAE;MACvC,IAAIuF,GAAG,GAAGvK,CAAC,CAAC8J,MAAM,CAACnB,QAAQ,EAAE,CAAC6B,kBAAkB,EAAE;MAClD,IAAI,CAACC,iBAAiB,GAAG;QACrBtJ,CAAC,EAAEoJ,GAAG,CAACpJ,CAAC,GAAGmJ,EAAE,CAACnJ,CAAC;QACfO,CAAC,EAAE6I,GAAG,CAAC7I,CAAC,GAAG4I,EAAE,CAAC5I;MAClB,CAAC;MACD,IAAI,CAACgJ,KAAK,CAAC,gBAAgB,EAAE;QAAEC,GAAG,EAAE3K,CAAC,CAAC2K,GAAG;QAAEb,MAAM,EAAE,IAAI,CAACrG,OAAO;MAAG,CAAC,CAAC;MACpE,IAAI,CAACK,MAAM,CAACM,OAAO,CAAC,UAAC0F,MAAM,EAAK;QAC5BA,MAAM,CAACY,KAAK,CAAC,gBAAgB,EAAE;UAAEC,GAAG,EAAE3K,CAAC,CAAC2K,GAAG;UAAEb,MAAM,EAANA;QAAO,CAAC,CAAC;MAC1D,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,0BAAiB9J,CAAC,EAAE;MAChB,IAAImB,CAAC,EAAEO,CAAC,EAAEkJ,aAAa;MACvB,IAAIC,UAAU,GAAG,IAAI,CAAC/F,OAAO,CAAC,GAAG,GAAG,IAAI,CAACS,iBAAiB,CAAC;MAC3D,IAAIuF,KAAK,GAAGD,UAAU,CAAClC,QAAQ,EAAE;MACjCmC,KAAK,CAACC,oBAAoB,CAAC/K,CAAC,CAAC;MAC7B,IAAMgL,EAAE,GAAGF,KAAK,CAACN,kBAAkB,EAAE;MACrC,IAAIS,UAAU,GAAG;QACb9J,CAAC,EAAE6J,EAAE,CAAC7J,CAAC,GAAG,IAAI,CAACsJ,iBAAiB,CAACtJ,CAAC;QAClCO,CAAC,EAAEsJ,EAAE,CAACtJ,CAAC,GAAG,IAAI,CAAC+I,iBAAiB,CAAC/I;MACrC,CAAC;MACD,IAAMwJ,MAAM,GAAGL,UAAU,CAAC7F,mBAAmB,EAAE;MAC/C,IAAI,IAAI,CAACmG,mBAAmB,EAAE,EAAE;QAC5BF,UAAU,GAAG,IAAI,CAACE,mBAAmB,EAAE,CAACD,MAAM,EAAED,UAAU,EAAEjL,CAAC,CAAC;MAClE;MACA6K,UAAU,CAACvF,mBAAmB,CAAC2F,UAAU,CAAC;MAC1C,IAAMG,MAAM,GAAGP,UAAU,CAAC7F,mBAAmB,EAAE;MAC/C,IAAIkG,MAAM,CAAC/J,CAAC,KAAKiK,MAAM,CAACjK,CAAC,IAAI+J,MAAM,CAACxJ,CAAC,KAAK0J,MAAM,CAAC1J,CAAC,EAAE;QAChD;MACJ;MACA,IAAI,IAAI,CAAC6D,iBAAiB,KAAK,SAAS,EAAE;QACtC,IAAIyE,KAAK,GAAG,IAAI,CAACrC,YAAY,EAAE;QAC/BxG,CAAC,GAAG0J,UAAU,CAAC1J,CAAC,EAAE,GAAG6I,KAAK,CAAC5I,KAAK,GAAG,CAAC;QACpCM,CAAC,GAAG,CAACmJ,UAAU,CAACnJ,CAAC,EAAE,GAAGsI,KAAK,CAACxI,MAAM,GAAG,CAAC;QACtC,IAAI6J,KAAK,GAAGhK,IAAI,CAACiK,KAAK,CAAC,CAAC5J,CAAC,EAAEP,CAAC,CAAC,GAAGE,IAAI,CAACwB,EAAE,GAAG,CAAC;QAC3C,IAAImH,KAAK,CAACxI,MAAM,GAAG,CAAC,EAAE;UAClB6J,KAAK,IAAIhK,IAAI,CAACwB,EAAE;QACpB;QACA,IAAI0I,WAAW,GAAG9L,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAACnB,QAAQ,EAAE,CAAC;QACjD,IAAMiK,WAAW,GAAGD,WAAW,GAAGF,KAAK;QACvC,IAAM/I,GAAG,GAAG7C,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAAC+I,qBAAqB,EAAE,CAAC;QACxD,IAAMC,UAAU,GAAGvJ,OAAO,CAAC,IAAI,CAACwJ,aAAa,EAAE,EAAEH,WAAW,EAAElJ,GAAG,CAAC;QAClE,IAAMsJ,IAAI,GAAGF,UAAU,GAAG1B,KAAK,CAACzI,QAAQ;QACxC,IAAML,KAAK,GAAGc,kBAAkB,CAACgI,KAAK,EAAE4B,IAAI,CAAC;QAC7C,IAAI,CAACC,aAAa,CAAC3K,KAAK,EAAElB,CAAC,CAAC;QAC5B;MACJ;MACA,IAAI8L,cAAc,GAAG,IAAI,CAACC,SAAS,EAAE,IAAI/L,CAAC,CAACgM,QAAQ;MACnD,IAAIC,eAAe,GAAG,IAAI,CAACA,eAAe,EAAE,IAAIjM,CAAC,CAACkM,MAAM;MACxD,IAAI,IAAI,CAAC3G,iBAAiB,KAAK,UAAU,EAAE;QACvC,IAAIuG,cAAc,EAAE;UAChB,IAAIK,YAAY,GAAGF,eAAe,GAC5B;YACE9K,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,GAAG,CAAC;YACnBM,CAAC,EAAE,IAAI,CAACF,MAAM,EAAE,GAAG;UACvB,CAAC,GACC;YACEL,CAAC,EAAE,IAAI,CAAC2D,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,EAAE;YACpCO,CAAC,EAAE,IAAI,CAACoD,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC;UACtC,CAAC;UACLkJ,aAAa,GAAGvJ,IAAI,CAAC6I,IAAI,CAAC7I,IAAI,CAAC8I,GAAG,CAACgC,YAAY,CAAChL,CAAC,GAAG0J,UAAU,CAAC1J,CAAC,EAAE,EAAE,CAAC,CAAC,GAClEE,IAAI,CAAC8I,GAAG,CAACgC,YAAY,CAACzK,CAAC,GAAGmJ,UAAU,CAACnJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACjD,IAAI0K,QAAQ,GAAG,IAAI,CAACtH,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,EAAE,GAAGgL,YAAY,CAAChL,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACtE,IAAIkL,QAAQ,GAAG,IAAI,CAACvH,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACtEP,CAAC,GAAGyJ,aAAa,GAAG,IAAI,CAACtJ,GAAG,GAAG8K,QAAQ;UACvC1K,CAAC,GAAGkJ,aAAa,GAAG,IAAI,CAACnJ,GAAG,GAAG4K,QAAQ;UACvC,IAAI,CAACvH,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,CAACgL,YAAY,CAAChL,CAAC,GAAGA,CAAC,CAAC;UAC/C,IAAI,CAAC2D,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC,CAACyK,YAAY,CAACzK,CAAC,GAAGA,CAAC,CAAC;QACnD;MACJ,CAAC,MACI,IAAI,IAAI,CAAC6D,iBAAiB,KAAK,YAAY,EAAE;QAC9C,IAAI,CAACT,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC,CAACmJ,UAAU,CAACnJ,CAAC,EAAE,CAAC;MAC/C,CAAC,MACI,IAAI,IAAI,CAAC6D,iBAAiB,KAAK,WAAW,EAAE;QAC7C,IAAIuG,cAAc,EAAE;UAChB,IAAIK,YAAY,GAAGF,eAAe,GAC5B;YACE9K,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,GAAG,CAAC;YACnBM,CAAC,EAAE,IAAI,CAACF,MAAM,EAAE,GAAG;UACvB,CAAC,GACC;YACEL,CAAC,EAAE,IAAI,CAAC2D,OAAO,CAAC,cAAc,CAAC,CAAC3D,CAAC,EAAE;YACnCO,CAAC,EAAE,IAAI,CAACoD,OAAO,CAAC,cAAc,CAAC,CAACpD,CAAC;UACrC,CAAC;UACLkJ,aAAa,GAAGvJ,IAAI,CAAC6I,IAAI,CAAC7I,IAAI,CAAC8I,GAAG,CAACU,UAAU,CAAC1J,CAAC,EAAE,GAAGgL,YAAY,CAAChL,CAAC,EAAE,CAAC,CAAC,GAClEE,IAAI,CAAC8I,GAAG,CAACgC,YAAY,CAACzK,CAAC,GAAGmJ,UAAU,CAACnJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACjD,IAAI0K,QAAQ,GAAG,IAAI,CAACtH,OAAO,CAAC,YAAY,CAAC,CAAC3D,CAAC,EAAE,GAAGgL,YAAY,CAAChL,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACvE,IAAIkL,QAAQ,GAAG,IAAI,CAACvH,OAAO,CAAC,YAAY,CAAC,CAACpD,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACvEP,CAAC,GAAGyJ,aAAa,GAAG,IAAI,CAACtJ,GAAG,GAAG8K,QAAQ;UACvC1K,CAAC,GAAGkJ,aAAa,GAAG,IAAI,CAACnJ,GAAG,GAAG4K,QAAQ;UACvC,IAAI,CAACvH,OAAO,CAAC,YAAY,CAAC,CAAC3D,CAAC,CAACgL,YAAY,CAAChL,CAAC,GAAGA,CAAC,CAAC;UAChD,IAAI,CAAC2D,OAAO,CAAC,YAAY,CAAC,CAACpD,CAAC,CAACyK,YAAY,CAACzK,CAAC,GAAGA,CAAC,CAAC;QACpD;QACA,IAAI6I,GAAG,GAAGM,UAAU,CAACyB,QAAQ,EAAE;QAC/B,IAAI,CAACxH,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC,CAAC6I,GAAG,CAAC7I,CAAC,CAAC;QAClC,IAAI,CAACoD,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,CAACoJ,GAAG,CAACpJ,CAAC,CAAC;MAC1C,CAAC,MACI,IAAI,IAAI,CAACoE,iBAAiB,KAAK,aAAa,EAAE;QAC/C,IAAI,CAACT,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,CAAC0J,UAAU,CAAC1J,CAAC,EAAE,CAAC;MAC/C,CAAC,MACI,IAAI,IAAI,CAACoE,iBAAiB,KAAK,cAAc,EAAE;QAChD,IAAI,CAACT,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,CAAC0J,UAAU,CAAC1J,CAAC,EAAE,CAAC;MACnD,CAAC,MACI,IAAI,IAAI,CAACoE,iBAAiB,KAAK,aAAa,EAAE;QAC/C,IAAIuG,cAAc,EAAE;UAChB,IAAIK,YAAY,GAAGF,eAAe,GAC5B;YACE9K,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,GAAG,CAAC;YACnBM,CAAC,EAAE,IAAI,CAACF,MAAM,EAAE,GAAG;UACvB,CAAC,GACC;YACEL,CAAC,EAAE,IAAI,CAAC2D,OAAO,CAAC,YAAY,CAAC,CAAC3D,CAAC,EAAE;YACjCO,CAAC,EAAE,IAAI,CAACoD,OAAO,CAAC,YAAY,CAAC,CAACpD,CAAC;UACnC,CAAC;UACLkJ,aAAa,GAAGvJ,IAAI,CAAC6I,IAAI,CAAC7I,IAAI,CAAC8I,GAAG,CAACgC,YAAY,CAAChL,CAAC,GAAG0J,UAAU,CAAC1J,CAAC,EAAE,EAAE,CAAC,CAAC,GAClEE,IAAI,CAAC8I,GAAG,CAACU,UAAU,CAACnJ,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,EAAE,CAAC,CAAC,CAAC;UACjD,IAAI0K,QAAQ,GAAGD,YAAY,CAAChL,CAAC,GAAG0J,UAAU,CAAC1J,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;UACvD,IAAIkL,QAAQ,GAAGxB,UAAU,CAACnJ,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UACvDP,CAAC,GAAGyJ,aAAa,GAAG,IAAI,CAACtJ,GAAG,GAAG8K,QAAQ;UACvC1K,CAAC,GAAGkJ,aAAa,GAAG,IAAI,CAACnJ,GAAG,GAAG4K,QAAQ;UACvCxB,UAAU,CAAC1J,CAAC,CAACgL,YAAY,CAAChL,CAAC,GAAGA,CAAC,CAAC;UAChC0J,UAAU,CAACnJ,CAAC,CAACyK,YAAY,CAACzK,CAAC,GAAGA,CAAC,CAAC;QACpC;QACA6I,GAAG,GAAGM,UAAU,CAACyB,QAAQ,EAAE;QAC3B,IAAI,CAACxH,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,CAACoJ,GAAG,CAACpJ,CAAC,CAAC;QAClC,IAAI,CAAC2D,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC,CAAC6I,GAAG,CAAC7I,CAAC,CAAC;MAC1C,CAAC,MACI,IAAI,IAAI,CAAC6D,iBAAiB,KAAK,eAAe,EAAE;QACjD,IAAI,CAACT,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC,CAACmJ,UAAU,CAACnJ,CAAC,EAAE,CAAC;MACnD,CAAC,MACI,IAAI,IAAI,CAAC6D,iBAAiB,KAAK,cAAc,EAAE;QAChD,IAAIuG,cAAc,EAAE;UAChB,IAAIK,YAAY,GAAGF,eAAe,GAC5B;YACE9K,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,GAAG,CAAC;YACnBM,CAAC,EAAE,IAAI,CAACF,MAAM,EAAE,GAAG;UACvB,CAAC,GACC;YACEL,CAAC,EAAE,IAAI,CAAC2D,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,EAAE;YAChCO,CAAC,EAAE,IAAI,CAACoD,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC;UAClC,CAAC;UACLkJ,aAAa,GAAGvJ,IAAI,CAAC6I,IAAI,CAAC7I,IAAI,CAAC8I,GAAG,CAACU,UAAU,CAAC1J,CAAC,EAAE,GAAGgL,YAAY,CAAChL,CAAC,EAAE,CAAC,CAAC,GAClEE,IAAI,CAAC8I,GAAG,CAACU,UAAU,CAACnJ,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,EAAE,CAAC,CAAC,CAAC;UACjD,IAAI0K,QAAQ,GAAG,IAAI,CAACtH,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,EAAE,GAAGgL,YAAY,CAAChL,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UAC1E,IAAIkL,QAAQ,GAAG,IAAI,CAACvH,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC,EAAE,GAAGyK,YAAY,CAACzK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UAC1EP,CAAC,GAAGyJ,aAAa,GAAG,IAAI,CAACtJ,GAAG,GAAG8K,QAAQ;UACvC1K,CAAC,GAAGkJ,aAAa,GAAG,IAAI,CAACnJ,GAAG,GAAG4K,QAAQ;UACvC,IAAI,CAACvH,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,CAACgL,YAAY,CAAChL,CAAC,GAAGA,CAAC,CAAC;UACnD,IAAI,CAAC2D,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC,CAACyK,YAAY,CAACzK,CAAC,GAAGA,CAAC,CAAC;QACvD;MACJ,CAAC,MACI;QACD6K,OAAO,CAACzL,KAAK,CAAC,IAAI0L,KAAK,CAAC,gDAAgD,GACpE,IAAI,CAACjH,iBAAiB,CAAC,CAAC;MAChC;MACA,IAAI0G,eAAe,GAAG,IAAI,CAACA,eAAe,EAAE,IAAIjM,CAAC,CAACkM,MAAM;MACxD,IAAID,eAAe,EAAE;QACjB,IAAIQ,OAAO,GAAG,IAAI,CAAC3H,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI4H,WAAW,GAAG,IAAI,CAAC5H,OAAO,CAAC,eAAe,CAAC;QAC/C,IAAI6H,UAAU,GAAGF,OAAO,CAACtL,CAAC,EAAE;QAC5B,IAAIyL,UAAU,GAAGH,OAAO,CAAC/K,CAAC,EAAE;QAC5B,IAAImL,aAAa,GAAG,IAAI,CAACC,QAAQ,EAAE,GAAGJ,WAAW,CAACvL,CAAC,EAAE;QACrD,IAAI4L,aAAa,GAAG,IAAI,CAACC,SAAS,EAAE,GAAGN,WAAW,CAAChL,CAAC,EAAE;QACtDgL,WAAW,CAACO,IAAI,CAAC;UACb9L,CAAC,EAAE,CAACwL,UAAU;UACdjL,CAAC,EAAE,CAACkL;QACR,CAAC,CAAC;QACFH,OAAO,CAACQ,IAAI,CAAC;UACT9L,CAAC,EAAE0L,aAAa;UAChBnL,CAAC,EAAEqL;QACP,CAAC,CAAC;MACN;MACA,IAAIxG,MAAM,GAAG,IAAI,CAACzB,OAAO,CAAC,WAAW,CAAC,CAACE,mBAAmB,EAAE;MAC5D7D,CAAC,GAAGoF,MAAM,CAACpF,CAAC;MACZO,CAAC,GAAG6E,MAAM,CAAC7E,CAAC;MACZ,IAAIN,KAAK,GAAG,IAAI,CAAC0D,OAAO,CAAC,eAAe,CAAC,CAAC3D,CAAC,EAAE,GAAG,IAAI,CAAC2D,OAAO,CAAC,WAAW,CAAC,CAAC3D,CAAC,EAAE;MAC7E,IAAIK,MAAM,GAAG,IAAI,CAACsD,OAAO,CAAC,eAAe,CAAC,CAACpD,CAAC,EAAE,GAAG,IAAI,CAACoD,OAAO,CAAC,WAAW,CAAC,CAACpD,CAAC,EAAE;MAC9E,IAAI,CAACmK,aAAa,CAAC;QACf1K,CAAC,EAAEA,CAAC;QACJO,CAAC,EAAEA,CAAC;QACJN,KAAK,EAAEA,KAAK;QACZI,MAAM,EAAEA,MAAM;QACdD,QAAQ,EAAE9B,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAACnB,QAAQ,EAAE;MAC5C,CAAC,EAAEvB,CAAC,CAAC;IACT;EAAC;IAAA;IAAA,OACD,wBAAeA,CAAC,EAAE;MACd,IAAI,CAACkN,aAAa,CAAClN,CAAC,CAAC;IACzB;EAAC;IAAA;IAAA,OACD,gCAAuB;MACnB,OAAO,IAAI,CAACmN,YAAY,EAAE;IAC9B;EAAC;IAAA;IAAA,OACD,uBAAcnN,CAAC,EAAE;MACb,IAAI,IAAI,CAACkD,aAAa,EAAE;QACpB,IAAI,CAACA,aAAa,GAAG,KAAK;QAC1B,IAAI,OAAOkH,MAAM,KAAK,WAAW,EAAE;UAC/BA,MAAM,CAACgD,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAChK,gBAAgB,CAAC;UAC9DgH,MAAM,CAACgD,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAChK,gBAAgB,CAAC;UAC9DgH,MAAM,CAACgD,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC9J,cAAc,EAAE,IAAI,CAAC;UAChE8G,MAAM,CAACgD,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC9J,cAAc,EAAE,IAAI,CAAC;QACrE;QACA,IAAII,IAAI,GAAG,IAAI,CAACD,OAAO,EAAE;QACzB,IAAI,CAACiH,KAAK,CAAC,cAAc,EAAE;UAAEC,GAAG,EAAE3K,CAAC;UAAE8J,MAAM,EAAEpG;QAAK,CAAC,CAAC;QACpD,IAAIA,IAAI,EAAE;UACN,IAAI,CAACI,MAAM,CAACM,OAAO,CAAC,UAAC0F,MAAM,EAAK;YAC5BA,MAAM,CAACY,KAAK,CAAC,cAAc,EAAE;cAAEC,GAAG,EAAE3K,CAAC;cAAE8J,MAAM,EAANA;YAAO,CAAC,CAAC;UACpD,CAAC,CAAC;QACN;QACA,IAAI,CAACvE,iBAAiB,GAAG,IAAI;MACjC;IACJ;EAAC;IAAA;IAAA,OACD,uBAAc8H,QAAQ,EAAE1C,GAAG,EAAE;MAAA;MACzB,IAAI2C,QAAQ,GAAG,IAAI,CAAC3F,YAAY,EAAE;MAClC,IAAM4F,OAAO,GAAG,CAAC;MACjB,IAAIrO,IAAI,CAAC2B,QAAQ,CAACwM,QAAQ,CAACjM,KAAK,EAAE,CAAC,IAAI,CAACgI,OAAO,EAAE,GAAG,CAAC,GAAGmE,OAAO,EAAEA,OAAO,CAAC,EAAE;QACvE,IAAI,CAAChK,MAAM,EAAE;QACb;MACJ;MACA,IAAIrE,IAAI,CAAC2B,QAAQ,CAACwM,QAAQ,CAAC7L,MAAM,EAAE,CAAC,IAAI,CAAC4H,OAAO,EAAE,GAAG,CAAC,GAAGmE,OAAO,EAAEA,OAAO,CAAC,EAAE;QACxE,IAAI,CAAChK,MAAM,EAAE;QACb;MACJ;MACA,IAAMiK,kBAAkB,GAAG,IAAI,CAACC,WAAW,EAAE;MAC7C,IAAIC,CAAC,GAAG,IAAIvO,SAAS,EAAE;MACvBuO,CAAC,CAACxG,MAAM,CAACzH,KAAK,CAACiD,QAAQ,CAAC,IAAI,CAACnB,QAAQ,EAAE,CAAC,CAAC;MACzC,IAAI,IAAI,CAACgE,iBAAiB,IACtB8H,QAAQ,CAACjM,KAAK,GAAG,CAAC,IAClB,IAAI,CAACmE,iBAAiB,CAACoI,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC7C,IAAMC,MAAM,GAAGF,CAAC,CAAC7L,KAAK,CAAC;UACnBV,CAAC,EAAE,CAAC,IAAI,CAACiI,OAAO,EAAE,GAAG,CAAC;UACtB1H,CAAC,EAAE;QACP,CAAC,CAAC;QACF2L,QAAQ,CAAClM,CAAC,IAAIyM,MAAM,CAACzM,CAAC;QACtBkM,QAAQ,CAAC3L,CAAC,IAAIkM,MAAM,CAAClM,CAAC;QACtB2L,QAAQ,CAACjM,KAAK,IAAI,IAAI,CAACgI,OAAO,EAAE,GAAG,CAAC;QACpC,IAAI,CAAC7D,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACsI,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;QACxE,IAAI,CAACpD,iBAAiB,CAACtJ,CAAC,IAAIyM,MAAM,CAACzM,CAAC;QACpC,IAAI,CAACsJ,iBAAiB,CAAC/I,CAAC,IAAIkM,MAAM,CAAClM,CAAC;QACpC,IAAI,CAAC8L,kBAAkB,EAAE;UACrB,IAAI,CAACjK,MAAM,EAAE;UACb;QACJ;MACJ,CAAC,MACI,IAAI,IAAI,CAACgC,iBAAiB,IAC3B8H,QAAQ,CAACjM,KAAK,GAAG,CAAC,IAClB,IAAI,CAACmE,iBAAiB,CAACoI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAC9C,IAAMC,OAAM,GAAGF,CAAC,CAAC7L,KAAK,CAAC;UACnBV,CAAC,EAAE,IAAI,CAACiI,OAAO,EAAE,GAAG,CAAC;UACrB1H,CAAC,EAAE;QACP,CAAC,CAAC;QACF,IAAI,CAAC6D,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACsI,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;QACxE,IAAI,CAACpD,iBAAiB,CAACtJ,CAAC,IAAIyM,OAAM,CAACzM,CAAC;QACpC,IAAI,CAACsJ,iBAAiB,CAAC/I,CAAC,IAAIkM,OAAM,CAAClM,CAAC;QACpC2L,QAAQ,CAACjM,KAAK,IAAI,IAAI,CAACgI,OAAO,EAAE,GAAG,CAAC;QACpC,IAAI,CAACoE,kBAAkB,EAAE;UACrB,IAAI,CAACjK,MAAM,EAAE;UACb;QACJ;MACJ;MACA,IAAI,IAAI,CAACgC,iBAAiB,IACtB8H,QAAQ,CAAC7L,MAAM,GAAG,CAAC,IACnB,IAAI,CAAC+D,iBAAiB,CAACoI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;QAC5C,IAAMC,QAAM,GAAGF,CAAC,CAAC7L,KAAK,CAAC;UACnBV,CAAC,EAAE,CAAC;UACJO,CAAC,EAAE,CAAC,IAAI,CAAC0H,OAAO,EAAE,GAAG;QACzB,CAAC,CAAC;QACFiE,QAAQ,CAAClM,CAAC,IAAIyM,QAAM,CAACzM,CAAC;QACtBkM,QAAQ,CAAC3L,CAAC,IAAIkM,QAAM,CAAClM,CAAC;QACtB,IAAI,CAAC6D,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACsI,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;QACxE,IAAI,CAACpD,iBAAiB,CAACtJ,CAAC,IAAIyM,QAAM,CAACzM,CAAC;QACpC,IAAI,CAACsJ,iBAAiB,CAAC/I,CAAC,IAAIkM,QAAM,CAAClM,CAAC;QACpC2L,QAAQ,CAAC7L,MAAM,IAAI,IAAI,CAAC4H,OAAO,EAAE,GAAG,CAAC;QACrC,IAAI,CAACoE,kBAAkB,EAAE;UACrB,IAAI,CAACjK,MAAM,EAAE;UACb;QACJ;MACJ,CAAC,MACI,IAAI,IAAI,CAACgC,iBAAiB,IAC3B8H,QAAQ,CAAC7L,MAAM,GAAG,CAAC,IACnB,IAAI,CAAC+D,iBAAiB,CAACoI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC/C,IAAMC,QAAM,GAAGF,CAAC,CAAC7L,KAAK,CAAC;UACnBV,CAAC,EAAE,CAAC;UACJO,CAAC,EAAE,IAAI,CAAC0H,OAAO,EAAE,GAAG;QACxB,CAAC,CAAC;QACF,IAAI,CAAC7D,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACsI,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC;QACxE,IAAI,CAACpD,iBAAiB,CAACtJ,CAAC,IAAIyM,QAAM,CAACzM,CAAC;QACpC,IAAI,CAACsJ,iBAAiB,CAAC/I,CAAC,IAAIkM,QAAM,CAAClM,CAAC;QACpC2L,QAAQ,CAAC7L,MAAM,IAAI,IAAI,CAAC4H,OAAO,EAAE,GAAG,CAAC;QACrC,IAAI,CAACoE,kBAAkB,EAAE;UACrB,IAAI,CAACjK,MAAM,EAAE;UACb;QACJ;MACJ;MACA,IAAI,IAAI,CAACuK,YAAY,EAAE,EAAE;QACrB,IAAMC,OAAO,GAAG,IAAI,CAACD,YAAY,EAAE,CAACR,QAAQ,EAAED,QAAQ,CAAC;QACvD,IAAIU,OAAO,EAAE;UACTV,QAAQ,GAAGU,OAAO;QACtB,CAAC,MACI;UACD7O,IAAI,CAAC0E,IAAI,CAAC,wEAAwE,CAAC;QACvF;MACJ;MACA,IAAMoK,QAAQ,GAAG,QAAQ;MACzB,IAAMC,KAAK,GAAG,IAAI9O,SAAS,EAAE;MAC7B8O,KAAK,CAACC,SAAS,CAACZ,QAAQ,CAACnM,CAAC,EAAEmM,QAAQ,CAAC5L,CAAC,CAAC;MACvCuM,KAAK,CAAC/G,MAAM,CAACoG,QAAQ,CAAC/L,QAAQ,CAAC;MAC/B0M,KAAK,CAACE,KAAK,CAACb,QAAQ,CAAClM,KAAK,GAAG4M,QAAQ,EAAEV,QAAQ,CAAC9L,MAAM,GAAGwM,QAAQ,CAAC;MAClE,IAAMI,KAAK,GAAG,IAAIjP,SAAS,EAAE;MAC7BiP,KAAK,CAACF,SAAS,CAACb,QAAQ,CAAClM,CAAC,EAAEkM,QAAQ,CAAC3L,CAAC,CAAC;MACvC0M,KAAK,CAAClH,MAAM,CAACmG,QAAQ,CAAC9L,QAAQ,CAAC;MAC/B6M,KAAK,CAACD,KAAK,CAACd,QAAQ,CAACjM,KAAK,GAAG4M,QAAQ,EAAEX,QAAQ,CAAC7L,MAAM,GAAGwM,QAAQ,CAAC;MAClE,IAAM3C,KAAK,GAAG+C,KAAK,CAACC,QAAQ,CAACJ,KAAK,CAACxG,MAAM,EAAE,CAAC;MAC5C,IAAI,CAAC3D,MAAM,CAACM,OAAO,CAAC,UAACV,IAAI,EAAK;QAC1B,IAAI4K,EAAE;QACN,IAAMC,eAAe,GAAG7K,IAAI,CAACyF,SAAS,EAAE,CAACrC,oBAAoB,EAAE;QAC/D,IAAM0H,cAAc,GAAG9K,IAAI,CAACyJ,YAAY,EAAE,CAACsB,IAAI,EAAE;QACjDD,cAAc,CAACN,SAAS,CAACxK,IAAI,CAAC8C,OAAO,EAAE,EAAE9C,IAAI,CAAC+C,OAAO,EAAE,CAAC;QACxD,IAAMiI,iBAAiB,GAAG,IAAIvP,SAAS,EAAE;QACzCuP,iBAAiB,CACZL,QAAQ,CAACE,eAAe,CAACE,IAAI,EAAE,CAAChH,MAAM,EAAE,CAAC,CACzC4G,QAAQ,CAAChD,KAAK,CAAC,CACfgD,QAAQ,CAACE,eAAe,CAAC,CACzBF,QAAQ,CAACG,cAAc,CAAC;QAC7B,IAAMxE,KAAK,GAAG0E,iBAAiB,CAACC,SAAS,EAAE;QAC3CjL,IAAI,CAACkL,QAAQ,CAAC5E,KAAK,CAAC;QACpB,MAAI,CAACU,KAAK,CAAC,WAAW,EAAE;UAAEC,GAAG,EAAEA,GAAG;UAAEb,MAAM,EAAEpG;QAAK,CAAC,CAAC;QACnDA,IAAI,CAACgH,KAAK,CAAC,WAAW,EAAE;UAAEC,GAAG,EAAEA,GAAG;UAAEb,MAAM,EAAEpG;QAAK,CAAC,CAAC;QACnD,CAAC4K,EAAE,GAAG5K,IAAI,CAACmL,QAAQ,EAAE,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,SAAS,EAAE;MAC9E,CAAC,CAAC;MACF,IAAI,CAACvN,QAAQ,CAACrC,IAAI,CAAC6P,YAAY,CAAC1B,QAAQ,CAAC9L,QAAQ,CAAC,CAAC;MACnD,IAAI,CAAC+C,oBAAoB,EAAE;MAC3B,IAAI,CAACf,MAAM,EAAE;MACb,IAAI,CAACsL,QAAQ,EAAE,CAACC,SAAS,EAAE;IAC/B;EAAC;IAAA;IAAA,OACD,uBAAc;MACV,IAAI,CAACxK,oBAAoB,EAAE;MAC3B,IAAI,CAACf,MAAM,EAAE;IACjB;EAAC;IAAA;IAAA,OACD,2BAAkByL,QAAQ,EAAEhF,KAAK,EAAE;MAC/B,IAAMjC,MAAM,GAAG,IAAI,CAACjD,OAAO,CAACkK,QAAQ,CAAC;MACrCjH,MAAM,CAAC6G,QAAQ,CAAC5E,KAAK,CAAC;IAC1B;EAAC;IAAA;IAAA,OACD,kBAAS;MAAA;MACL,IAAIsE,EAAE;MACN,IAAItE,KAAK,GAAG,IAAI,CAACrC,YAAY,EAAE;MAC/B,IAAI,CAACpG,QAAQ,CAACrC,IAAI,CAAC6P,YAAY,CAAC/E,KAAK,CAACzI,QAAQ,CAAC,CAAC;MAChD,IAAIH,KAAK,GAAG4I,KAAK,CAAC5I,KAAK;MACvB,IAAII,MAAM,GAAGwI,KAAK,CAACxI,MAAM;MACzB,IAAIyN,cAAc,GAAG,IAAI,CAACA,cAAc,EAAE;MAC1C,IAAIC,aAAa,GAAG,IAAI,CAACA,aAAa,EAAE;MACxC,IAAI9F,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;MAC5B,IAAI+F,UAAU,GAAG,IAAI,CAACA,UAAU,EAAE;MAClC,IAAI,CAACC,IAAI,CAAC,UAAU,CAAC,CAAChL,OAAO,CAAC,UAACV,IAAI,EAAK;QACpCA,IAAI,CAACkL,QAAQ,CAAC;UACVxN,KAAK,EAAE+N,UAAU;UACjB3N,MAAM,EAAE2N,UAAU;UAClB3I,OAAO,EAAE2I,UAAU,GAAG,CAAC;UACvB1I,OAAO,EAAE0I,UAAU,GAAG,CAAC;UACvBnH,MAAM,EAAE,MAAI,CAACqH,YAAY,EAAE;UAC3BnH,WAAW,EAAE,MAAI,CAACoH,iBAAiB,EAAE;UACrCrH,IAAI,EAAE,MAAI,CAACsH,UAAU,EAAE;UACvBC,YAAY,EAAE,MAAI,CAACC,kBAAkB;QACzC,CAAC,CAAC;MACN,CAAC,CAAC;MACF,IAAI,CAACC,iBAAiB,CAAC,WAAW,EAAE;QAChCvO,CAAC,EAAE,CAAC;QACJO,CAAC,EAAE,CAAC;QACJ8E,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjC3C,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,UAAU,CAAC,IAAI;MACpE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,aAAa,EAAE;QAClCvO,CAAC,EAAEC,KAAK,GAAG,CAAC;QACZM,CAAC,EAAE,CAAC;QACJ+E,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,YAAY,CAAC,IAAI;MACtE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,YAAY,EAAE;QACjCvO,CAAC,EAAEC,KAAK;QACRM,CAAC,EAAE,CAAC;QACJ8E,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjC3C,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,WAAW,CAAC,IAAI;MACrE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,cAAc,EAAE;QACnCvO,CAAC,EAAE,CAAC;QACJO,CAAC,EAAEF,MAAM,GAAG,CAAC;QACbgF,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,aAAa,CAAC,IAAI;MACvE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,eAAe,EAAE;QACpCvO,CAAC,EAAEC,KAAK;QACRM,CAAC,EAAEF,MAAM,GAAG,CAAC;QACbgF,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,cAAc,CAAC,IAAI;MACxE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,cAAc,EAAE;QACnCvO,CAAC,EAAE,CAAC;QACJO,CAAC,EAAEF,MAAM;QACTgF,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjC3C,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,aAAa,CAAC,IAAI;MACvE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,gBAAgB,EAAE;QACrCvO,CAAC,EAAEC,KAAK,GAAG,CAAC;QACZM,CAAC,EAAEF,MAAM;QACTiF,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,eAAe,CAAC,IAAI;MACzE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,eAAe,EAAE;QACpCvO,CAAC,EAAEC,KAAK;QACRM,CAAC,EAAEF,MAAM;QACTgF,OAAO,EAAE2I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjC3C,OAAO,EAAE0I,UAAU,GAAG,CAAC,GAAG/F,OAAO;QACjCuG,OAAO,EAAET,aAAa,IAAID,cAAc,CAACtB,OAAO,CAAC,cAAc,CAAC,IAAI;MACxE,CAAC,CAAC;MACF,IAAI,CAAC+B,iBAAiB,CAAC,UAAU,EAAE;QAC/BvO,CAAC,EAAEC,KAAK,GAAG,CAAC;QACZM,CAAC,EAAE,CAAC,IAAI,CAAC+H,kBAAkB,EAAE,GAAGvK,IAAI,CAACwK,KAAK,CAAClI,MAAM,CAAC,GAAG4H,OAAO;QAC5DuG,OAAO,EAAE,IAAI,CAACpG,aAAa;MAC/B,CAAC,CAAC;MACF,IAAI,CAACmG,iBAAiB,CAAC,OAAO,EAAE;QAC5BtO,KAAK,EAAEA,KAAK;QACZI,MAAM,EAAEA,MAAM;QACdmO,OAAO,EAAE,IAAI,CAACC,aAAa,EAAE;QAC7B5H,MAAM,EAAE,IAAI,CAAC6H,YAAY,EAAE;QAC3B3H,WAAW,EAAE,IAAI,CAAC4H,iBAAiB,EAAE;QACrCC,IAAI,EAAE,IAAI,CAACC,UAAU,EAAE;QACvB7O,CAAC,EAAE,CAAC;QACJO,CAAC,EAAE;MACP,CAAC,CAAC;MACF,CAAC4M,EAAE,GAAG,IAAI,CAACO,QAAQ,EAAE,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,SAAS,EAAE;IAC9E;EAAC;IAAA;IAAA,OACD,0BAAiB;MACb,OAAO,IAAI,CAAC5L,aAAa;IAC7B;EAAC;IAAA;IAAA,OACD,yBAAgB;MACZ,IAAI,IAAI,CAACA,aAAa,EAAE;QACpB,IAAI,CAACgK,aAAa,EAAE;QACpB,IAAIrC,UAAU,GAAG,IAAI,CAAC/F,OAAO,CAAC,GAAG,GAAG,IAAI,CAACS,iBAAiB,CAAC;QAC3D,IAAIsF,UAAU,EAAE;UACZA,UAAU,CAACrC,QAAQ,EAAE;QACzB;MACJ;IACJ;EAAC;IAAA;IAAA,OACD,mBAAU;MACN,IAAI,IAAI,CAACG,QAAQ,EAAE,IAAI,IAAI,CAACG,aAAa,EAAE;QACvC,IAAI,CAACH,QAAQ,EAAE,CAACC,OAAO,KAAK,IAAI,CAACD,QAAQ,EAAE,CAACC,OAAO,CAACC,KAAK,CAACH,MAAM,GAAG,EAAE,CAAC;MAC1E;MACAlJ,KAAK,CAACyQ,SAAS,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;MAClC,IAAI,CAAClM,MAAM,EAAE;MACb,IAAI,CAACiJ,aAAa,EAAE;MACpB,OAAO,IAAI;IACf;EAAC;IAAA;IAAA,OACD,oBAAW;MACP,OAAO7N,IAAI,CAAC4Q,SAAS,CAACG,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;IAC7C;EAAC;IAAA;IAAA,OACD,yBAAgB;MACZ,IAAI,IAAI,CAACnM,KAAK,EAAE,CAACvB,MAAM,GAAG,CAAC,EAAE;QACzB;MACJ,CAAC,MACI;QACD,OAAO;UAAEtB,CAAC,EAAE,CAAC;UAAEO,CAAC,EAAE,CAAC;UAAEN,KAAK,EAAE,CAAC;UAAEI,MAAM,EAAE;QAAE,CAAC;MAC9C;IACJ;EAAC;EAAA;AAAA,EAlwB4BhC,KAAK;AAowBtC,SAAS6Q,eAAe,CAACC,GAAG,EAAE;EAC1B,IAAI,EAAEA,GAAG,YAAYC,KAAK,CAAC,EAAE;IACzBrR,IAAI,CAAC0E,IAAI,CAAC,yCAAyC,CAAC;EACxD;EACA,IAAI0M,GAAG,YAAYC,KAAK,EAAE;IACtBD,GAAG,CAAClM,OAAO,CAAC,UAAUyD,IAAI,EAAE;MACxB,IAAI9G,aAAa,CAAC4M,OAAO,CAAC9F,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QACpC3I,IAAI,CAAC0E,IAAI,CAAC,uBAAuB,GAC7BiE,IAAI,GACJ,yBAAyB,GACzB9G,aAAa,CAACd,IAAI,CAAC,IAAI,CAAC,CAAC;MACjC;IACJ,CAAC,CAAC;EACN;EACA,OAAOqQ,GAAG,IAAI,EAAE;AACpB;AACAtN,WAAW,CAACiN,SAAS,CAACO,SAAS,GAAG,aAAa;AAC/C5Q,aAAa,CAACoD,WAAW,CAAC;AAC1B5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,gBAAgB,EAAEjC,aAAa,EAAEsP,eAAe,CAAC;AACtFjR,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,aAAa,EAAE,IAAI,EAAEtD,mBAAmB,EAAE,CAAC;AAChFN,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,YAAY,EAAE,EAAE,EAAErD,kBAAkB,EAAE,CAAC;AAC5EP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,eAAe,EAAE,EAAE,CAAC;AACzD5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,oBAAoB,EAAE,EAAE,EAAErD,kBAAkB,EAAE,CAAC;AACpFP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,uBAAuB,EAAE,CAAC,EAAErD,kBAAkB,EAAE,CAAC;AACtFP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,cAAc,EAAE,kBAAkB,CAAC;AACxE5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,mBAAmB,EAAE,CAAC,EAAErD,kBAAkB,EAAE,CAAC;AAClFP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,YAAY,EAAE,OAAO,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,oBAAoB,EAAE,CAAC,EAAErD,kBAAkB,EAAE,CAAC;AACnFP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,cAAc,EAAE,kBAAkB,CAAC;AACxE5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,mBAAmB,EAAE,CAAC,EAAErD,kBAAkB,EAAE,CAAC;AAClFP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,YAAY,CAAC;AAClD5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC;AACvD5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,iBAAiB,EAAE,KAAK,CAAC;AAC9D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,cAAc,EAAE,KAAK,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,SAAS,EAAE,CAAC,EAAErD,kBAAkB,EAAE,CAAC;AACxEP,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,MAAM,CAAC;AAC5C5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,OAAO,CAAC;AAC7C5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,cAAc,CAAC;AACpD5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,qBAAqB,CAAC;AAC3D5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,yBAAyB,EAAE,KAAK,CAAC;AACtE5D,OAAO,CAACqR,eAAe,CAACzN,WAAW,EAAE,uBAAuB,EAAE,IAAI,CAAC;AACnE5D,OAAO,CAACsR,UAAU,CAAC1N,WAAW,EAAE;EAC5B2N,WAAW,EAAE,eAAe;EAC5BC,mBAAmB,EAAE,oBAAoB;EACzCC,eAAe,EAAE;AACrB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}