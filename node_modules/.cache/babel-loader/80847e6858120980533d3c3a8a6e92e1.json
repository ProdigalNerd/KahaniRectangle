{"ast":null,"code":"import _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport var RegularPolygon = /*#__PURE__*/function (_Shape) {\n  _inherits(RegularPolygon, _Shape);\n  var _super = _createSuper(RegularPolygon);\n  function RegularPolygon() {\n    _classCallCheck(this, RegularPolygon);\n    return _super.apply(this, arguments);\n  }\n  _createClass(RegularPolygon, [{\n    key: \"_sceneFunc\",\n    value: function _sceneFunc(context) {\n      var points = this._getPoints();\n      context.beginPath();\n      context.moveTo(points[0].x, points[0].y);\n      for (var n = 1; n < points.length; n++) {\n        context.lineTo(points[n].x, points[n].y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  }, {\n    key: \"_getPoints\",\n    value: function _getPoints() {\n      var sides = this.attrs.sides;\n      var radius = this.attrs.radius || 0;\n      var points = [];\n      for (var n = 0; n < sides; n++) {\n        points.push({\n          x: radius * Math.sin(n * 2 * Math.PI / sides),\n          y: -1 * radius * Math.cos(n * 2 * Math.PI / sides)\n        });\n      }\n      return points;\n    }\n  }, {\n    key: \"getSelfRect\",\n    value: function getSelfRect() {\n      var points = this._getPoints();\n      var minX = points[0].x;\n      var maxX = points[0].y;\n      var minY = points[0].x;\n      var maxY = points[0].y;\n      points.forEach(function (point) {\n        minX = Math.min(minX, point.x);\n        maxX = Math.max(maxX, point.x);\n        minY = Math.min(minY, point.y);\n        maxY = Math.max(maxY, point.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.radius() * 2;\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth(width) {\n      this.radius(width / 2);\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(height) {\n      this.radius(height / 2);\n    }\n  }]);\n  return RegularPolygon;\n}(Shape);\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, 'sides', 0, getNumberValidator());","map":{"version":3,"names":["Factory","Shape","getNumberValidator","_registerNode","RegularPolygon","context","points","_getPoints","beginPath","moveTo","x","y","n","length","lineTo","closePath","fillStrokeShape","sides","attrs","radius","push","Math","sin","PI","cos","minX","maxX","minY","maxY","forEach","point","min","max","width","height","prototype","className","_centroid","_attrsAffectingSize","addGetterSetter"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/konva/lib/shapes/RegularPolygon.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class RegularPolygon extends Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (var n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (var n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        var minX = points[0].x;\n        var maxX = points[0].y;\n        var minY = points[0].x;\n        var maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n_registerNode(RegularPolygon);\nFactory.addGetterSetter(RegularPolygon, 'radius', 0, getNumberValidator());\nFactory.addGetterSetter(RegularPolygon, 'sides', 0, getNumberValidator());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}