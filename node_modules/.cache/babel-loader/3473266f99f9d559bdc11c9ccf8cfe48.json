{"ast":null,"code":"import _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#',\n  BEFORE_DRAW = 'beforeDraw',\n  DRAW = 'draw',\n  INTERSECTION_OFFSETS = [{\n    x: 0,\n    y: 0\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 1,\n    y: 1\n  }, {\n    x: -1,\n    y: 1\n  }],\n  INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport var Layer = /*#__PURE__*/function (_Container) {\n  _inherits(Layer, _Container);\n  var _super = _createSuper(Layer);\n  function Layer(config) {\n    var _this;\n    _classCallCheck(this, Layer);\n    _this = _super.call(this, config);\n    _this.canvas = new SceneCanvas();\n    _this.hitCanvas = new HitCanvas({\n      pixelRatio: 1\n    });\n    _this._waitingForDraw = false;\n    _this.on('visibleChange.konva', _this._checkVisibility);\n    _this._checkVisibility();\n    _this.on('imageSmoothingEnabledChange.konva', _this._setSmoothEnabled);\n    _this._setSmoothEnabled();\n    return _this;\n  }\n  _createClass(Layer, [{\n    key: \"createPNGStream\",\n    value: function createPNGStream() {\n      var c = this.canvas._canvas;\n      return c.createPNGStream();\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getNativeCanvasElement\",\n    value: function getNativeCanvasElement() {\n      return this.canvas._canvas;\n    }\n  }, {\n    key: \"getHitCanvas\",\n    value: function getHitCanvas() {\n      return this.hitCanvas;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.getCanvas().getContext();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(bounds) {\n      this.getContext().clear(bounds);\n      this.getHitCanvas().getContext().clear(bounds);\n      return this;\n    }\n  }, {\n    key: \"setZIndex\",\n    value: function setZIndex(index) {\n      _get(_getPrototypeOf(Layer.prototype), \"setZIndex\", this).call(this, index);\n      var stage = this.getStage();\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (index < stage.children.length - 1) {\n          stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n        } else {\n          stage.content.appendChild(this.getNativeCanvasElement());\n        }\n      }\n      return this;\n    }\n  }, {\n    key: \"moveToTop\",\n    value: function moveToTop() {\n      Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage && stage.content) {\n        stage.content.removeChild(this.getNativeCanvasElement());\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n      return true;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var moved = Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return false;\n      }\n      var stage = this.getStage();\n      if (!stage || !stage.content) {\n        return false;\n      }\n      stage.content.removeChild(this.getNativeCanvasElement());\n      if (this.index < stage.children.length - 1) {\n        stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n      } else {\n        stage.content.appendChild(this.getNativeCanvasElement());\n      }\n      return true;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      if (Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.children;\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom() {\n      if (Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.children;\n          if (stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n          }\n        }\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var _canvas = this.getNativeCanvasElement();\n      Node.prototype.remove.call(this);\n      if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this.parent;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(_ref) {\n      var width = _ref.width,\n        height = _ref.height;\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n      this._setSmoothEnabled();\n      return this;\n    }\n  }, {\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Util.throw('You may only add groups and shapes to a layer.');\n      }\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.width = config.width || this.getWidth();\n      config.height = config.height || this.getHeight();\n      config.x = config.x !== undefined ? config.x : this.x();\n      config.y = config.y !== undefined ? config.y : this.y();\n      return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      var visible = this.visible();\n      if (visible) {\n        this.canvas._canvas.style.display = 'block';\n      } else {\n        this.canvas._canvas.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"_setSmoothEnabled\",\n    value: function _setSmoothEnabled() {\n      this.getContext()._context.imageSmoothingEnabled = this.imageSmoothingEnabled();\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      if (this.parent) {\n        return this.parent.width();\n      }\n    }\n  }, {\n    key: \"setWidth\",\n    value: function setWidth() {\n      Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      if (this.parent) {\n        return this.parent.height();\n      }\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight() {\n      Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      var _this2 = this;\n      if (!this._waitingForDraw) {\n        this._waitingForDraw = true;\n        Util.requestAnimFrame(function () {\n          _this2.draw();\n          _this2._waitingForDraw = false;\n        });\n      }\n      return this;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!this.isListening() || !this.isVisible()) {\n        return null;\n      }\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (var i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          var intersectionOffset = INTERSECTION_OFFSETS[i];\n          var obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          var shape = obj.shape;\n          if (shape) {\n            return shape;\n          }\n          continueSearch = !!obj.antialiased;\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    }\n  }, {\n    key: \"_getIntersection\",\n    value: function _getIntersection(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n      var p3 = p[3];\n      if (p3 === 255) {\n        var colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n        var shape = shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        return {\n          antialiased: true\n        };\n      }\n      return {};\n    }\n  }, {\n    key: \"drawScene\",\n    value: function drawScene(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || layer && layer.getCanvas();\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n      if (this.clearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n      Container.prototype.drawScene.call(this, canvas, top);\n      this._fire(DRAW, {\n        node: this\n      });\n      return this;\n    }\n  }, {\n    key: \"drawHit\",\n    value: function drawHit(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || layer && layer.hitCanvas;\n      if (layer && layer.clearBeforeDraw()) {\n        layer.getHitCanvas().getContext().clear();\n      }\n      Container.prototype.drawHit.call(this, canvas, top);\n      return this;\n    }\n  }, {\n    key: \"enableHitGraph\",\n    value: function enableHitGraph() {\n      this.hitGraphEnabled(true);\n      return this;\n    }\n  }, {\n    key: \"disableHitGraph\",\n    value: function disableHitGraph() {\n      this.hitGraphEnabled(false);\n      return this;\n    }\n  }, {\n    key: \"setHitGraphEnabled\",\n    value: function setHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      this.listening(val);\n    }\n  }, {\n    key: \"getHitGraphEnabled\",\n    value: function getHitGraphEnabled(val) {\n      Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n      return this.listening();\n    }\n  }, {\n    key: \"toggleHitCanvas\",\n    value: function toggleHitCanvas() {\n      if (!this.parent || !this.parent['content']) {\n        return;\n      }\n      var parent = this.parent;\n      var added = !!this.hitCanvas._canvas.parentNode;\n      if (added) {\n        parent.content.removeChild(this.hitCanvas._canvas);\n      } else {\n        parent.content.appendChild(this.hitCanvas._canvas);\n      }\n    }\n  }]);\n  return Layer;\n}(Container);\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());","map":{"version":3,"names":["Util","Container","Node","Factory","SceneCanvas","HitCanvas","getBooleanValidator","shapes","_registerNode","HASH","BEFORE_DRAW","DRAW","INTERSECTION_OFFSETS","x","y","INTERSECTION_OFFSETS_LEN","length","Layer","config","canvas","hitCanvas","pixelRatio","_waitingForDraw","on","_checkVisibility","_setSmoothEnabled","c","_canvas","createPNGStream","getCanvas","getContext","bounds","clear","getHitCanvas","index","stage","getStage","content","removeChild","getNativeCanvasElement","children","insertBefore","appendChild","prototype","moveToTop","call","moved","moveUp","moveDown","moveToBottom","remove","parentNode","_isInDocument","parent","width","height","setSize","child","type","getType","throw","getWidth","getHeight","undefined","_toKonvaCanvas","visible","style","display","_context","imageSmoothingEnabled","warn","requestAnimFrame","draw","pos","isListening","isVisible","spiralSearchDistance","continueSearch","i","intersectionOffset","obj","_getIntersection","shape","antialiased","ratio","p","context","getImageData","Math","round","data","p3","colorKey","_rgbToHex","can","top","layer","getLayer","_fire","node","clearBeforeDraw","drawScene","drawHit","hitGraphEnabled","val","listening","added","nodeType","addGetterSetter"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/konva/lib/Layer.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Container } from './Container.js';\nimport { Node } from './Node.js';\nimport { Factory } from './Factory.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { getBooleanValidator } from './Validators.js';\nimport { shapes } from './Shape.js';\nimport { _registerNode } from './Global.js';\nvar HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nexport class Layer extends Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new SceneCanvas();\n        this.hitCanvas = new HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node.prototype.moveToTop.call(this);\n        var stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        var moved = Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        var stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node.prototype.moveDown.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node.prototype.moveToBottom.call(this)) {\n            var stage = this.getStage();\n            if (stage) {\n                var children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        var _canvas = this.getNativeCanvasElement();\n        Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        var type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        var spiralSearchDistance = 1;\n        var continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        var layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        var parent = this.parent;\n        var added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n}\nLayer.prototype.nodeType = 'Layer';\n_registerNode(Layer);\nFactory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory.addGetterSetter(Layer, 'hitGraphEnabled', true, getBooleanValidator());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}