{"ast":null,"code":"import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n  if (_pixelRatio) {\n    return _pixelRatio;\n  }\n  var canvas = Util.createCanvasElement();\n  var context = canvas.getContext('2d');\n  _pixelRatio = function () {\n    var devicePixelRatio = Konva._global.devicePixelRatio || 1,\n      backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }();\n  return _pixelRatio;\n}\nexport class Canvas {\n  constructor(config) {\n    this.pixelRatio = 1;\n    this.width = 0;\n    this.height = 0;\n    this.isCache = false;\n    var conf = config || {};\n    var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n    this.pixelRatio = pixelRatio;\n    this._canvas = Util.createCanvasElement();\n    this._canvas.style.padding = '0';\n    this._canvas.style.margin = '0';\n    this._canvas.style.border = '0';\n    this._canvas.style.background = 'transparent';\n    this._canvas.style.position = 'absolute';\n    this._canvas.style.top = '0';\n    this._canvas.style.left = '0';\n  }\n  getContext() {\n    return this.context;\n  }\n  getPixelRatio() {\n    return this.pixelRatio;\n  }\n  setPixelRatio(pixelRatio) {\n    var previousRatio = this.pixelRatio;\n    this.pixelRatio = pixelRatio;\n    this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n  }\n  setWidth(width) {\n    this.width = this._canvas.width = width * this.pixelRatio;\n    this._canvas.style.width = width + 'px';\n    var pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  setHeight(height) {\n    this.height = this._canvas.height = height * this.pixelRatio;\n    this._canvas.style.height = height + 'px';\n    var pixelRatio = this.pixelRatio,\n      _context = this.getContext()._context;\n    _context.scale(pixelRatio, pixelRatio);\n  }\n  getWidth() {\n    return this.width;\n  }\n  getHeight() {\n    return this.height;\n  }\n  setSize(width, height) {\n    this.setWidth(width || 0);\n    this.setHeight(height || 0);\n  }\n  toDataURL(mimeType, quality) {\n    try {\n      return this._canvas.toDataURL(mimeType, quality);\n    } catch (e) {\n      try {\n        return this._canvas.toDataURL();\n      } catch (err) {\n        Util.error('Unable to get data URL. ' + err.message + ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n        return '';\n      }\n    }\n  }\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n    super(config);\n    this.context = new SceneContext(this);\n    this.setSize(config.width, config.height);\n  }\n}\nexport class HitCanvas extends Canvas {\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      width: 0,\n      height: 0\n    };\n    super(config);\n    this.hitCanvas = true;\n    this.context = new HitContext(this);\n    this.setSize(config.width, config.height);\n  }\n}","map":{"version":3,"names":["Util","SceneContext","HitContext","Konva","Factory","getNumberValidator","_pixelRatio","getDevicePixelRatio","canvas","createCanvasElement","context","getContext","devicePixelRatio","_global","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Canvas","constructor","config","pixelRatio","width","height","isCache","conf","_canvas","style","padding","margin","border","background","position","top","left","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","_context","scale","setHeight","toDataURL","mimeType","quality","e","err","error","message","addGetterSetter","undefined","SceneCanvas","HitCanvas","hitCanvas"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/kahani-rectangle/node_modules/konva/lib/Canvas.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { SceneContext, HitContext } from './Context.js';\nimport { Konva } from './Global.js';\nimport { Factory } from './Factory.js';\nimport { getNumberValidator } from './Validators.js';\nvar _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    var canvas = Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        var devicePixelRatio = Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n}\nexport class Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        var conf = config || {};\n        var pixelRatio = conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        var previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        var pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nFactory.addGetterSetter(Canvas, 'pixelRatio', undefined, getNumberValidator());\nexport class SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.context = new SceneContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexport class HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}