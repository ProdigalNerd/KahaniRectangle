{"ast":null,"code":"import _slicedToArray from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _mouse, _touch, _pointer;\nimport { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage',\n  STRING = 'string',\n  PX = 'px',\n  MOUSEOUT = 'mouseout',\n  MOUSELEAVE = 'mouseleave',\n  MOUSEOVER = 'mouseover',\n  MOUSEENTER = 'mouseenter',\n  MOUSEMOVE = 'mousemove',\n  MOUSEDOWN = 'mousedown',\n  MOUSEUP = 'mouseup',\n  POINTERMOVE = 'pointermove',\n  POINTERDOWN = 'pointerdown',\n  POINTERUP = 'pointerup',\n  POINTERCANCEL = 'pointercancel',\n  LOSTPOINTERCAPTURE = 'lostpointercapture',\n  POINTEROUT = 'pointerout',\n  POINTERLEAVE = 'pointerleave',\n  POINTEROVER = 'pointerover',\n  POINTERENTER = 'pointerenter',\n  CONTEXTMENU = 'contextmenu',\n  TOUCHSTART = 'touchstart',\n  TOUCHEND = 'touchend',\n  TOUCHMOVE = 'touchmove',\n  TOUCHCANCEL = 'touchcancel',\n  WHEEL = 'wheel',\n  MAX_LAYERS_NUMBER = 5,\n  EVENTS = [[MOUSEENTER, '_pointerenter'], [MOUSEDOWN, '_pointerdown'], [MOUSEMOVE, '_pointermove'], [MOUSEUP, '_pointerup'], [MOUSELEAVE, '_pointerleave'], [TOUCHSTART, '_pointerdown'], [TOUCHMOVE, '_pointermove'], [TOUCHEND, '_pointerup'], [TOUCHCANCEL, '_pointercancel'], [MOUSEOVER, '_pointerover'], [WHEEL, '_wheel'], [CONTEXTMENU, '_contextmenu'], [POINTERDOWN, '_pointerdown'], [POINTERMOVE, '_pointermove'], [POINTERUP, '_pointerup'], [POINTERCANCEL, '_pointercancel'], [LOSTPOINTERCAPTURE, '_lostpointercapture']];\nvar EVENTS_MAP = {\n  mouse: (_mouse = {}, _defineProperty(_mouse, POINTEROUT, MOUSEOUT), _defineProperty(_mouse, POINTERLEAVE, MOUSELEAVE), _defineProperty(_mouse, POINTEROVER, MOUSEOVER), _defineProperty(_mouse, POINTERENTER, MOUSEENTER), _defineProperty(_mouse, POINTERMOVE, MOUSEMOVE), _defineProperty(_mouse, POINTERDOWN, MOUSEDOWN), _defineProperty(_mouse, POINTERUP, MOUSEUP), _defineProperty(_mouse, POINTERCANCEL, 'mousecancel'), _defineProperty(_mouse, \"pointerclick\", 'click'), _defineProperty(_mouse, \"pointerdblclick\", 'dblclick'), _mouse),\n  touch: (_touch = {}, _defineProperty(_touch, POINTEROUT, 'touchout'), _defineProperty(_touch, POINTERLEAVE, 'touchleave'), _defineProperty(_touch, POINTEROVER, 'touchover'), _defineProperty(_touch, POINTERENTER, 'touchenter'), _defineProperty(_touch, POINTERMOVE, TOUCHMOVE), _defineProperty(_touch, POINTERDOWN, TOUCHSTART), _defineProperty(_touch, POINTERUP, TOUCHEND), _defineProperty(_touch, POINTERCANCEL, TOUCHCANCEL), _defineProperty(_touch, \"pointerclick\", 'tap'), _defineProperty(_touch, \"pointerdblclick\", 'dbltap'), _touch),\n  pointer: (_pointer = {}, _defineProperty(_pointer, POINTEROUT, POINTEROUT), _defineProperty(_pointer, POINTERLEAVE, POINTERLEAVE), _defineProperty(_pointer, POINTEROVER, POINTEROVER), _defineProperty(_pointer, POINTERENTER, POINTERENTER), _defineProperty(_pointer, POINTERMOVE, POINTERMOVE), _defineProperty(_pointer, POINTERDOWN, POINTERDOWN), _defineProperty(_pointer, POINTERUP, POINTERUP), _defineProperty(_pointer, POINTERCANCEL, POINTERCANCEL), _defineProperty(_pointer, \"pointerclick\", 'pointerclick'), _defineProperty(_pointer, \"pointerdblclick\", 'pointerdblclick'), _pointer)\n};\nvar getEventType = function getEventType(type) {\n  if (type.indexOf('pointer') >= 0) {\n    return 'pointer';\n  }\n  if (type.indexOf('touch') >= 0) {\n    return 'touch';\n  }\n  return 'mouse';\n};\nvar getEventsMap = function getEventsMap(eventType) {\n  var type = getEventType(eventType);\n  if (type === 'pointer') {\n    return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n  }\n  if (type === 'touch') {\n    return EVENTS_MAP.touch;\n  }\n  if (type === 'mouse') {\n    return EVENTS_MAP.mouse;\n  }\n};\nfunction checkNoClip() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n    Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n  }\n  return attrs;\n}\nvar NO_POINTERS_MESSAGE = \"Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);\";\nexport var stages = [];\nexport var Stage = /*#__PURE__*/function (_Container) {\n  _inherits(Stage, _Container);\n  var _super = _createSuper(Stage);\n  function Stage(config) {\n    var _this;\n    _classCallCheck(this, Stage);\n    _this = _super.call(this, checkNoClip(config));\n    _this._pointerPositions = [];\n    _this._changedPointerPositions = [];\n    _this._buildDOM();\n    _this._bindContentEvents();\n    stages.push(_assertThisInitialized(_this));\n    _this.on('widthChange.konva heightChange.konva', _this._resizeDOM);\n    _this.on('visibleChange.konva', _this._checkVisibility);\n    _this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', function () {\n      checkNoClip(_this.attrs);\n    });\n    _this._checkVisibility();\n    return _this;\n  }\n  _createClass(Stage, [{\n    key: \"_validateAdd\",\n    value: function _validateAdd(child) {\n      var isLayer = child.getType() === 'Layer';\n      var isFastLayer = child.getType() === 'FastLayer';\n      var valid = isLayer || isFastLayer;\n      if (!valid) {\n        Util.throw('You may only add layers to the stage.');\n      }\n    }\n  }, {\n    key: \"_checkVisibility\",\n    value: function _checkVisibility() {\n      if (!this.content) {\n        return;\n      }\n      var style = this.visible() ? '' : 'none';\n      this.content.style.display = style;\n    }\n  }, {\n    key: \"setContainer\",\n    value: function setContainer(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr('container', container);\n      if (this.content) {\n        if (this.content.parentElement) {\n          this.content.parentElement.removeChild(this.content);\n        }\n        container.appendChild(this.content);\n      }\n      return this;\n    }\n  }, {\n    key: \"shouldDrawHit\",\n    value: function shouldDrawHit() {\n      return true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = typeof document !== 'undefined' && document.createElement('div');\n      return Container.prototype.clone.call(this, obj);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(Stage.prototype), \"destroy\", this).call(this);\n      var content = this.content;\n      if (content && Util._isInDocument(content)) {\n        this.container().removeChild(content);\n      }\n      var index = stages.indexOf(this);\n      if (index > -1) {\n        stages.splice(index, 1);\n      }\n      return this;\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n      if (!pos) {\n        Util.warn(NO_POINTERS_MESSAGE);\n        return null;\n      }\n      return {\n        x: pos.x,\n        y: pos.y\n      };\n    }\n  }, {\n    key: \"_getPointerById\",\n    value: function _getPointerById(id) {\n      return this._pointerPositions.find(function (p) {\n        return p.id === id;\n      });\n    }\n  }, {\n    key: \"getPointersPositions\",\n    value: function getPointersPositions() {\n      return this._pointerPositions;\n    }\n  }, {\n    key: \"getStage\",\n    value: function getStage() {\n      return this;\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this.content;\n    }\n  }, {\n    key: \"_toKonvaCanvas\",\n    value: function _toKonvaCanvas(config) {\n      config = config || {};\n      config.x = config.x || 0;\n      config.y = config.y || 0;\n      config.width = config.width || this.width();\n      config.height = config.height || this.height();\n      var canvas = new SceneCanvas({\n        width: config.width,\n        height: config.height,\n        pixelRatio: config.pixelRatio || 1\n      });\n      var _context = canvas.getContext()._context;\n      var layers = this.children;\n      if (config.x || config.y) {\n        _context.translate(-1 * config.x, -1 * config.y);\n      }\n      layers.forEach(function (layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n        var layerCanvas = layer._toKonvaCanvas(config);\n        _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n      });\n      return canvas;\n    }\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(pos) {\n      if (!pos) {\n        return null;\n      }\n      var layers = this.children,\n        len = layers.length,\n        end = len - 1,\n        n;\n      for (n = end; n >= 0; n--) {\n        var shape = layers[n].getIntersection(pos);\n        if (shape) {\n          return shape;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"_resizeDOM\",\n    value: function _resizeDOM() {\n      var width = this.width();\n      var height = this.height();\n      if (this.content) {\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n      }\n      this.bufferCanvas.setSize(width, height);\n      this.bufferHitCanvas.setSize(width, height);\n      this.children.forEach(function (layer) {\n        layer.setSize({\n          width: width,\n          height: height\n        });\n        layer.draw();\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(layer) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      _get(_getPrototypeOf(Stage.prototype), \"add\", this).call(this, layer);\n      var length = this.children.length;\n      if (length > MAX_LAYERS_NUMBER) {\n        Util.warn('The stage has ' + length + ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n      }\n      layer.setSize({\n        width: this.width(),\n        height: this.height()\n      });\n      layer.draw();\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n      return this;\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      return null;\n    }\n  }, {\n    key: \"getLayer\",\n    value: function getLayer() {\n      return null;\n    }\n  }, {\n    key: \"hasPointerCapture\",\n    value: function hasPointerCapture(pointerId) {\n      return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"setPointerCapture\",\n    value: function setPointerCapture(pointerId) {\n      PointerEvents.setPointerCapture(pointerId, this);\n    }\n  }, {\n    key: \"releaseCapture\",\n    value: function releaseCapture(pointerId) {\n      PointerEvents.releaseCapture(pointerId, this);\n    }\n  }, {\n    key: \"getLayers\",\n    value: function getLayers() {\n      return this.children;\n    }\n  }, {\n    key: \"_bindContentEvents\",\n    value: function _bindContentEvents() {\n      var _this2 = this;\n      if (!Konva.isBrowser) {\n        return;\n      }\n      EVENTS.forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          event = _ref2[0],\n          methodName = _ref2[1];\n        _this2.content.addEventListener(event, function (evt) {\n          _this2[methodName](evt);\n        }, {\n          passive: false\n        });\n      });\n    }\n  }, {\n    key: \"_pointerenter\",\n    value: function _pointerenter(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerenter, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_pointerover\",\n    value: function _pointerover(evt) {\n      this.setPointersPositions(evt);\n      var events = getEventsMap(evt.type);\n      this._fire(events.pointerover, {\n        evt: evt,\n        target: this,\n        currentTarget: this\n      });\n    }\n  }, {\n    key: \"_getTargetShape\",\n    value: function _getTargetShape(evenType) {\n      var shape = this[evenType + 'targetShape'];\n      if (shape && !shape.getStage()) {\n        shape = null;\n      }\n      return shape;\n    }\n  }, {\n    key: \"_pointerleave\",\n    value: function _pointerleave(evt) {\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var targetShape = this._getTargetShape(eventType);\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n      if (targetShape && eventsEnabled) {\n        targetShape._fireAndBubble(events.pointerout, {\n          evt: evt\n        });\n        targetShape._fireAndBubble(events.pointerleave, {\n          evt: evt\n        });\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this[eventType + 'targetShape'] = null;\n      } else if (eventsEnabled) {\n        this._fire(events.pointerleave, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n        this._fire(events.pointerout, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this.pointerPos = undefined;\n      this._pointerPositions = [];\n    }\n  }, {\n    key: \"_pointerdown\",\n    value: function _pointerdown(evt) {\n      var _this3 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = _this3.getIntersection(pos);\n        DD.justDragged = false;\n        Konva['_' + eventType + 'ListenClick'] = true;\n        var hasShape = shape && shape.isListening();\n        if (!hasShape) {\n          return;\n        }\n        if (Konva.capturePointerEventsEnabled) {\n          shape.setPointerCapture(pos.id);\n        }\n        _this3[eventType + 'ClickStartShape'] = shape;\n        shape._fireAndBubble(events.pointerdown, {\n          evt: evt,\n          pointerId: pos.id\n        });\n        triggeredOnShape = true;\n        var isTouch = evt.type.indexOf('touch') >= 0;\n        if (shape.preventDefault() && evt.cancelable && isTouch) {\n          evt.preventDefault();\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerdown, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._pointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointermove\",\n    value: function _pointermove(evt) {\n      var _this4 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n        evt.preventDefault();\n      }\n      this.setPointersPositions(evt);\n      var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n      if (!eventsEnabled) {\n        return;\n      }\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      var targetShape = this._getTargetShape(eventType);\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this4.getIntersection(pos);\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var differentTarget = targetShape !== shape;\n        if (differentTarget && targetShape) {\n          targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n          targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n        }\n        if (shape) {\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          if (differentTarget) {\n            shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n            shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n            _this4[eventType + 'targetShape'] = shape;\n          }\n          shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n        } else {\n          if (targetShape) {\n            _this4._fire(events.pointerover, {\n              evt: evt,\n              target: _this4,\n              currentTarget: _this4,\n              pointerId: pointerId\n            });\n            _this4[eventType + 'targetShape'] = null;\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointermove, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n    }\n  }, {\n    key: \"_pointerup\",\n    value: function _pointerup(evt) {\n      var _this5 = this;\n      var events = getEventsMap(evt.type);\n      var eventType = getEventType(evt.type);\n      if (!events) {\n        return;\n      }\n      this.setPointersPositions(evt);\n      var clickStartShape = this[eventType + 'ClickStartShape'];\n      var clickEndShape = this[eventType + 'ClickEndShape'];\n      var processedShapesIds = {};\n      var triggeredOnShape = false;\n      this._changedPointerPositions.forEach(function (pos) {\n        var shape = PointerEvents.getCapturedShape(pos.id) || _this5.getIntersection(pos);\n        if (shape) {\n          shape.releaseCapture(pos.id);\n          if (processedShapesIds[shape._id]) {\n            return;\n          }\n          processedShapesIds[shape._id] = true;\n        }\n        var pointerId = pos.id;\n        var event = {\n          evt: evt,\n          pointerId: pointerId\n        };\n        var fireDblClick = false;\n        if (Konva['_' + eventType + 'InDblClickWindow']) {\n          fireDblClick = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        } else if (!DD.justDragged) {\n          Konva['_' + eventType + 'InDblClickWindow'] = true;\n          clearTimeout(_this5[eventType + 'DblTimeout']);\n        }\n        _this5[eventType + 'DblTimeout'] = setTimeout(function () {\n          Konva['_' + eventType + 'InDblClickWindow'] = false;\n        }, Konva.dblClickWindow);\n        if (shape && shape.isListening()) {\n          triggeredOnShape = true;\n          _this5[eventType + 'ClickEndShape'] = shape;\n          shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n          if (Konva['_' + eventType + 'ListenClick'] && clickStartShape && clickStartShape === shape) {\n            shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n            if (fireDblClick && clickEndShape && clickEndShape === shape) {\n              shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n            }\n          }\n        } else {\n          _this5[eventType + 'ClickEndShape'] = null;\n          if (Konva['_' + eventType + 'ListenClick']) {\n            _this5._fire(events.pointerclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n          if (fireDblClick) {\n            _this5._fire(events.pointerdblclick, {\n              evt: evt,\n              target: _this5,\n              currentTarget: _this5,\n              pointerId: pointerId\n            });\n          }\n        }\n      });\n      if (!triggeredOnShape) {\n        this._fire(events.pointerup, {\n          evt: evt,\n          target: this,\n          currentTarget: this,\n          pointerId: this._changedPointerPositions[0].id\n        });\n      }\n      Konva['_' + eventType + 'ListenClick'] = false;\n      if (evt.cancelable && eventType !== 'touch') {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"_contextmenu\",\n    value: function _contextmenu(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, {\n          evt: evt\n        });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_wheel\",\n    value: function _wheel(evt) {\n      this.setPointersPositions(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, {\n          evt: evt\n        });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n    }\n  }, {\n    key: \"_pointercancel\",\n    value: function _pointercancel(evt) {\n      this.setPointersPositions(evt);\n      var shape = PointerEvents.getCapturedShape(evt.pointerId) || this.getIntersection(this.getPointerPosition());\n      if (shape) {\n        shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n      }\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"_lostpointercapture\",\n    value: function _lostpointercapture(evt) {\n      PointerEvents.releaseCapture(evt.pointerId);\n    }\n  }, {\n    key: \"setPointersPositions\",\n    value: function setPointersPositions(evt) {\n      var _this6 = this;\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n      if (evt.touches !== undefined) {\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        Array.prototype.forEach.call(evt.touches, function (touch) {\n          _this6._pointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n        Array.prototype.forEach.call(evt.changedTouches || evt.touches, function (touch) {\n          _this6._changedPointerPositions.push({\n            id: touch.identifier,\n            x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n            y: (touch.clientY - contentPosition.top) / contentPosition.scaleY\n          });\n        });\n      } else {\n        x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n        y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n        this._pointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n        this._changedPointerPositions = [{\n          x: x,\n          y: y,\n          id: Util._getFirstPointerId(evt)\n        }];\n      }\n    }\n  }, {\n    key: \"_setPointerPosition\",\n    value: function _setPointerPosition(evt) {\n      Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n      this.setPointersPositions(evt);\n    }\n  }, {\n    key: \"_getContentPosition\",\n    value: function _getContentPosition() {\n      if (!this.content || !this.content.getBoundingClientRect) {\n        return {\n          top: 0,\n          left: 0,\n          scaleX: 1,\n          scaleY: 1\n        };\n      }\n      var rect = this.content.getBoundingClientRect();\n      return {\n        top: rect.top,\n        left: rect.left,\n        scaleX: rect.width / this.content.clientWidth || 1,\n        scaleY: rect.height / this.content.clientHeight || 1\n      };\n    }\n  }, {\n    key: \"_buildDOM\",\n    value: function _buildDOM() {\n      this.bufferCanvas = new SceneCanvas({\n        width: this.width(),\n        height: this.height()\n      });\n      this.bufferHitCanvas = new HitCanvas({\n        pixelRatio: 1,\n        width: this.width(),\n        height: this.height()\n      });\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.container();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      container.innerHTML = '';\n      this.content = document.createElement('div');\n      this.content.style.position = 'relative';\n      this.content.style.userSelect = 'none';\n      this.content.className = 'konvajs-content';\n      this.content.setAttribute('role', 'presentation');\n      container.appendChild(this.content);\n      this._resizeDOM();\n    }\n  }, {\n    key: \"cache\",\n    value: function cache() {\n      Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n      return this;\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      return this;\n    }\n  }, {\n    key: \"batchDraw\",\n    value: function batchDraw() {\n      this.getChildren().forEach(function (layer) {\n        layer.batchDraw();\n      });\n      return this;\n    }\n  }]);\n  return Stage;\n}(Container);\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');","map":{"version":3,"names":["Util","Factory","Container","Konva","SceneCanvas","HitCanvas","DD","_registerNode","PointerEvents","STAGE","STRING","PX","MOUSEOUT","MOUSELEAVE","MOUSEOVER","MOUSEENTER","MOUSEMOVE","MOUSEDOWN","MOUSEUP","POINTERMOVE","POINTERDOWN","POINTERUP","POINTERCANCEL","LOSTPOINTERCAPTURE","POINTEROUT","POINTERLEAVE","POINTEROVER","POINTERENTER","CONTEXTMENU","TOUCHSTART","TOUCHEND","TOUCHMOVE","TOUCHCANCEL","WHEEL","MAX_LAYERS_NUMBER","EVENTS","EVENTS_MAP","mouse","touch","pointer","getEventType","type","indexOf","getEventsMap","eventType","pointerEventsEnabled","checkNoClip","attrs","clipFunc","clipWidth","clipHeight","warn","NO_POINTERS_MESSAGE","stages","Stage","config","_pointerPositions","_changedPointerPositions","_buildDOM","_bindContentEvents","push","on","_resizeDOM","_checkVisibility","child","isLayer","getType","isFastLayer","valid","throw","content","style","visible","display","container","charAt","className","slice","document","getElementsByClassName","id","getElementById","_setAttr","parentElement","removeChild","appendChild","layers","children","len","length","n","clear","obj","createElement","prototype","clone","call","_isInDocument","index","splice","pos","x","y","find","p","width","height","canvas","pixelRatio","_context","getContext","translate","forEach","layer","isVisible","layerCanvas","_toKonvaCanvas","drawImage","_canvas","getWidth","getPixelRatio","getHeight","end","shape","getIntersection","bufferCanvas","setSize","bufferHitCanvas","draw","rest","arguments","i","add","isBrowser","pointerId","hasPointerCapture","setPointerCapture","releaseCapture","event","methodName","addEventListener","evt","passive","setPointersPositions","events","_fire","pointerenter","target","currentTarget","pointerover","evenType","getStage","targetShape","_getTargetShape","eventsEnabled","isDragging","hitOnDragEnabled","_fireAndBubble","pointerout","pointerleave","pointerPos","undefined","triggeredOnShape","justDragged","hasShape","isListening","capturePointerEventsEnabled","pointerdown","isTouch","preventDefault","cancelable","node","processedShapesIds","getCapturedShape","differentTarget","Object","assign","_id","pointermove","clickStartShape","clickEndShape","fireDblClick","clearTimeout","setTimeout","dblClickWindow","pointerup","pointerclick","pointerdblclick","getPointerPosition","createEvent","contentPosition","_getContentPosition","window","touches","Array","identifier","clientX","left","scaleX","clientY","top","scaleY","changedTouches","_getFirstPointerId","getBoundingClientRect","rect","clientWidth","clientHeight","innerHTML","position","userSelect","setAttribute","getChildren","batchDraw","nodeType","addGetterSetter"],"sources":["/Users/tylerwilson/Documents/GitHub/KahaniRectangle/node_modules/konva/lib/Stage.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { Factory } from './Factory.js';\nimport { Container } from './Container.js';\nimport { Konva } from './Global.js';\nimport { SceneCanvas, HitCanvas } from './Canvas.js';\nimport { DD } from './DragAndDrop.js';\nimport { _registerNode } from './Global.js';\nimport * as PointerEvents from './PointerEvents.js';\nvar STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexport const stages = [];\nexport class Stage extends Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                var className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        var layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        var content = this.content;\n        if (content && Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        var index = stages.indexOf(this);\n        if (index > -1) {\n            stages.splice(index, 1);\n        }\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        var canvas = new SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        var _context = canvas.getContext()._context;\n        var layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            var layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        var layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        var width = this.width();\n        var height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (var i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        var length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerenter, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        this._fire(events.pointerover, {\n            evt: evt,\n            target: this,\n            currentTarget: this,\n        });\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var targetShape = this._getTargetShape(eventType);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = undefined;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        var triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            var shape = this.getIntersection(pos);\n            DD.justDragged = false;\n            Konva['_' + eventType + 'ListenClick'] = true;\n            const hasShape = shape && shape.isListening();\n            if (!hasShape) {\n                return;\n            }\n            if (Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (DD.isDragging && DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        var eventsEnabled = !DD.isDragging || Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        var targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            var differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, Object.assign({}, event), shape);\n                targetShape._fireAndBubble(events.pointerleave, Object.assign({}, event), shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, Object.assign({}, event), targetShape);\n                    shape._fireAndBubble(events.pointerenter, Object.assign({}, event), targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, Object.assign({}, event));\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        var processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DD.justDragged) {\n                Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, Object.assign({}, event));\n                if (Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, Object.assign({}, event));\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, Object.assign({}, event));\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        var contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        var rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Konva.isBrowser) {\n            return;\n        }\n        var container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nStage.prototype.nodeType = STAGE;\n_registerNode(Stage);\nFactory.addGetterSetter(Stage, 'container');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}